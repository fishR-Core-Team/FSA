[{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://fishr-core-team.github.io/FSA/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://fishr-core-team.github.io/FSA/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://fishr-core-team.github.io/FSA/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://fishr-core-team.github.io/FSA/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting members fishR-core-team. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://fishr-core-team.github.io/FSA/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"https://fishr-core-team.github.io/FSA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Derek H. Ogle. Author, maintainer. Jason C. Doll. Author. . Powell Wheeler. Author. Alexis Dinno. Author.            Provided base functionality dunnTest()","code":""},{"path":"https://fishr-core-team.github.io/FSA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ogle DH, Doll JC, Wheeler AP, Dinno (2023). FSA: Simple Fisheries Stock Assessment Methods. R package version 0.9.5, https://fishr-core-team.github.io/FSA/.","code":"@Manual{,   title = {FSA: Simple Fisheries Stock Assessment Methods},   author = {Derek H. Ogle and Jason C. Doll and A. Powell Wheeler and Alexis Dinno},   year = {2023},   note = {R package version 0.9.5},   url = {https://fishr-core-team.github.io/FSA/}, }"},{"path":"https://fishr-core-team.github.io/FSA/index.html","id":"fsa-fisheries-stock-assessment-","dir":"","previous_headings":"","what":"FSA (Fisheries Stock Assessment)","title":"Simple Fisheries Stock Assessment Methods","text":"FSA package provides R functions conduct typical introductory fisheries analyses. Example analyses use FSA can found Introductory Fisheries Analyses R book (see note ) fishR website. Please cite FSA use FSA publication.  ","code":""},{"path":"https://fishr-core-team.github.io/FSA/index.html","id":"installation","dir":"","previous_headings":"FSA (Fisheries Stock Assessment)","what":"Installation","title":"Simple Fisheries Stock Assessment Methods","text":"recent stable version CRAN may installed development version may installed GitHub may need R Tools installed system install development version GitHub. See instructions (R Tools Windows R Tools Mac OS X).  ","code":"install.packages(\"FSA\") if (!require('remotes')) install.packages('remotes'); require('remotes') remotes::install_github('fishR-Core-Team/FSA')"},{"path":"https://fishr-core-team.github.io/FSA/index.html","id":"questions--comments--problems-or-contributions","dir":"","previous_headings":"FSA (Fisheries Stock Assessment)","what":"Questions / Comments / Problems or Contributions","title":"Simple Fisheries Stock Assessment Methods","text":"Report questions, comments, bug reports issues page. always looking others contribute FSA. Please feel free make pull request via GitHub contact maintainers. Please adhere Code Conduct.  ","code":""},{"path":"https://fishr-core-team.github.io/FSA/index.html","id":"note-about-fsa-and-introduction-to-fisheries-analysis-with-r-book","dir":"","previous_headings":"FSA (Fisheries Stock Assessment)","what":"Note about FSA and Introduction to Fisheries Analysis with R book","title":"Simple Fisheries Stock Assessment Methods","text":"Versions FSA beginning v0.9.0 may longer work shown IFAR book. Many functions changed book published, . Thus, need install FSA version v0.9.0 assured functions work described IFAR book.  ","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/BluegillJL.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture histories (2 samples) of Bluegill from Jewett Lake, MI. — BluegillJL","title":"Capture histories (2 samples) of Bluegill from Jewett Lake, MI. — BluegillJL","text":"line consists capture history two samples Bluegill (Lepomis macrochirus) Jewett Lake (MI). file contains capture histories Bluegill larger 6-.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/BluegillJL.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Capture histories (2 samples) of Bluegill from Jewett Lake, MI. — BluegillJL","text":"data frame 277 observations following 2 variables. first numeric vector indicator variables first sample (1=captured) second numeric vector indicator variables second sample (1=captured)","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/BluegillJL.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Capture histories (2 samples) of Bluegill from Jewett Lake, MI. — BluegillJL","text":"example 8.1 Schneider, J.C. 1998. Lake fish population estimates mark--recapture methods. Chapter 8 Schneider, J.C. (ed.) 2000. Manual fisheries survey methods II: periodic updates. Michigan Department Natural Resources, Fisheries Special Report 25, Ann Arbor. [(?) http://www.michigandnr.com/publications/pdfs/IFR/manual/SMII%20Chapter08.pdf.] CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/BluegillJL.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Capture histories (2 samples) of Bluegill from Jewett Lake, MI. — BluegillJL","text":"Population Size Abundance Mark-Recapture Capture-Recapture Petersen Capture History","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/BluegillJL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capture histories (2 samples) of Bluegill from Jewett Lake, MI. — BluegillJL","text":"","code":"str(BluegillJL) #> 'data.frame':\t277 obs. of  2 variables: #>  $ first : int  1 0 1 0 1 1 1 1 1 1 ... #>  $ second: int  0 1 0 1 0 0 0 0 0 0 ... head(BluegillJL) #>   first second #> 1     1      0 #> 2     0      1 #> 3     1      0 #> 4     0      1 #> 5     1      0 #> 6     1      0"},{"path":"https://fishr-core-team.github.io/FSA/reference/BrookTroutTH.html","id":null,"dir":"Reference","previous_headings":"","what":"Catch-at-age for Tobin Harbor, Isle Royale Brook Trout. — BrookTroutTH","title":"Catch-at-age for Tobin Harbor, Isle Royale Brook Trout. — BrookTroutTH","text":"Catch--age fyke nets 1996-1998 “Coaster” Brook Trout (Salvelinus fontinalis) Tobin Harbor, Isle Royale, Lake Superior.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/BrookTroutTH.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Catch-at-age for Tobin Harbor, Isle Royale Brook Trout. — BrookTroutTH","text":"data frame 7 observations following 2 variables. age numeric vector assigned ages catch numeric vector number Brook Trout caught","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/BrookTroutTH.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Catch-at-age for Tobin Harbor, Isle Royale Brook Trout. — BrookTroutTH","text":"Quinlan, H.R. 1999. Biological Characteristics Coaster Brook Trout Isle Royale National Park, Michigan, 1996-98. U.S. Fish Wildlife Service Ashland Fishery Resources Office report. November 1999. CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/BrookTroutTH.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Catch-at-age for Tobin Harbor, Isle Royale Brook Trout. — BrookTroutTH","text":"Mortality Catch Curve Chapman-Robson","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/BrookTroutTH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Catch-at-age for Tobin Harbor, Isle Royale Brook Trout. — BrookTroutTH","text":"","code":"str(BrookTroutTH) #> 'data.frame':\t7 obs. of  2 variables: #>  $ age  : int  0 1 2 3 4 5 6 #>  $ catch: int  39 93 112 45 58 12 8 head(BrookTroutTH) #>   age catch #> 1   0    39 #> 2   1    93 #> 3   2   112 #> 4   3    45 #> 5   4    58 #> 6   5    12 plot(log(catch)~age,data=BrookTroutTH)"},{"path":"https://fishr-core-team.github.io/FSA/reference/ChinookArg.html","id":null,"dir":"Reference","previous_headings":"","what":"Lengths and weights for Chinook Salmon from three locations in Argentina. — ChinookArg","title":"Lengths and weights for Chinook Salmon from three locations in Argentina. — ChinookArg","text":"Lengths weights Chinook Salmon three locations Argentina.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ChinookArg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lengths and weights for Chinook Salmon from three locations in Argentina. — ChinookArg","text":"data frame 112 observations following 3 variables: tl Total length (cm) w Weight (kg) loc Capture location (Argentina, Petrohue, Puyehue)","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ChinookArg.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lengths and weights for Chinook Salmon from three locations in Argentina. — ChinookArg","text":"Figure 4 Soto, D., . Arismendi, C. Di Prinzio, F. Jara. 2007. Establishment Chinook Salmon (Oncorhynchus tshawytscha) Pacific basins southern South America potential ecosystem implications. Revista Chilena d Historia Natural, 80:81-98. [(?) http://www.scielo.cl/pdf/rchnat/v80n1/art07.pdf.] CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ChinookArg.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Lengths and weights for Chinook Salmon from three locations in Argentina. — ChinookArg","text":"Weight-Length","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/ChinookArg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lengths and weights for Chinook Salmon from three locations in Argentina. — ChinookArg","text":"","code":"str(ChinookArg) #> 'data.frame':\t112 obs. of  3 variables: #>  $ tl : num  120 115 111 110 110 ... #>  $ w  : num  17.9 17.2 16.8 15.8 14.3 13.8 12.8 11.7 12.8 14.8 ... #>  $ loc: Factor w/ 3 levels \"Argentina\",\"Petrohue\",..: 1 1 1 1 1 1 1 1 1 1 ... head(ChinookArg) #>      tl    w       loc #> 1 120.1 17.9 Argentina #> 2 115.0 17.2 Argentina #> 3 111.2 16.8 Argentina #> 4 110.2 15.8 Argentina #> 5 110.0 14.3 Argentina #> 6 109.7 13.8 Argentina op <- par(mfrow=c(2,2),pch=19,mar=c(3,3,0.5,0.5),mgp=c(1.9,0.5,0),tcl=-0.2) plot(w~tl,data=ChinookArg,subset=loc==\"Argentina\") plot(w~tl,data=ChinookArg,subset=loc==\"Petrohue\") plot(w~tl,data=ChinookArg,subset=loc==\"Puyehue\") par(op)"},{"path":"https://fishr-core-team.github.io/FSA/reference/CodNorwegian.html","id":null,"dir":"Reference","previous_headings":"","what":"Stock and recruitment data for Norwegian cod, 1937-1960. — CodNorwegian","title":"Stock and recruitment data for Norwegian cod, 1937-1960. — CodNorwegian","text":"Norwegian cod (Gadus morhua) stock recruitment year, 1937-1960.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/CodNorwegian.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stock and recruitment data for Norwegian cod, 1937-1960. — CodNorwegian","text":"data frame 24 observations following 3 variables: year Year data recruits Recruits -- year-class strength index stock Spawning stock index","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/CodNorwegian.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Stock and recruitment data for Norwegian cod, 1937-1960. — CodNorwegian","text":"Garrod, D.J. 1967. Population dynamics Arcto-Norwegian Cod. Journal Fisheries Research Board Canada, 24:145-190. CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/CodNorwegian.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Stock and recruitment data for Norwegian cod, 1937-1960. — CodNorwegian","text":"Stock-Recruit Recruitment","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/CodNorwegian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stock and recruitment data for Norwegian cod, 1937-1960. — CodNorwegian","text":"","code":"str(CodNorwegian) #> 'data.frame':\t24 obs. of  3 variables: #>  $ year    : int  1937 1938 1939 1940 1941 1942 1943 1944 1945 1946 ... #>  $ recruits: int  146 31 17 26 43 58 113 75 99 70 ... #>  $ stock   : int  118 164 180 172 151 139 122 114 139 140 ... head(CodNorwegian) #>   year recruits stock #> 1 1937      146   118 #> 2 1938       31   164 #> 3 1939       17   180 #> 4 1940       26   172 #> 5 1941       43   151 #> 6 1942       58   139 op <- par(mfrow=c(1,2),pch=19,mar=c(3,3,0.5,0.5),mgp=c(1.9,0.5,0),tcl=-0.2) plot(recruits~year,data=CodNorwegian,type=\"l\") plot(recruits~stock,data=CodNorwegian)  par(op)"},{"path":"https://fishr-core-team.github.io/FSA/reference/CutthroatAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture histories (9 samples) of Cutthroat Trout from Auke Lake. — CutthroatAL","title":"Capture histories (9 samples) of Cutthroat Trout from Auke Lake. — CutthroatAL","text":"Individual capture histories Cutthroat Trout (Oncorhynchus clarki) Auke Lake, Alaska, samples taken 1998-2006.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/CutthroatAL.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Capture histories (9 samples) of Cutthroat Trout from Auke Lake. — CutthroatAL","text":"data frame 1684 observations following 10 variables. id Unique identification numbers fish y1998 Indicator variable whether fish captured 1998 (1=captured) y1999 Indicator variable whether fish captured 1999 (1=captured) y2000 Indicator variable whether fish captured 2000 (1=captured) y2001 Indicator variable whether fish captured 2001 (1=captured) y2002 Indicator variable whether fish captured 2002 (1=captured) y2003 Indicator variable whether fish captured 2003 (1=captured) y2004 Indicator variable whether fish captured 2004 (1=captured) y2005 Indicator variable whether fish captured 2005 (1=captured) y2006 Indicator variable whether fish captured 2006 (1=captured)","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/CutthroatAL.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Capture histories (9 samples) of Cutthroat Trout from Auke Lake. — CutthroatAL","text":"Appendix .3 Harding, R.D., C.L. Hoover, R.P. Marshall. 2010. Abundance Cutthroat Trout Auke Lake, Southeast Alaska, 2005 2006. Alaska Department Fish Game Fisheries Data Series . 10-82. [(?) http://www.sf.adfg.state.ak.us/FedAidPDFs/FDS10-82.pdf.] CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/CutthroatAL.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Capture histories (9 samples) of Cutthroat Trout from Auke Lake. — CutthroatAL","text":"Entered “RMark” format (see CutthroatALf FSAdata) converted individual format capHistConvert","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/CutthroatAL.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Capture histories (9 samples) of Cutthroat Trout from Auke Lake. — CutthroatAL","text":"Population Size Abundance Mark-Recapture Capture-Recapture Jolly-Seber Capture History","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/CutthroatAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capture histories (9 samples) of Cutthroat Trout from Auke Lake. — CutthroatAL","text":"","code":"str(CutthroatAL) #> 'data.frame':\t1684 obs. of  10 variables: #>  $ id   : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ y1998: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ y1999: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ y2000: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ y2001: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ y2002: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ y2003: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ y2004: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ y2005: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ y2006: int  1 1 1 1 1 1 1 1 1 1 ... head(CutthroatAL) #>   id y1998 y1999 y2000 y2001 y2002 y2003 y2004 y2005 y2006 #> 1  1     0     0     0     0     0     0     0     0     1 #> 2  2     0     0     0     0     0     0     0     0     1 #> 3  3     0     0     0     0     0     0     0     0     1 #> 4  4     0     0     0     0     0     0     0     0     1 #> 5  5     0     0     0     0     0     0     0     0     1 #> 6  6     0     0     0     0     0     0     0     0     1"},{"path":"https://fishr-core-team.github.io/FSA/reference/Ecoli.html","id":null,"dir":"Reference","previous_headings":"","what":"Population growth of Escherichia coli. — Ecoli","title":"Population growth of Escherichia coli. — Ecoli","text":"number Escherichia coli cells versus time.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Ecoli.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population growth of Escherichia coli. — Ecoli","text":"data frame 8 observations following 2 variables: days Elapsed duration experiment cells Number cells population","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Ecoli.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population growth of Escherichia coli. — Ecoli","text":"McKendrick, .G. M. Kesava Pai. 1911. Rate Multiplication Micro-Organisms: Mathematical Study. Proceedings Royal Society Edinburgh. 31:649-655. CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Ecoli.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Population growth of Escherichia coli. — Ecoli","text":"Nonlinear Model ","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/FSA-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"DEFUNCT functions. — FSA-defunct","title":"DEFUNCT functions. — FSA-defunct","text":"functions part FSA now removed.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/FSA-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DEFUNCT functions. — FSA-defunct","text":"","code":"bootCase(...)  chooseColors(...)  compIntercepts(...)  compSlopes(...)  diags(...)  filterD(...)  fitPlot(...)  fsaNews(...)  hoCoef(...)  mapvalues(...)  plotBinResp(...)  residPlot(...)  Subset(...)"},{"path":"https://fishr-core-team.github.io/FSA/reference/FSA-defunct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DEFUNCT functions. — FSA-defunct","text":"... Additional arguments pass .","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/FSA-internals.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions. — .onAttach","title":"Internal functions. — .onAttach","text":"Internal functions common several functions FSA.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/FSA-internals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions. — .onAttach","text":"","code":".onAttach(lib, pkg, ...)"},{"path":"https://fishr-core-team.github.io/FSA/reference/FSA.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisheries stock assessment methods and data. — FSA","title":"Fisheries stock assessment methods and data. — FSA","text":"Functions support basic fisheries stock assessment methods.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/FSA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fisheries stock assessment methods and data. — FSA","text":"Functions package can used perform variety basic fisheries stock assessment methods. Detailed descriptions functions available Introductory Fisheries Analysis R book (Ogle 2016) (see fishR(\"IFAR\")). Vignettes boxed examples “Analysis Interpretation Freshwater Fisheries Data” book can viewed fishR(\"AIFFD\"). Questions, comments, suggestions given GitHub FSA Issues page. Packages related functionality author FSAdata package contains additional data sets. FSAsim package simulation routines various fisheries methods. FSAWs package contains functions developing validating standard weight equations.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/FSA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fisheries stock assessment methods and data. — FSA","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/FSA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fisheries stock assessment methods and data. — FSA","text":"Maintainer: Derek H. Ogle DerekOgle51@gmail.com (ORCID) Authors: Jason C. Doll jason.doll@fmarion.edu . Powell Wheeler powell.wheeler@gmail.com Alexis Dinno alexis.dinno@pdx.edu (Provided base functionality dunnTest())","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Mirex.html","id":null,"dir":"Reference","previous_headings":"","what":"Mirex concentration, weight, capture year, and species of Lake Ontario salmon. — Mirex","title":"Mirex concentration, weight, capture year, and species of Lake Ontario salmon. — Mirex","text":"Mirex concentration, weight, capture year, species Lake Ontario Coho Chinook salmon.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Mirex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mirex concentration, weight, capture year, and species of Lake Ontario salmon. — Mirex","text":"data frame 122 observations following 4 variables. year numeric vector capture years weight numeric vector salmon weights (kg) mirex numeric vector mirex concentration salmon tissue (mg/kg) species factor levels chinook coho","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Mirex.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mirex concentration, weight, capture year, and species of Lake Ontario salmon. — Mirex","text":"(actual data) Makarewicz, J.C., E.Damaske, T.W. Lewis, M. Merner. 2003. Trend analysis reveals recent reduction mirex concentrations Coho (Oncorhynchus kisutch) Chinook (O. tshawytscha) Salmon Lake Ontario. Environmental Science Technology, 37:1521-1527. CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Mirex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mirex concentration, weight, capture year, and species of Lake Ontario salmon. — Mirex","text":"year variable converted factor shown example.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Mirex.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Mirex concentration, weight, capture year, and species of Lake Ontario salmon. — Mirex","text":"Linear models ","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Mirex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mirex concentration, weight, capture year, and species of Lake Ontario salmon. — Mirex","text":"","code":"Mirex$year <- factor(Mirex$year) lm1 <- lm(mirex~weight*year*species,data=Mirex) anova(lm1) #> Analysis of Variance Table #>  #> Response: mirex #>                     Df  Sum Sq  Mean Sq F value    Pr(>F)     #> weight               1 0.22298 0.222980 60.0785 8.586e-12 *** #> year                 5 0.50667 0.101333 27.3028 < 2.2e-16 *** #> species              1 0.00000 0.000001  0.0004 0.9840448     #> weight:year          5 0.09491 0.018982  5.1143 0.0003287 *** #> weight:species       1 0.00240 0.002397  0.6457 0.4235926     #> year:species         5 0.02338 0.004677  1.2601 0.2873654     #> weight:year:species  5 0.01650 0.003299  0.8890 0.4916170     #> Residuals           98 0.36372 0.003711                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"},{"path":"https://fishr-core-team.github.io/FSA/reference/PSDlit.html","id":null,"dir":"Reference","previous_headings":"","what":"Gabelhouse five-cell length categories for various species. — PSDlit","title":"Gabelhouse five-cell length categories for various species. — PSDlit","text":"Cutoffs Gabelhouse five-cell length categories variety species.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/PSDlit.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gabelhouse five-cell length categories for various species. — PSDlit","text":"data frame 58 observations following 11 variables: species Species name. stock.Stock length inches. quality.Quality length inches. preferred.Preferred length inches. memorable.Memorable length inches. trophy.Trophy length inches. stock.cm Stock length cm. quality.cm Quality length cm. preferred.cm Preferred length cm. memorable.cm Memorable length cm. trophy.cm Trophy length cm. source Literature source length entries.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/PSDlit.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gabelhouse five-cell length categories for various species. — PSDlit","text":"Original summary table Dr. Michael Hansen, University Wisconsin-Stevens Point. Additional species added package author literature.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/PSDlit.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Gabelhouse five-cell length categories for various species. — PSDlit","text":"Size structure Proportional size structure Relative stock density Proportional stock density","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/PSDlit.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Gabelhouse five-cell length categories for various species. — PSDlit","text":"6-Size Structure.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/PSDlit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gabelhouse five-cell length categories for various species. — PSDlit","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/PSDlit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gabelhouse five-cell length categories for various species. — PSDlit","text":"","code":"str(PSDlit) #> 'data.frame':\t70 obs. of  12 variables: #>  $ species     : chr  \"Arctic Grayling\" \"Bighead Carp\" \"Bigmouth Buffalo\" \"Black Bullhead\" ... #>  $ stock.in    : num  8 11.8 11 6 15.8 ... #>  $ quality.in  : num  12 21.2 18 9 28.2 ... #>  $ preferred.in: num  16 26.8 24 12 35.5 ... #>  $ memorable.in: num  20 35 30 15 46.5 12 35 10 20 NA ... #>  $ trophy.in   : num  22 43.8 37 18 58.2 ... #>  $ stock.cm    : num  20 30 28 15 40 13 30 8 20 20 ... #>  $ quality.cm  : int  30 54 46 23 72 20 51 15 30 33 ... #>  $ preferred.cm: int  40 68 61 30 90 25 76 20 40 NA ... #>  $ memorable.cm: int  50 89 76 39 118 30 89 25 50 NA ... #>  $ trophy.cm   : num  55 111 94 46 148 38 114 30 60 NA ... #>  $ source      : chr  \"Hyatt (2000)\" \"Phelps and Willis (2013)\" \"Bister et al. (2000)\" \"Gabelhouse (1984a)\" ... head(PSDlit) #>            species stock.in quality.in preferred.in memorable.in trophy.in #> 1  Arctic Grayling     8.00      12.00        16.00         20.0     22.00 #> 2     Bighead Carp    11.75      21.25        26.75         35.0     43.75 #> 3 Bigmouth Buffalo    11.00      18.00        24.00         30.0     37.00 #> 4   Black Bullhead     6.00       9.00        12.00         15.0     18.00 #> 5       Black Carp    15.75      28.25        35.50         46.5     58.25 #> 6    Black Crappie     5.00       8.00        10.00         12.0     15.00 #>   stock.cm quality.cm preferred.cm memorable.cm trophy.cm #> 1       20         30           40           50        55 #> 2       30         54           68           89       111 #> 3       28         46           61           76        94 #> 4       15         23           30           39        46 #> 5       40         72           90          118       148 #> 6       13         20           25           30        38 #>                     source #> 1             Hyatt (2000) #> 2 Phelps and Willis (2013) #> 3     Bister et al. (2000) #> 4       Gabelhouse (1984a) #> 5 Phelps and Willis (2013) #> 6       Gabelhouse (1984a)"},{"path":"https://fishr-core-team.github.io/FSA/reference/PikeNY.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarized multiple mark-recapture data for all Northern Pike from Buckhorn Marsh, NY. — PikeNY","title":"Summarized multiple mark-recapture data for all Northern Pike from Buckhorn Marsh, NY. — PikeNY","text":"Summary results capture histories (number captured, number recaptured fish, number unmarked fish marked) Buckhorn Marsh Northern Pike (Esox lucius).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/PikeNY.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summarized multiple mark-recapture data for all Northern Pike from Buckhorn Marsh, NY. — PikeNY","text":"data frame 21 observations following 4 variables: date Capture date n Total fish captured sample m Marked fish captured sample R Marked fish returned population","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/PikeNY.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summarized multiple mark-recapture data for all Northern Pike from Buckhorn Marsh, NY. — PikeNY","text":"New York Power Authority. 2004. Use Buckhorn Marsh Grand Island tributaries Northern Pike spawning nursery. Technical report, New York Power Authority, January 2004. Niagara Power Project (FERC . 2216). CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/PikeNY.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Summarized multiple mark-recapture data for all Northern Pike from Buckhorn Marsh, NY. — PikeNY","text":"Population Size Abundance Mark-Recapture Capture-Recapture Schnabel Schumacher-Eschmeyer","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/PikeNY.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarized multiple mark-recapture data for all Northern Pike from Buckhorn Marsh, NY. — PikeNY","text":"","code":"str(PikeNY) #> 'data.frame':\t21 obs. of  4 variables: #>  $ date: Factor w/ 21 levels \"1-Apr\",\"1-May\",..: 15 16 19 20 1 12 17 21 3 4 ... #>  $ n   : int  2 3 2 3 20 18 14 9 17 6 ... #>  $ m   : int  0 0 0 0 2 3 4 4 14 5 ... #>  $ R   : int  2 3 2 3 20 18 13 9 17 6 ... head(PikeNY) #>     date  n m  R #> 1 28-Mar  2 0  2 #> 2 29-Mar  3 0  3 #> 3 30-Mar  2 0  2 #> 4 31-Mar  3 0  3 #> 5  1-Apr 20 2 20 #> 6  2-Apr 18 3 18"},{"path":"https://fishr-core-team.github.io/FSA/reference/PikeNYPartial1.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture histories (4 samples), in capture history format, of a subset of Northern Pike from Buckhorn Marsh, NY. — PikeNYPartial1","title":"Capture histories (4 samples), in capture history format, of a subset of Northern Pike from Buckhorn Marsh, NY. — PikeNYPartial1","text":"line consists capture history four samples Northern Pike (Esox lucius) Buckhorn Marsh. file contains capture histories pike captured April 1-4.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/PikeNYPartial1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Capture histories (4 samples), in capture history format, of a subset of Northern Pike from Buckhorn Marsh, NY. — PikeNYPartial1","text":"data frame 57 observations following 4 variables. id unique identification numbers first Indicator variable first sample (1=captured) second Indicator variable second sample (1=captured) third Indicator variable third sample (1=captured) fourth Indicator variable fourth sample (1=captured)","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/PikeNYPartial1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Capture histories (4 samples), in capture history format, of a subset of Northern Pike from Buckhorn Marsh, NY. — PikeNYPartial1","text":"Summary values taken Table C-1 New York Power Authority. 2004. Use Buckhorn Marsh Grand Island tributaries Northern Pike spawning nursery. Technical report, New York Power Authority, January 2004. Niagara Power Project (FERC . 2216). CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/PikeNYPartial1.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Capture histories (4 samples), in capture history format, of a subset of Northern Pike from Buckhorn Marsh, NY. — PikeNYPartial1","text":"Population Size Abundance Mark-Recapture Capture-Recapture Schnabel Schumacher-Eschmeyer Capture History","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/PikeNYPartial1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capture histories (4 samples), in capture history format, of a subset of Northern Pike from Buckhorn Marsh, NY. — PikeNYPartial1","text":"","code":"str(PikeNYPartial1) #> 'data.frame':\t57 obs. of  5 variables: #>  $ id    : int  2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 ... #>  $ first : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ second: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ third : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ fourth: int  0 0 0 0 0 0 0 0 0 0 ... head(PikeNYPartial1) #>     id first second third fourth #> 1 2001     1      0     0      0 #> 2 2002     1      0     0      0 #> 3 2003     1      0     0      0 #> 4 2004     1      0     0      0 #> 5 2005     1      0     0      0 #> 6 2006     1      0     0      0"},{"path":"https://fishr-core-team.github.io/FSA/reference/SMBassLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Catch-effort data for Little Silver Lake (Ont) Smallmouth Bass. — SMBassLS","title":"Catch-effort data for Little Silver Lake (Ont) Smallmouth Bass. — SMBassLS","text":"Catch-effort data Smallmouth Bass (Micropterus dolomieu) Little Silver Lake, Ont.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SMBassLS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Catch-effort data for Little Silver Lake (Ont) Smallmouth Bass. — SMBassLS","text":"data frame 10 observations following 3 variables: day Day catch catch Number smallmouth bass caught effort Number traps set per day","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SMBassLS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Catch-effort data for Little Silver Lake (Ont) Smallmouth Bass. — SMBassLS","text":"Omand, D.N. 1951. study populations fish based catch-effort statistics. Journal Wildlife Management, 15:88-98. CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SMBassLS.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Catch-effort data for Little Silver Lake (Ont) Smallmouth Bass. — SMBassLS","text":"Population size Abundance Depletion methods Leslie method DeLury method Catchability","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/SMBassLS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Catch-effort data for Little Silver Lake (Ont) Smallmouth Bass. — SMBassLS","text":"","code":"str(SMBassLS) #> 'data.frame':\t10 obs. of  3 variables: #>  $ day   : int  1 2 3 4 5 6 7 8 9 10 #>  $ catch : int  131 69 99 78 56 76 49 42 63 47 #>  $ effort: int  7 7 7 7 7 7 7 7 7 7 head(SMBassLS) #>   day catch effort #> 1   1   131      7 #> 2   2    69      7 #> 3   3    99      7 #> 4   4    78      7 #> 5   5    56      7 #> 6   6    76      7"},{"path":"https://fishr-core-team.github.io/FSA/reference/SMBassWB.html","id":null,"dir":"Reference","previous_headings":"","what":"Growth increment data for West Bearskin Lake, MN, Smallmouth Bass. — SMBassWB","title":"Growth increment data for West Bearskin Lake, MN, Smallmouth Bass. — SMBassWB","text":"Growth data Smallmouth Bass (Micropterus dolomieu) captured West Bearskin Lake, MN. Five samples collected three years (1988-1990) two gears (fall -- trapnets, spring -- electrofishing).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SMBassWB.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Growth increment data for West Bearskin Lake, MN, Smallmouth Bass. — SMBassWB","text":"data frame 445 observations following 20 variables: species Species fish (SMB fish file) lake Lake fish captured (WB fish file) gear Gear used capture fish (T=Trapnet E=Electrofishing) yearcap Year fish captured (1988, 1989, 1990) fish unique identifier fish agecap Assigned age--capture fish (scales) lencap Total length--capture fish (mm) anu1 Magnified scale radius (mm) 1st annulus anu2 Magnified scale radius (mm) 2nd annulus anu3 Magnified scale radius (mm) 3rd annulus anu4 Magnified scale radius (mm) 4th annulus anu5 Magnified scale radius (mm) 5th annulus anu6 Magnified scale radius (mm) 6th annulus anu7 Magnified scale radius (mm) 7th annulus anu8 Magnified scale radius (mm) 8th annulus anu9 Magnified scale radius (mm) 9th annulus anu10 Magnified scale radius (mm) 10th annulus anu11 Magnified scale radius (mm) 11th annulus anu12 Magnified scale radius (mm) 12th annulus radcap Total scale radius time capture","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SMBassWB.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Growth increment data for West Bearskin Lake, MN, Smallmouth Bass. — SMBassWB","text":"Data linear growth modeling software distributed support Weisberg, S. 1993. Using hard-part increment data estimate age environmental effects. Canadian Journal Fisheries Aquatic Sciences 50:1229-1237. CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SMBassWB.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Growth increment data for West Bearskin Lake, MN, Smallmouth Bass. — SMBassWB","text":"Data one-fish-per-line format.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SMBassWB.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Growth increment data for West Bearskin Lake, MN, Smallmouth Bass. — SMBassWB","text":"Growth increment analysis Weisberg linear growth model Back-Calculation","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/SMBassWB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Growth increment data for West Bearskin Lake, MN, Smallmouth Bass. — SMBassWB","text":"","code":"str(SMBassWB) #> 'data.frame':\t445 obs. of  20 variables: #>  $ species: Factor w/ 1 level \"SMB\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ lake   : Factor w/ 1 level \"WB\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ gear   : Factor w/ 2 levels \"E\",\"T\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ yearcap: int  1988 1988 1988 1988 1988 1988 1989 1990 1990 1990 ... #>  $ fish   : num  5 3 2 4 6 7 50 482 768 428 ... #>  $ agecap : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ lencap : int  71 64 57 68 72 80 55 75 75 71 ... #>  $ anu1   : num  1.91 1.88 1.09 1.32 1.59 ... #>  $ anu2   : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ anu3   : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ anu4   : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ anu5   : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ anu6   : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ anu7   : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ anu8   : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ anu9   : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ anu10  : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ anu11  : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ anu12  : num  NA NA NA NA NA NA NA NA NA NA ... #>  $ radcap : num  1.91 1.88 1.1 1.33 1.59 ... head(SMBassWB) #>   species lake gear yearcap fish agecap lencap    anu1 anu2 anu3 anu4 anu5 anu6 #> 1     SMB   WB    E    1988    5      1     71 1.90606   NA   NA   NA   NA   NA #> 2     SMB   WB    E    1988    3      1     64 1.87707   NA   NA   NA   NA   NA #> 3     SMB   WB    E    1988    2      1     57 1.09227   NA   NA   NA   NA   NA #> 4     SMB   WB    E    1988    4      1     68 1.31848   NA   NA   NA   NA   NA #> 5     SMB   WB    E    1988    6      1     72 1.59283   NA   NA   NA   NA   NA #> 6     SMB   WB    E    1988    7      1     80 1.91602   NA   NA   NA   NA   NA #>   anu7 anu8 anu9 anu10 anu11 anu12  radcap #> 1   NA   NA   NA    NA    NA    NA 1.90606 #> 2   NA   NA   NA    NA    NA    NA 1.87707 #> 3   NA   NA   NA    NA    NA    NA 1.09736 #> 4   NA   NA   NA    NA    NA    NA 1.33108 #> 5   NA   NA   NA    NA    NA    NA 1.59283 #> 6   NA   NA   NA    NA    NA    NA 1.91602"},{"path":"https://fishr-core-team.github.io/FSA/reference/Schnute.html","id":null,"dir":"Reference","previous_headings":"","what":"The four-parameter growth function from Schnute (1981). — Schnute","title":"The four-parameter growth function from Schnute (1981). — Schnute","text":"four-parameter growth function Schnute (1981).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Schnute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The four-parameter growth function from Schnute (1981). — Schnute","text":"","code":"Schnute(   t,   case = 1,   t1 = NULL,   t3 = NULL,   L1 = NULL,   L3 = NULL,   a = NULL,   b = NULL )"},{"path":"https://fishr-core-team.github.io/FSA/reference/Schnute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The four-parameter growth function from Schnute (1981). — Schnute","text":"t numeric vector ages model growth. case string indicates case Schnute growth function use. t1 (young) age corresponds L1. Set minimum value t default. t3 (old) age corresponds L3. Set maximum value t default. L1 mean size/length t1. L3 mean size/length t3. dimensionless parameter related time/age inflection point. b dimensionless parameter related size/length inflection point.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Schnute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The four-parameter growth function from Schnute (1981). — Schnute","text":"Schnute returns predicted size given case function provided parameter values.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Schnute.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"The four-parameter growth function from Schnute (1981). — Schnute","text":"None specifically, 12-Individual Growth related.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Schnute.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The four-parameter growth function from Schnute (1981). — Schnute","text":"Schnute, J. 1981. versatile growth model statistical stable parameters. Canadian Journal Fisheries Aquatic Sciences 38:1128-1140.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/Schnute.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The four-parameter growth function from Schnute (1981). — Schnute","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Schnute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The four-parameter growth function from Schnute (1981). — Schnute","text":"","code":"## See the formulae growthFunShow(\"Schnute\",1,plot=TRUE)  #> expression(E(L[t]) == bgroup(\"[\", L[1]^{ #>     b #> } + (L[3]^{ #>     b #> } - L[1]^{ #>     b #> }) * ~frac(1 - e^{ #>     -a * (~t ~ -~t[1]) #> }, 1 - e^{ #>     -a * (~t[3] ~ -~t[1]) #> }), \"]\")^{ #>     ~frac(1, b) #> }) growthFunShow(\"Schnute\",2,plot=TRUE)  #> expression(E(L[t]) == L[1] * e^{ #>     log ~ bgroup(\"(\", frac(L[3], L[1]), \")\") * ~frac(1 - e^{ #>         -a * (~t ~ -~t[1]) #>     }, 1 - e^{ #>         -a * (~t[3] ~ -~t[1]) #>     }) #> }) growthFunShow(\"Schnute\",3,plot=TRUE)  #> expression(E(L[t]) == bgroup(\"[\", L[1]^{ #>     b #> } + (L[3]^{ #>     b #> } - L[1]^{ #>     b #> }) * ~frac(~t ~ -~t[1], ~t[3] ~ -~t[1]), \"]\")^{ #>     ~frac(1, b) #> }) growthFunShow(\"Schnute\",4,plot=TRUE)  #> expression(E(L[t]) == L[1] * e^{ #>     log ~ bgroup(\"(\", frac(L[3], L[1]), \")\") * ~frac(~t ~ -~t[1],  #>         ~t[3] ~ -~t[1]) #> })  ## Simple examples ages <- 1:15 s1 <- Schnute(ages,case=1,t1=1,t3=15,L1=30,L3=400,a=0.3,b=1) s2 <- Schnute(ages,case=2,t1=1,t3=15,L1=30,L3=400,a=0.3,b=1) s3 <- Schnute(ages,case=3,t1=1,t3=15,L1=30,L3=400,a=0.3,b=1) s4 <- Schnute(ages,case=4,t1=1,t3=15,L1=30,L3=400,a=0.3,b=1)  plot(s1~ages,type=\"l\",lwd=2) lines(s2~ages,lwd=2,col=\"red\") lines(s3~ages,lwd=2,col=\"blue\") lines(s4~ages,lwd=2,col=\"green\")"},{"path":"https://fishr-core-team.github.io/FSA/reference/SchnuteRichards.html","id":null,"dir":"Reference","previous_headings":"","what":"The five-parameter growth function from Schnute and Richards (1990). — SchnuteRichards","title":"The five-parameter growth function from Schnute and Richards (1990). — SchnuteRichards","text":"five-parameter growth function Schnute Richards (1990). Note function slightly modified (‘+’ changed ‘-’ ‘’ parameter positive) original Schnute Richards (1990)","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SchnuteRichards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The five-parameter growth function from Schnute and Richards (1990). — SchnuteRichards","text":"","code":"SchnuteRichards(t, Linf = NULL, k = NULL, a = NULL, b = NULL, c = NULL)"},{"path":"https://fishr-core-team.github.io/FSA/reference/SchnuteRichards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The five-parameter growth function from Schnute and Richards (1990). — SchnuteRichards","text":"t numeric vector ages model growth. Linf Mean asymptotic length. k \"growth coefficient\" units (year^(-c)). dimensionless parameter b dimensionless parameter. c dimensionless parameter.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SchnuteRichards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The five-parameter growth function from Schnute and Richards (1990). — SchnuteRichards","text":"SchnuteRichards returns predicted size given provided parameter values.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SchnuteRichards.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"The five-parameter growth function from Schnute and Richards (1990). — SchnuteRichards","text":"None specifically, 12-Individual Growth related.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SchnuteRichards.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The five-parameter growth function from Schnute and Richards (1990). — SchnuteRichards","text":"Schnute, J.T. L.J. Richards. 1990. unified approach analysis fish growth, maturity, survivorship data. Canadian Journal Fisheries Aquatic Sciences. 47:24-40.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/SchnuteRichards.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The five-parameter growth function from Schnute and Richards (1990). — SchnuteRichards","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SchnuteRichards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The five-parameter growth function from Schnute and Richards (1990). — SchnuteRichards","text":"","code":"## See the formulae growthFunShow(\"SchnuteRichards\",plot=TRUE)  #> expression(E(L[t]) == L[infinity] * ~bgroup(\"(\", 1 - a * e^{ #>     -kt^{ #>         c #>     } #> }, \")\")^{ #>     frac(1, b) #> })  ## Simple examples ages <- 1:15 s1 <- SchnuteRichards(ages,Linf=100,k=0.03,a=0.01,b=0.005,c=2) plot(s1~ages,type=\"l\",lwd=2)"},{"path":"https://fishr-core-team.github.io/FSA/reference/SpotVA1.html","id":null,"dir":"Reference","previous_headings":"","what":"Age and length of spot. — SpotVA1","title":"Age and length of spot. — SpotVA1","text":"Ages (otoliths) lengths Virginia Spot (Leiostomus xanthurus).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SpotVA1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Age and length of spot. — SpotVA1","text":"data frame 403 observations following 2 variables: tl Measured total lengths (inches) age Ages assigned examination otoliths","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SpotVA1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Age and length of spot. — SpotVA1","text":"Extracted Table 1 Chapter 8 (Spot) VMRC Final Report Finfish Ageing, 2002 Center Quantitative Fisheries Ecology Old Dominion University. CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SpotVA1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Age and length of spot. — SpotVA1","text":"Final length measurements simulated adding uniform error value beginning length category.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/SpotVA1.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Age and length of spot. — SpotVA1","text":"Growth von Bertalanffy","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/SpotVA1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Age and length of spot. — SpotVA1","text":"","code":"str(SpotVA1) #> 'data.frame':\t403 obs. of  2 variables: #>  $ tl : num  6.5 6.3 7.4 7.1 7.7 7.1 7.9 7.3 7.5 7.3 ... #>  $ age: int  0 0 0 0 0 0 0 0 0 0 ... head(SpotVA1) #>    tl age #> 1 6.5   0 #> 2 6.3   0 #> 3 7.4   0 #> 4 7.1   0 #> 5 7.7   0 #> 6 7.1   0 plot(tl~age,data=SpotVA1)"},{"path":"https://fishr-core-team.github.io/FSA/reference/Summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary statistics for a numeric variable. — Summarize","title":"Summary statistics for a numeric variable. — Summarize","text":"Summary statistics single numeric variable, possibly separated levels factor variable variables. function similar summary numeric variable.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary statistics for a numeric variable. — Summarize","text":"","code":"Summarize(object, ...)  # S3 method for default Summarize(   object,   digits = getOption(\"digits\"),   na.rm = TRUE,   exclude = NULL,   nvalid = c(\"different\", \"always\", \"never\"),   percZero = c(\"different\", \"always\", \"never\"),   ... )  # S3 method for formula Summarize(   object,   data = NULL,   digits = getOption(\"digits\"),   na.rm = TRUE,   exclude = NULL,   nvalid = c(\"different\", \"always\", \"never\"),   percZero = c(\"different\", \"always\", \"never\"),   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/Summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary statistics for a numeric variable. — Summarize","text":"object vector numeric data. ... implemented. digits single numeric indicates number decimals round numeric summaries. na.rm logical indicates whether numeric missing values (NA) removed (=TRUE, default) . exclude string contains level excluded factor variable. nvalid string indicates “validn” result handled. \"always\" “validn” always shown \"never\" “validn” never shown. However, \"different\" (DEFAULT), “validn” shown differs “n” (least one group differs “n” summarized multiple groups). percZero string indicates “percZero” result handled. \"always\" “percZero” always shown \"never\" “percZero” never shown. However, \"different\" (DEFAULT), “percZero” shown greater zero (least one group greater zero summarized multiple groups). data data.frame contains variables formula.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Summarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary statistics for a numeric variable. — Summarize","text":"named vector data frame (quantitative variable separated one two factor variables) summary statistics numeric data.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Summarize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary statistics for a numeric variable. — Summarize","text":"function primarily used formulas following types (quant factor generically represent quantitative/numeric factor variables, respectively): Numerical summaries include results summary (min, Q1, mean, median, Q3, max) sample size, valid sample size (sample size minus number NAs), standard deviation (.e., sd). NA values removed calculations na.rm=TRUE (DEFAULT). number digits returned results controlled digits=.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Summarize.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Summary statistics for a numeric variable. — Summarize","text":"Students often need examine basic statistics quantitative variable separated different levels categorical variable. results may obtained tapply, , aggregate (functions packages), use functions obvious newbie students return results format obvious newbie students. Thus, formula method Summarize allows newbie students use common notation (.e., formula) easily compute summary statistics quantitative variable separated levels factor.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/Summarize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary statistics for a numeric variable. — Summarize","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/Summarize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary statistics for a numeric variable. — Summarize","text":"","code":"## Create a data.frame of \"data\" n <- 102 d <- data.frame(y=c(0,0,NA,NA,NA,runif(n-5)),                 w=sample(7:9,n,replace=TRUE),                 v=sample(0:2,n,replace=TRUE),                 g1=factor(sample(c(\"A\",\"B\",\"C\",NA),n,replace=TRUE)),                 g2=factor(sample(c(\"male\",\"female\",\"UNKNOWN\"),n,replace=TRUE)),                 g3=sample(c(\"a\",\"b\",\"c\",\"d\"),n,replace=TRUE),                 stringsAsFactors=FALSE)  # typical output of summary() for a numeric variable summary(d$y)    #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>  0.0000  0.1934  0.4811  0.4845  0.7576  0.9925       3   # this function            Summarize(d$y,digits=3) #>        n   nvalid     mean       sd      min       Q1   median       Q3  #>  102.000   99.000    0.485    0.304    0.000    0.193    0.481    0.758  #>      max percZero  #>    0.993    2.020  Summarize(~y,data=d,digits=3) #>        n   nvalid     mean       sd      min       Q1   median       Q3  #>  102.000   99.000    0.485    0.304    0.000    0.193    0.481    0.758  #>      max percZero  #>    0.993    2.020  Summarize(y~1,data=d,digits=3) #>        n   nvalid     mean       sd      min       Q1   median       Q3  #>  102.000   99.000    0.485    0.304    0.000    0.193    0.481    0.758  #>      max percZero  #>    0.993    2.020   # note that nvalid is not shown if there are no NAs and #   percZero is not shown if there are no zeros Summarize(~w,data=d,digits=3) #>       n    mean      sd     min      Q1  median      Q3     max  #> 102.000   8.039   0.702   7.000   8.000   8.000   9.000   9.000  Summarize(~v,data=d,digits=3) #>        n     mean       sd      min       Q1   median       Q3      max  #>  102.000    1.137    0.797    0.000    0.250    1.000    2.000    2.000  #> percZero  #>   25.490   # note that the nvalid and percZero results can be forced to be shown Summarize(~w,data=d,digits=3,nvalid=\"always\",percZero=\"always\") #>        n   nvalid     mean       sd      min       Q1   median       Q3  #>  102.000  102.000    8.039    0.702    7.000    8.000    8.000    9.000  #>      max percZero  #>    9.000    0.000   ## Numeric vector by levels of a factor variable Summarize(y~g1,data=d,digits=3) #>   g1  n nvalid  mean    sd   min    Q1 median    Q3   max percZero #> 1  A 23     22 0.492 0.298 0.000 0.301  0.445 0.694 0.950    4.545 #> 2  B 19     19 0.400 0.296 0.000 0.143  0.353 0.666 0.885    5.263 #> 3  C 24     24 0.560 0.287 0.058 0.287  0.588 0.778 0.953    0.000 Summarize(y~g2,data=d,digits=3) #>        g2  n nvalid  mean    sd   min    Q1 median    Q3   max percZero #> 1 UNKNOWN 29     29 0.484 0.313 0.002 0.175  0.436 0.750 0.950    0.000 #> 2  female 33     31 0.550 0.326 0.000 0.265  0.546 0.818 0.993    3.226 #> 3    male 40     39 0.433 0.275 0.000 0.206  0.420 0.660 0.950    2.564 Summarize(y~g2,data=d,digits=3,exclude=\"UNKNOWN\") #>       g2  n nvalid  mean    sd min    Q1 median    Q3   max percZero #> 1 female 33     31 0.550 0.326   0 0.265  0.546 0.818 0.993    3.226 #> 2   male 40     39 0.433 0.275   0 0.206  0.420 0.660 0.950    2.564  ## Numeric vector by levels of two factor variables Summarize(y~g1+g2,data=d,digits=3) #>   g1      g2 n nvalid  mean    sd   min    Q1 median    Q3   max percZero #> 1  A UNKNOWN 7      7 0.467 0.324 0.063 0.243  0.436 0.676 0.930    0.000 #> 2  B UNKNOWN 7      7 0.406 0.312 0.002 0.173  0.343 0.666 0.820    0.000 #> 3  C UNKNOWN 6      6 0.525 0.367 0.058 0.281  0.489 0.837 0.950    0.000 #> 4  A  female 7      7 0.557 0.332 0.000 0.415  0.466 0.835 0.931   14.286 #> 5  B  female 6      6 0.550 0.294 0.108 0.372  0.603 0.757 0.885    0.000 #> 6  C  female 9      9 0.520 0.309 0.067 0.185  0.546 0.765 0.953    0.000 #> 7  A    male 9      8 0.458 0.276 0.109 0.282  0.370 0.660 0.950    0.000 #> 8  B    male 6      6 0.244 0.237 0.000 0.034  0.234 0.404 0.567   16.667 #> 9  C    male 9      9 0.622 0.224 0.248 0.497  0.629 0.799 0.903    0.000 Summarize(y~g1+g2,data=d,digits=3,exclude=\"UNKNOWN\") #>   g1     g2 n nvalid  mean    sd   min    Q1 median    Q3   max percZero #> 1  A female 7      7 0.557 0.332 0.000 0.415  0.466 0.835 0.931   14.286 #> 2  B female 6      6 0.550 0.294 0.108 0.372  0.603 0.757 0.885    0.000 #> 3  C female 9      9 0.520 0.309 0.067 0.185  0.546 0.765 0.953    0.000 #> 4  A   male 9      8 0.458 0.276 0.109 0.282  0.370 0.660 0.950    0.000 #> 5  B   male 6      6 0.244 0.237 0.000 0.034  0.234 0.404 0.567   16.667 #> 6  C   male 9      9 0.622 0.224 0.248 0.497  0.629 0.799 0.903    0.000  ## What happens if RHS of formula is not a factor Summarize(y~w,data=d,digits=3) #>   w  n nvalid  mean    sd   min    Q1 median    Q3   max percZero #> 1 7 23     22 0.496 0.285 0.058 0.290  0.415 0.704 0.993    0.000 #> 2 8 52     50 0.471 0.296 0.007 0.200  0.462 0.692 0.950    0.000 #> 3 9 27     27 0.500 0.341 0.000 0.173  0.514 0.833 0.950    7.407  ## Summarizing multiple variables in a data.frame (must reduce to numerics) lapply(as.list(d[,1:3]),Summarize,digits=4) #> $y #>        n   nvalid     mean       sd      min       Q1   median       Q3  #> 102.0000  99.0000   0.4845   0.3036   0.0000   0.1934   0.4811   0.7576  #>      max percZero  #>   0.9925   2.0202  #>  #> $w #>        n     mean       sd      min       Q1   median       Q3      max  #> 102.0000   8.0392   0.7025   7.0000   8.0000   8.0000   9.0000   9.0000  #>  #> $v #>        n     mean       sd      min       Q1   median       Q3      max  #> 102.0000   1.1373   0.7965   0.0000   0.2500   1.0000   2.0000   2.0000  #> percZero  #>  25.4902  #>"},{"path":"https://fishr-core-team.github.io/FSA/reference/WR79.html","id":null,"dir":"Reference","previous_headings":"","what":"Ages and lengths for a hypothetical sample from Westerheim and Ricker (1979). — WR79","title":"Ages and lengths for a hypothetical sample from Westerheim and Ricker (1979). — WR79","text":"Ages lengths hypothetical sample Westerheim Ricker (1979).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WR79.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ages and lengths for a hypothetical sample from Westerheim and Ricker (1979). — WR79","text":"data frame 2369 observations following 3 variables: ID Unique fish identifiers len Length individual fish age Age individual fish","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WR79.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ages and lengths for a hypothetical sample from Westerheim and Ricker (1979). — WR79","text":"Simulated Table 2A Westerheim, S.J. W.E. Ricker. 1979. Bias using age-length key estimate age-frequency distributions. Journal Fisheries Research Board Canada. 35:184-189. CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WR79.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ages and lengths for a hypothetical sample from Westerheim and Ricker (1979). — WR79","text":"Age-length data 5-cm increments taken exactly Table 2A source sample hypothetical population year-class strength varied ratio 2:1 rate increase length decreased age. Actual lengths 5-cm interval simulated uniform distribution. aged fish file randomly selected assessed age assigned according information Table 2A.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WR79.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Ages and lengths for a hypothetical sample from Westerheim and Ricker (1979). — WR79","text":"Age-Length Key","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WR79.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ages and lengths for a hypothetical sample from Westerheim and Ricker (1979). — WR79","text":"","code":"str(WR79) #> 'data.frame':\t2369 obs. of  3 variables: #>  $ ID : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ len: int  37 37 39 37 37 35 42 42 42 44 ... #>  $ age: int  NA NA NA NA 4 4 NA NA NA NA ... head(WR79) #>   ID len age #> 1  1  37  NA #> 2  2  37  NA #> 3  3  39  NA #> 4  4  37  NA #> 5  5  37   4 #> 6  6  35   4  ## Extract the aged sample WR79.aged <- subset(WR79,!is.na(age)) str(WR79.aged) #> 'data.frame':\t203 obs. of  3 variables: #>  $ ID : int  5 6 21 32 40 57 59 70 94 117 ... #>  $ len: int  37 35 42 43 40 41 44 46 45 47 ... #>  $ age: int  4 4 4 4 4 4 4 4 4 4 ...  ## Extract the length sample WR79.length <- subset(WR79,is.na(age)) str(WR79.length) #> 'data.frame':\t2166 obs. of  3 variables: #>  $ ID : int  1 2 3 4 7 8 9 10 11 12 ... #>  $ len: int  37 37 39 37 42 42 42 44 44 43 ... #>  $ age: int  NA NA NA NA NA NA NA NA NA NA ..."},{"path":"https://fishr-core-team.github.io/FSA/reference/WSlit.html","id":null,"dir":"Reference","previous_headings":"","what":"All known standard weight equations. — WSlit","title":"All known standard weight equations. — WSlit","text":"Parameters known standard weight equations.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WSlit.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All known standard weight equations. — WSlit","text":"data frame observations following 13 variables: species Species name. Use wsVal() see list available species. units Units measurements. Metric uses lengths mm weight grams. English uses lengths inches weight pounds. type Type equation (linear quadratic). ref Reference quartile (75, 50, 25). measure type length measurement used -- total length (TL) fork length (FL). method type method used derive equation (Regression Line Percentile (RLP; see Murphy et al. (1990) Murphy et al. (1991)), Empirical Percentile (EmP; see Gerow et al. (2005)), ). min.len Minimum total length (mm , depending units) equation applied. max.len Maximum total length (mm , depending units) equation applied. int intercept model. slope slope linear equation linear coefficient quadratic equation. quad quadratic coefficient quadratic equation. source Source equation. match sources given Neumann et al. (2012). comment Comments use equation.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WSlit.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"All known standard weight equations. — WSlit","text":"equations can found Neumann et al. (2012). Species Neumann et al. (2012) noted comments variable.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WSlit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"All known standard weight equations. — WSlit","text":"minimum TL English units derived rounding converted minimum TL metric units seemed like common units (inches, half inches, quarter inches).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WSlit.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"All known standard weight equations. — WSlit","text":"Relative weight Standard weight Condition","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WSlit.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"All known standard weight equations. — WSlit","text":"8-Condition.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WSlit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"All known standard weight equations. — WSlit","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Gerow, K.G., R.C. Anderson-Sprecher, W.. Hubert. 2005. new method compute standard weight equations reduces length-related bias. North American Journal Fisheries Management 25:1288–1300. Murphy, B.R., M.L. Brown, T.. Springer. 1990. Evaluation relative weight (Wr) index, new applications walleye. North American Journal Fisheries Management 10:85–97. Murphy, B. R., D. W. Willis, T. . Springer. 1991. relative weight index fisheries management: Status needs. Fisheries (Bethesda) 16(2):30–38. Neumann, R.M., C.S. Guy, D.W. Willis. 2012. Length, Weight, Associated Indices. Chapter 14 Zale, .V., D.L. Parrish, T.M. Sutton, editors. Fisheries Techniques. American Fisheries Society, Bethesda, MD.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/WSlit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All known standard weight equations. — WSlit","text":"","code":"str(WSlit) #> 'data.frame':\t205 obs. of  13 variables: #>  $ species: chr  \"Aegean Chub\" \"African Sharptooth Catfish\" \"Alabama Bass\" \"Ankara Nase\" ... #>  $ units  : chr  \"metric\" \"metric\" \"metric\" \"metric\" ... #>  $ type   : chr  \"quadratic\" \"quadratic\" \"linear\" \"quadratic\" ... #>  $ ref    : int  75 75 75 75 75 75 50 75 75 25 ... #>  $ measure: chr  \"TL\" \"TL\" \"TL\" \"TL\" ... #>  $ method : chr  \"EmP\" \"EmP\" \"RLP\" \"EmP\" ... #>  $ min.len: num  70 180 100 70 150 150 160 6 150 70 ... #>  $ max.len: num  220 450 NA 240 NA NA NA NA NA 390 ... #>  $ int    : num  -3.8 -3.67 -5.6 -10.02 -5.24 ... #>  $ slope  : num  1.78 1.89 3.29 7.4 3.08 ... #>  $ quad   : num  0.329 0.209 NA -0.971 NA ... #>  $ source : chr  \"Giannetto et al. (2012)\" \"Emiroglu et al. (2018)\" \"Dicenzo et al. (1995)\" \"Emiroglu et al. (2020)\" ... #>  $ comment: chr  \"none\" \"only from Sakarya River Basin (Turkey)\" \"min.len not made clear (assumed same as Spotted Bass); same as Spotted Bass (Alabama subspecies)\" \"only from Turkey\" ... head(WSlit) #>                      species  units      type ref measure method min.len #> 1                Aegean Chub metric quadratic  75      TL    EmP      70 #> 2 African Sharptooth Catfish metric quadratic  75      TL    EmP     180 #> 3               Alabama Bass metric    linear  75      TL    RLP     100 #> 4                Ankara Nase metric quadratic  75      TL    EmP      70 #> 5            Arctic Grayling metric    linear  75      TL    RLP     150 #> 6            Arctic Grayling metric    linear  75      TL    EmP     150 #>   max.len     int  slope    quad                  source #> 1     220  -3.801 1.7830  0.3290 Giannetto et al. (2012) #> 2     450  -3.668 1.8850  0.2087  Emiroglu et al. (2018) #> 3      NA  -5.598 3.2904      NA   Dicenzo et al. (1995) #> 4     240 -10.017 7.4020 -0.9710  Emiroglu et al. (2020) #> 5      NA  -5.241 3.0830      NA    Gilham et al. (2021) #> 6      NA  -5.279 3.0960      NA    Gilham et al. (2021) #>                                                                                            comment #> 1                                                                                             none #> 2                                                           only from Sakarya River Basin (Turkey) #> 3 min.len not made clear (assumed same as Spotted Bass); same as Spotted Bass (Alabama subspecies) #> 4                                                                                 only from Turkey #> 5                                           authors note that either RLP or EmP method may be used #> 6                                           authors note that either RLP or EmP method may be used"},{"path":"https://fishr-core-team.github.io/FSA/reference/WhitefishLC.html","id":null,"dir":"Reference","previous_headings":"","what":"Assigned ages from two readers on three structures for Lake Whitefish from Lake Champlain. — WhitefishLC","title":"Assigned ages from two readers on three structures for Lake Whitefish from Lake Champlain. — WhitefishLC","text":"Assigned ages two readers three structures Lake Whitefish (Coregonus clupeaformis) Lake Champlain 2009.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WhitefishLC.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Assigned ages from two readers on three structures for Lake Whitefish from Lake Champlain. — WhitefishLC","text":"data frame 151 observations following 11 variables: fishID unique fish identification number tl Total length (mm) scale1 Assessed age scales first reader scale2 Assessed age scales second reader scaleC Consensus age scales reader finray1 Assessed age fin rays first reader finray2 Assessed age fin rays second reader finrayC Consensus age fin rays reader otolith1 Assessed age otoliths first reader otolith2 Assessed age otoliths second reader otolithC Consensus age otoliths reader","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WhitefishLC.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Assigned ages from two readers on three structures for Lake Whitefish from Lake Champlain. — WhitefishLC","text":"Data Herbst, S.J. J.E. Marsden. 2011. Comparison precision bias scale, fin ray, otolith age estimates lake whitefish (Coregonus clupeaformis) Lake Champlain. Journal Great Lakes Research. 37:386-389. Contributed Seth Herbst. use educational purposes without permission author. CSV file","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/WhitefishLC.html","id":"topic-s-","dir":"Reference","previous_headings":"","what":"Topic(s)","title":"Assigned ages from two readers on three structures for Lake Whitefish from Lake Champlain. — WhitefishLC","text":"Age Ageing Error Precision Bias Age Comparisons","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/WhitefishLC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assigned ages from two readers on three structures for Lake Whitefish from Lake Champlain. — WhitefishLC","text":"","code":"str(WhitefishLC) #> 'data.frame':\t151 obs. of  11 variables: #>  $ fishID  : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ tl      : int  345 334 348 300 330 316 508 475 340 173 ... #>  $ scale1  : int  3 4 7 4 3 4 6 4 3 1 ... #>  $ scale2  : int  3 3 5 3 3 4 7 5 3 1 ... #>  $ scaleC  : int  3 4 6 4 3 4 7 5 3 1 ... #>  $ finray1 : int  3 3 3 3 4 2 6 9 2 2 ... #>  $ finray2 : int  3 3 3 2 3 3 6 9 3 1 ... #>  $ finrayC : int  3 3 3 3 4 3 6 9 3 1 ... #>  $ otolith1: int  3 3 3 3 3 6 9 11 3 1 ... #>  $ otolith2: int  3 3 3 3 3 5 10 12 4 1 ... #>  $ otolithC: int  3 3 3 3 3 6 10 11 4 1 ... head(WhitefishLC) #>   fishID  tl scale1 scale2 scaleC finray1 finray2 finrayC otolith1 otolith2 #> 1      1 345      3      3      3       3       3       3        3        3 #> 2      2 334      4      3      4       3       3       3        3        3 #> 3      3 348      7      5      6       3       3       3        3        3 #> 4      4 300      4      3      4       3       2       3        3        3 #> 5      5 330      3      3      3       4       3       4        3        3 #> 6      6 316      4      4      4       2       3       3        6        5 #>   otolithC #> 1        3 #> 2        3 #> 3        3 #> 4        3 #> 5        3 #> 6        6"},{"path":"https://fishr-core-team.github.io/FSA/reference/addZeroCatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds zeros for catches of species not collected in some sampling events. — addZeroCatch","title":"Adds zeros for catches of species not collected in some sampling events. — addZeroCatch","text":"Adds zeros catches species captured sampling event captured least one sampling event (.e., adds zeros data.frame capture events species observed).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/addZeroCatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds zeros for catches of species not collected in some sampling events. — addZeroCatch","text":"","code":"addZeroCatch(df, eventvar, specvar, zerovar, na.rm = TRUE)"},{"path":"https://fishr-core-team.github.io/FSA/reference/addZeroCatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds zeros for catches of species not collected in some sampling events. — addZeroCatch","text":"df data.frame contains capture summary data described details. eventvar string variable identifies unique capture events. specvar string vector strings variable(s) identify “species” (multiple variables, species, sex, life stage, example) captured. See examples. zerovar string vector strings variable(s) set equal zero. See details examples. na.rm logical indicates rows specvar NA removed adding zeros. See details.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/addZeroCatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds zeros for catches of species not collected in some sampling events. — addZeroCatch","text":"data.frame structure df rows zero observation data appended.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/addZeroCatch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds zeros for catches of species not collected in some sampling events. — addZeroCatch","text":"data.frame df must contain column identifies unique capture event (given eventvar), column name species captured (given specvar), column contains number species captured (potentially given zerovar; see details). sampling event species combinations catch information exist identified new data.frame contains zero catch combinations created. new data.frame appended original data.frame construct data.frame contains complete catch information -- .e., including zeros species events species captured. data.frame may contain information related catch, number recaptured fish, number fish released, etc. additional variables can included zerovar zeros added variables well (e.g., catch species zero, number recaptures must also zero). variables given eventvar, specvar, zerovar assumed related eventvar specvar (e.g., date, gear type, habitat) , thus, repeated variables. situations fish captured events, df may contain rows value eventvar specvar. rows important zeros need added observed species events. However, situations, <NA> species appear resulting data.frame. unlikely “missing” species needed removed na.rm=TRUE (DEFAULT) used. One test results function creating frequency table eventvar specvar. either case, table contain value cell table. See examples.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/addZeroCatch.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Adds zeros for catches of species not collected in some sampling events. — addZeroCatch","text":"error returned either specvar eventvar factors NA levels. usually arises data.frame subsetted/filtered prior using addZeroCatch. See droplevels descriptions drop unused levels.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/addZeroCatch.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Adds zeros for catches of species not collected in some sampling events. — addZeroCatch","text":"2-Basic Data Manipulations","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/addZeroCatch.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Adds zeros for catches of species not collected in some sampling events. — addZeroCatch","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/addZeroCatch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adds zeros for catches of species not collected in some sampling events. — addZeroCatch","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/addZeroCatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds zeros for catches of species not collected in some sampling events. — addZeroCatch","text":"","code":"## Example Data #1 (some nets missing some fish, ancillary net data) df1 <- data.frame(net=c(1,1,1,2,2,3),                   eff=c(1,1,1,1,1,1),                   species=c(\"BKT\",\"LKT\",\"RBT\",\"BKT\",\"LKT\",\"RBT\"),                   catch=c(3,4,5,5,4,3)) df1 #>   net eff species catch #> 1   1   1     BKT     3 #> 2   1   1     LKT     4 #> 3   1   1     RBT     5 #> 4   2   1     BKT     5 #> 5   2   1     LKT     4 #> 6   3   1     RBT     3 # not all 1s xtabs(~net+species,data=df1) #>    species #> net BKT LKT RBT #>   1   1   1   1 #>   2   1   1   0 #>   3   0   0   1  df1mod1 <- addZeroCatch(df1,\"net\",\"species\",zerovar=\"catch\") df1mod1 #>   net eff species catch #> 1   1   1     BKT     3 #> 2   1   1     LKT     4 #> 3   1   1     RBT     5 #> 4   2   1     BKT     5 #> 5   2   1     LKT     4 #> 6   3   1     RBT     3 #> 7   3   1     BKT     0 #> 8   3   1     LKT     0 #> 9   2   1     RBT     0 # check, should all be 3 xtabs(~net,data=df1mod1) #> net #> 1 2 3  #> 3 3 3  # check, should all be 1 xtabs(~net+species,data=df1mod1) #>    species #> net BKT LKT RBT #>   1   1   1   1 #>   2   1   1   1 #>   3   1   1   1 # correct mean/sd of catches Summarize(catch~species,data=df1mod1) #>   species n     mean       sd min  Q1 median Q3 max percZero #> 1     BKT 3 2.666667 2.516611   0 1.5      3  4   5 33.33333 #> 2     LKT 3 2.666667 2.309401   0 2.0      4  4   4 33.33333 #> 3     RBT 3 2.666667 2.516611   0 1.5      3  4   5 33.33333 # incorrect mean/sd of catches (no zeros) Summarize(catch~species,data=df1) #>   species n mean       sd min  Q1 median  Q3 max #> 1     BKT 2    4 1.414214   3 3.5      4 4.5   5 #> 2     LKT 2    4 0.000000   4 4.0      4 4.0   4 #> 3     RBT 2    4 1.414214   3 3.5      4 4.5   5  # Same as example 1 but with no ancillary data specific to the net number df2 <- df1[,-2] df2 #>   net species catch #> 1   1     BKT     3 #> 2   1     LKT     4 #> 3   1     RBT     5 #> 4   2     BKT     5 #> 5   2     LKT     4 #> 6   3     RBT     3 df1mod2 <- addZeroCatch(df2,\"net\",\"species\",zerovar=\"catch\") df1mod2 #>   net species catch #> 1   1     BKT     3 #> 2   1     LKT     4 #> 3   1     RBT     5 #> 4   2     BKT     5 #> 5   2     LKT     4 #> 6   3     RBT     3 #> 7   3     BKT     0 #> 8   3     LKT     0 #> 9   2     RBT     0 # check, should all be 1 xtabs(~net+species,data=df1mod2) #>    species #> net BKT LKT RBT #>   1   1   1   1 #>   2   1   1   1 #>   3   1   1   1  ## Example Data #3 (All nets have same species ... no zeros needed) df3 <- data.frame(net=c(1,1,1,2,2,2,3,3,3),                   eff=c(1,1,1,1,1,1,1,1,1),                   species=c(\"BKT\",\"LKT\",\"RBT\",\"BKT\",\"LKT\",                             \"RBT\",\"BKT\",\"LKT\",\"RBT\"),                   catch=c(3,4,5,5,4,3,3,2,7)) df3 #>   net eff species catch #> 1   1   1     BKT     3 #> 2   1   1     LKT     4 #> 3   1   1     RBT     5 #> 4   2   1     BKT     5 #> 5   2   1     LKT     4 #> 6   2   1     RBT     3 #> 7   3   1     BKT     3 #> 8   3   1     LKT     2 #> 9   3   1     RBT     7 # should all be 1 for this example xtabs(~net+species,data=df3) #>    species #> net BKT LKT RBT #>   1   1   1   1 #>   2   1   1   1 #>   3   1   1   1  # should receive a warning and table should still all be 1 df3mod1 <- addZeroCatch(df3,\"net\",\"species\",zerovar=\"catch\") #> Warning: All 'eventvar' have all species in 'specvar'; thus, there are no #> zeros to add. The original data.frame was returned. xtabs(~net+species,data=df3mod1) #>    species #> net BKT LKT RBT #>   1   1   1   1 #>   2   1   1   1 #>   3   1   1   1  ## Example Data #4 (another variable that needs zeros) df4 <- df1 df4$recaps <- c(0,0,0,1,2,1) df4 #>   net eff species catch recaps #> 1   1   1     BKT     3      0 #> 2   1   1     LKT     4      0 #> 3   1   1     RBT     5      0 #> 4   2   1     BKT     5      1 #> 5   2   1     LKT     4      2 #> 6   3   1     RBT     3      1 # not all 1s xtabs(~net+species,data=df4) #>    species #> net BKT LKT RBT #>   1   1   1   1 #>   2   1   1   0 #>   3   0   0   1  df4mod1 <- addZeroCatch(df4,\"net\",\"species\",zerovar=c(\"catch\",\"recaps\")) # note zeros in both variables df4mod1 #>   net eff species catch recaps #> 1   1   1     BKT     3      0 #> 2   1   1     LKT     4      0 #> 3   1   1     RBT     5      0 #> 4   2   1     BKT     5      1 #> 5   2   1     LKT     4      2 #> 6   3   1     RBT     3      1 #> 7   3   1     BKT     0      0 #> 8   3   1     LKT     0      0 #> 9   2   1     RBT     0      0 # check, should all be 1 xtabs(~net+species,data=df4mod1) #>    species #> net BKT LKT RBT #>   1   1   1   1 #>   2   1   1   1 #>   3   1   1   1 # observe difference from next Summarize(catch~species,data=df4) #>   species n mean       sd min  Q1 median  Q3 max #> 1     BKT 2    4 1.414214   3 3.5      4 4.5   5 #> 2     LKT 2    4 0.000000   4 4.0      4 4.0   4 #> 3     RBT 2    4 1.414214   3 3.5      4 4.5   5 Summarize(catch~species,data=df4mod1) #>   species n     mean       sd min  Q1 median Q3 max percZero #> 1     BKT 3 2.666667 2.516611   0 1.5      3  4   5 33.33333 #> 2     LKT 3 2.666667 2.309401   0 2.0      4  4   4 33.33333 #> 3     RBT 3 2.666667 2.516611   0 1.5      3  4   5 33.33333 # observe difference from next Summarize(recaps~species,data=df4) #>   species n mean        sd min   Q1 median   Q3 max percZero #> 1     BKT 2  0.5 0.7071068   0 0.25    0.5 0.75   1       50 #> 2     LKT 2  1.0 1.4142136   0 0.50    1.0 1.50   2       50 #> 3     RBT 2  0.5 0.7071068   0 0.25    0.5 0.75   1       50 Summarize(recaps~species,data=df4mod1) #>   species n      mean        sd min Q1 median  Q3 max percZero #> 1     BKT 3 0.3333333 0.5773503   0  0      0 0.5   1 66.66667 #> 2     LKT 3 0.6666667 1.1547005   0  0      0 1.0   2 66.66667 #> 3     RBT 3 0.3333333 0.5773503   0  0      0 0.5   1 66.66667  ## Example Data #5 (two \"specvar\"s) df5 <- df1 df5$sex <- c(\"m\",\"m\",\"f\",\"m\",\"f\",\"f\") df5 #>   net eff species catch sex #> 1   1   1     BKT     3   m #> 2   1   1     LKT     4   m #> 3   1   1     RBT     5   f #> 4   2   1     BKT     5   m #> 5   2   1     LKT     4   f #> 6   3   1     RBT     3   f # not all 1s xtabs(~sex+species+net,data=df5) #> , , net = 1 #>  #>    species #> sex BKT LKT RBT #>   f   0   0   1 #>   m   1   1   0 #>  #> , , net = 2 #>  #>    species #> sex BKT LKT RBT #>   f   0   1   0 #>   m   1   0   0 #>  #> , , net = 3 #>  #>    species #> sex BKT LKT RBT #>   f   0   0   1 #>   m   0   0   0 #>   df5mod1 <- addZeroCatch(df5,\"net\",c(\"species\",\"sex\"),zerovar=\"catch\") df5mod1 #>    net eff species catch sex #> 1    1   1     BKT     3   m #> 2    1   1     LKT     4   m #> 3    1   1     RBT     5   f #> 4    2   1     BKT     5   m #> 5    2   1     LKT     4   f #> 6    3   1     RBT     3   f #> 7    1   1     BKT     0   f #> 8    2   1     BKT     0   f #> 9    3   1     BKT     0   f #> 10   1   1     LKT     0   f #> 11   3   1     LKT     0   f #> 12   2   1     RBT     0   f #> 13   3   1     BKT     0   m #> 14   2   1     LKT     0   m #> 15   3   1     LKT     0   m #> 16   1   1     RBT     0   m #> 17   2   1     RBT     0   m #> 18   3   1     RBT     0   m # all 1s xtabs(~sex+species+net,data=df5mod1) #> , , net = 1 #>  #>    species #> sex BKT LKT RBT #>   f   1   1   1 #>   m   1   1   1 #>  #> , , net = 2 #>  #>    species #> sex BKT LKT RBT #>   f   1   1   1 #>   m   1   1   1 #>  #> , , net = 3 #>  #>    species #> sex BKT LKT RBT #>   f   1   1   1 #>   m   1   1   1 #>  str(df5mod1)  #> 'data.frame':\t18 obs. of  5 variables: #>  $ net    : num  1 1 1 2 2 3 1 2 3 1 ... #>  $ eff    : num  1 1 1 1 1 1 1 1 1 1 ... #>  $ species: chr  \"BKT\" \"LKT\" \"RBT\" \"BKT\" ... #>  $ catch  : num  3 4 5 5 4 3 0 0 0 0 ... #>  $ sex    : chr  \"m\" \"m\" \"f\" \"m\" ...  ## Example Data #6 (three \"specvar\"s) df6 <- df5 df6$size <- c(\"lrg\",\"lrg\",\"lrg\",\"sm\",\"lrg\",\"sm\") df6 #>   net eff species catch sex size #> 1   1   1     BKT     3   m  lrg #> 2   1   1     LKT     4   m  lrg #> 3   1   1     RBT     5   f  lrg #> 4   2   1     BKT     5   m   sm #> 5   2   1     LKT     4   f  lrg #> 6   3   1     RBT     3   f   sm  df6mod1 <- addZeroCatch(df6,\"net\",c(\"species\",\"sex\",\"size\"),zerovar=\"catch\") df6mod1 #>    net eff species catch sex size #> 1    1   1     BKT     3   m  lrg #> 2    1   1     LKT     4   m  lrg #> 3    1   1     RBT     5   f  lrg #> 4    2   1     BKT     5   m   sm #> 5    2   1     LKT     4   f  lrg #> 6    3   1     RBT     3   f   sm #> 7    1   1     BKT     0   f  lrg #> 8    2   1     BKT     0   f  lrg #> 9    3   1     BKT     0   f  lrg #> 10   1   1     LKT     0   f  lrg #> 11   3   1     LKT     0   f  lrg #> 12   2   1     RBT     0   f  lrg #> 13   3   1     RBT     0   f  lrg #> 14   2   1     BKT     0   m  lrg #> 15   3   1     BKT     0   m  lrg #> 16   2   1     LKT     0   m  lrg #> 17   3   1     LKT     0   m  lrg #> 18   1   1     RBT     0   m  lrg #> 19   2   1     RBT     0   m  lrg #> 20   3   1     RBT     0   m  lrg #> 21   1   1     BKT     0   f   sm #> 22   2   1     BKT     0   f   sm #> 23   3   1     BKT     0   f   sm #> 24   1   1     LKT     0   f   sm #> 25   2   1     LKT     0   f   sm #> 26   3   1     LKT     0   f   sm #> 27   1   1     RBT     0   f   sm #> 28   2   1     RBT     0   f   sm #> 29   1   1     BKT     0   m   sm #> 30   3   1     BKT     0   m   sm #> 31   1   1     LKT     0   m   sm #> 32   2   1     LKT     0   m   sm #> 33   3   1     LKT     0   m   sm #> 34   1   1     RBT     0   m   sm #> 35   2   1     RBT     0   m   sm #> 36   3   1     RBT     0   m   sm"},{"path":"https://fishr-core-team.github.io/FSA/reference/ageBias.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and view possible differences between paired sets of ages. — ageBias","title":"Compute and view possible differences between paired sets of ages. — ageBias","text":"Constructs age-agreement tables, statistical tests detect differences, plots visualize potential differences paired age estimates. Ages may , example, two readers structure, one reader two times, two structures (e.g., scales, spines, otoliths), one structure known ages.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ageBias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and view possible differences between paired sets of ages. — ageBias","text":"","code":"ageBias(   formula,   data,   ref.lab = tmp$Enames,   nref.lab = tmp$Rname,   method = stats::p.adjust.methods,   sig.level = 0.05,   min.n.CI = 3 )  # S3 method for ageBias summary(   object,   what = c(\"table\", \"symmetry\", \"Bowker\", \"EvansHoenig\", \"McNemar\", \"bias\", \"diff.bias\",     \"n\"),   flip.table = FALSE,   zero.print = \"-\",   digits = 3,   cont.corr = c(\"none\", \"Yates\", \"Edwards\"),   ... )  # S3 method for ageBias plot(   x,   xvals = c(\"reference\", \"mean\"),   xlab = ifelse(xvals == \"reference\", x$ref.lab, \"Mean Age\"),   ylab = paste(x$nref.lab, \"-\", x$ref.lab),   xlim = NULL,   ylim = NULL,   yaxt = graphics::par(\"yaxt\"),   xaxt = graphics::par(\"xaxt\"),   col.agree = \"gray60\",   lwd.agree = lwd,   lty.agree = 2,   lwd = 1,   sfrac = 0,   show.pts = NULL,   pch.pts = 20,   cex.pts = ifelse(xHist | yHist, 1.5, 1),   col.pts = \"black\",   transparency = 1/10,   show.CI = FALSE,   col.CI = \"black\",   col.CIsig = \"red\",   lwd.CI = lwd,   sfrac.CI = sfrac,   show.range = NULL,   col.range = ifelse(show.CI, \"gray70\", \"black\"),   lwd.range = lwd,   sfrac.range = sfrac,   pch.mean = 19,   pch.mean.sig = ifelse(show.CI | show.range, 21, 19),   cex.mean = lwd,   yHist = TRUE,   xHist = NULL,   hist.panel.size = 1/7,   col.hist = \"gray90\",   allowAdd = FALSE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/ageBias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and view possible differences between paired sets of ages. — ageBias","text":"formula formula form nrefvar~refvar, nrefvar refvar generically represent variables contain paired “nonreference” “reference” age estimates, respectively. See details. data data.frame minimally contains paired age estimates given formula. ref.lab string label reference age estimates. nref.lab string label nonreference age estimates. method string method use adjust p-values multiple comparisons. See ?p.adjust.methods. sig.level numeric value determine whether p-value indicates significant result. confidence level used plot 100*(1-sig.level). min.n.CI numeric value (default 3) smallest sample size confidence interval computed. string indicates type summary print plot construct. See details. flip.table logical indicates whether age-agreement table ‘flipped’ (.e., rows reversed younger ages bottom table). makes table directly comparable age bias plot. zero.print string printed place zeros age-agreement table. default print single dash. digits numeric minimum number digits print showing =\"bias\" =\"diff.bias\" summary. cont.corr string indicates continuity correction method used () McNemar test. \"none\" (default) continuity correction used, \"Yates\" 0.5 used, \"Edwards\" 1 used. ... Additional arguments methods. x, object object class ageBias, usually result ageBias. xvals string whether x-axis values reference ages mean reference nonreference ages. xlab, ylab string label x-axis (reference) y-axis (non-reference) age estimates, respectively. xlim, ylim numeric vector length 2 contains limits x-axis (reference ages) y-axis (non-reference ages), respectively. xaxt, yaxt string specifies x- y-axis types. Specifying “n” suppresses plotting axis. See ?par. col.agree string numeric color 1:1 zero (difference=TRUE) reference line. lwd.agree numeric line width 1:1 zero (difference=TRUE) reference line. lty.agree numeric line type 1:1 zero (difference=TRUE) reference line. lwd numeric controls separate ‘lwd’ argument (e.g., lwd.CI lwd.range). sfrac numeric controls separate ‘sfrac’ arguments (e.g., sfrac.CI sfrac.range). See sfrac plotCI plotrix. show.pts logical whether raw data points plotted. pch.pts numeric plotting character raw data points. cex.pts character expansion value size symbols pch.pts. col.pts string numeric color raw data points. default use black transparency found transparency. transparency numeric (0 1) level transparency raw data points. number points plotted top represent color col.pts. show.CI logical whether confidence intervals plotted . col.CI string numeric color confidence interval bars considered non-significant. col.CIsig string numeric color confidence interval bars considered significant. lwd.CI numeric line width confidence interval bars. sfrac.CI numeric size ends confidence interval bars. See sfrac plotCI plotrix. show.range logical whether vertical bars represent range data points plotted. col.range string numeric color range intervals. lwd.range numeric line width range intervals. sfrac.range numeric size ends range intervals. See sfrac plotCI plotrix. pch.mean numeric plotting character used mean values means considered insignificant. pch.mean.sig numeric plotting character mean values means considered significant. cex.mean character expansion value size mean symbol pch.mean pch.mean.sig. yHist logical whether histogram y-axis variable added right margin age bias plot. See details. xHist logical whether histogram x-axis variable added top margin age bias plot. See details. hist.panel.size numeric 0 1 indicates proportional size histograms (relative entire plotting pane) plot margins (used xHist=TRUE yHist=TRUE). col.hist string color bars marginal histograms (used xHist=TRUE yHist=TRUE). allowAdd logical allow user add items main (.e., marginal histograms) plot panel (TRUE). Defaults FALSE.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ageBias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and view possible differences between paired sets of ages. — ageBias","text":"ageBias returns list following items: data data.frame original paired age estimates difference estimates. agree age-agreement table. bias data.frame contains bias statistics. bias.diff data.frame contains bias statistics differences. ref.lab string contains optional label age estimates columns (reference) age-agreement table. nref.lab string contains optional label age estimates rows (non-reference) age-agreement table. summary returns result = contains one item, otherwise returns nothing. Nothing returned plot plotAB, see details description plot produced.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ageBias.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute and view possible differences between paired sets of ages. — ageBias","text":"Generally, one two age estimates identified “reference” set. cases may true ages, ages experienced reader, ages first reading, ages structure generally thought provide accurate results. cases, comparing two novice readers, choice may arbitrary. reference ages form columns age-agreement table “constant” age used t-tests age bias plots (.e., x-axis). See details . age-agreement table constructed  =\"table\" summary. agreement table can “flipped” (.e., rows descending rather ascending order) flip.table=TRUE. default, tables shown zeros replaced dashes. behavior can changed zero.print. Three statistical tests symmetry age-agreement table can computed = summary. “unpooled” Bowker test described Hoenig et al. (1995) constructed =\"Bowker\", “semi-pooled” Evans-Hoenig test described Evans Hoenig (1998) constructed =\"EvansHoenig\", “pooled” McNemar test described Evans Hoenig (1998) constructed =\"McNemar\". three tests computed =\"symmetry\". age bias plot introduced Campana et al. (1995) can constructed plotAB. Muir et al. (2008) modified original age bias plot plotting difference two ages y-axis (still reference age x-axis). McBride (2015) introduced Bland-Altman plot comparing fish ages difference ages plotted y-axis versus mean ages x-axis. Modifications plots created plot (rather plotAB) using xvals= control plotted x-axis (.e., xvals=\"reference\" uses reference ages, whereas xvals=\"mean\" uses mean two ages x-axis). plots, horizontal agreement line difference zero shown comparative purposes. addition, histogram differences shown right margin (can excluded yHist=FALSE.) histogram reference ages shown default top margin modified age bias plot, modified Bland-Altman-like plot (presence histogram controlled xHist=). default, modified age bias plot shows mean range nonreference ages reference ages. Means shown open dot mean age differences significantly different zero. ranges differences ages reference age can removed show.range=FALSE. confidence interval difference ages can added show.CI=FALSE. Confidence intervals shown sample size greater value min.n.CI= (also original call ageBias). Confidence intervals plotted red open dot (default; can changed col.CIsig pch.mean.sig, respectively) contain reference age (see discussion t-tests ). Individual points plotted show.pts=TRUE, color controlled col.pts= transparency=. See examples use arguments. main (.e., marginal histograms) can \"added \" plot constructed allowAdd=TRUE used. example, Bland-Altman-like plot can augmented horizontal line mean difference ages, line regression differences means, generalized additive model describes relationship differences means. See examples use allowAdd=TRUE. recommended save plotting parameters (e.g., op <- par(.readonly=TRUE)) using plot allowAdd=TRUE original parameters can reset (e.g., par(op)); see examples. Individual t-tests determine mean age nonreference set particular age reference set equal reference age (e.g., mean age nonreference set age-3 reference set statistically different 3?) shown =\"bias\" summary. results provide column indicates whether difference significant determined adjusted p-values t-tests using significance level provided sig.level (defaults 0.05). Similar results difference ages (e.g., mean reference age minus nonreference age nonreference age 3 different 0?) constructed =\"diff.bias\" summary. sample size present age-agreement table found =\"n\".","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ageBias.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Compute and view possible differences between paired sets of ages. — ageBias","text":"Tested symmetry test results results Evans Hoenig (2008), McNemar Evans-Hoenig results results compare2 fishmethods, results using AlewifeLH data set FSAdata results online resource http://www.nefsc.noaa.gov/fbp/age-prec/.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ageBias.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Compute and view possible differences between paired sets of ages. — ageBias","text":"4-Age Comparisons. Note plot changed since IFAR published. original functionality plotAB.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ageBias.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute and view possible differences between paired sets of ages. — ageBias","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Campana, S.E., M.C. Annand, J.. McMillan. 1995. Graphical statistical methods determining consistency age determinations. Transactions American Fisheries Society 124:131-138. [(?) available http://www.bio.gc.ca/otoliths/documents/Campana%20et%20al%201995%20TAFS.pdf.] Evans, G.T. J.M. Hoenig. 1998. Testing viewing symmetry contingency tables, application readers fish ages. Biometrics 54:620-629. Hoenig, J.M., M.J. Morgan, C.. Brown. 1995. Analysing differences two age determination methods tests symmetry. Canadian Journal Fisheries Aquatic Sciences 52:364-368. McBride, R.S. 2015. Diagnosis paired age agreement: simulation approach accuracy precision effects. ICES Journal Marine Science 72:2149-2167. Muir, .M., M.P. Ebener, J.X. , J.E. Johnson. 2008. comparison scale otolith methods age estimation lake whitefish Lake Huron. North American Journal Fisheries Management 28:625-635. [(?) available http://www.tandfonline.com/doi/abs/10.1577/M06-160.1]","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/ageBias.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute and view possible differences between paired sets of ages. — ageBias","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ageBias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and view possible differences between paired sets of ages. — ageBias","text":"","code":"ab1 <- ageBias(scaleC~otolithC,data=WhitefishLC,                ref.lab=\"Otolith Age\",nref.lab=\"Scale Age\") summary(ab1) #> Sample size in the age agreement table is 151. #>  #> Summary of Scale Age by Otolith Age  #>  otolithC  n min max  mean    SE       t   adj.p   sig    LCI   UCI #>         1  9   1   2  1.44 0.176   2.530 0.28212 FALSE  1.039  1.85 #>         2  7   1   5  2.00 0.577   0.000 1.00000 FALSE  0.587  3.41 #>         3 17   1   6  3.35 0.242   1.461 0.81743 FALSE  2.841  3.87 #>         4 18   2   6  3.83 0.232  -0.718 1.00000 FALSE  3.343  4.32 #>         5  8   4   8  5.25 0.491   0.509 1.00000 FALSE  4.089  6.41 #>         6 10   3   6  4.60 0.267  -5.250 0.00686  TRUE  3.997  5.20 #>         7  9   5  10  6.44 0.556  -1.000 1.00000 FALSE  5.163  7.73 #>         8 12   5   8  6.08 0.288  -6.665 0.00053  TRUE  5.450  6.72 #>         9 10   6   8  7.20 0.200  -9.000 0.00014  TRUE  6.748  7.65 #>        10  9   6   8  7.11 0.261 -11.086 0.00007  TRUE  6.510  7.71 #>        11  8   5   9  7.25 0.453  -8.275 0.00103  TRUE  6.178  8.32 #>        12  7   6  12  8.43 0.782  -4.564 0.04600  TRUE  6.514 10.34 #>        13  7   6  13  8.86 1.010  -4.101 0.06349 FALSE  6.385 11.33 #>        14  3   6  13  8.67 2.186  -2.440 0.80891 FALSE -0.738 18.07 #>        15  5   9  14 11.00 0.949  -4.216 0.12165 FALSE  8.366 13.63 #>        16  4  10  15 12.50 1.041  -3.363 0.30552 FALSE  9.188 15.81 #>        17  4   9  13 11.00 0.816  -7.348 0.05729 FALSE  8.402 13.60 #>        18  2   7  13 10.00    NA      NA      NA FALSE     NA    NA #>        19  1  14  14 14.00    NA      NA      NA FALSE     NA    NA #>        23  1  10  10 10.00    NA      NA      NA FALSE     NA    NA #>  #> Summary of Scale Age-Otolith Age by Otolith Age #>  otolithC  n min max    mean    SE       t   adj.p   sig      LCI    UCI #>         1  9   0   1   0.444 0.176   2.530 0.28212 FALSE   0.0393  0.850 #>         2  7  -1   3   0.000 0.577   0.000 1.00000 FALSE  -1.4127  1.413 #>         3 17  -2   3   0.353 0.242   1.461 0.81743 FALSE  -0.1593  0.865 #>         4 18  -2   2  -0.167 0.232  -0.718 1.00000 FALSE  -0.6566  0.323 #>         5  8  -1   3   0.250 0.491   0.509 1.00000 FALSE  -0.9110  1.411 #>         6 10  -3   0  -1.400 0.267  -5.250 0.00686  TRUE  -2.0032 -0.797 #>         7  9  -2   3  -0.556 0.556  -1.000 1.00000 FALSE  -1.8367  0.726 #>         8 12  -3   0  -1.917 0.288  -6.665 0.00053  TRUE  -2.5496 -1.284 #>         9 10  -3  -1  -1.800 0.200  -9.000 0.00014  TRUE  -2.2524 -1.348 #>        10  9  -4  -2  -2.889 0.261 -11.086 0.00007  TRUE  -3.4898 -2.288 #>        11  8  -6  -2  -3.750 0.453  -8.275 0.00103  TRUE  -4.8216 -2.678 #>        12  7  -6   0  -3.571 0.782  -4.564 0.04600  TRUE  -5.4860 -1.657 #>        13  7  -7   0  -4.143 1.010  -4.101 0.06349 FALSE  -6.6146 -1.671 #>        14  3  -8  -1  -5.333 2.186  -2.440 0.80891 FALSE -14.7381  4.071 #>        15  5  -6  -1  -4.000 0.949  -4.216 0.12165 FALSE  -6.6340 -1.366 #>        16  4  -6  -1  -3.500 1.041  -3.363 0.30552 FALSE  -6.8124 -0.188 #>        17  4  -8  -4  -6.000 0.816  -7.348 0.05729 FALSE  -8.5985 -3.402 #>        18  2 -11  -5  -8.000    NA      NA      NA FALSE       NA     NA #>        19  1  -5  -5  -5.000    NA      NA      NA FALSE       NA     NA #>        23  1 -13 -13 -13.000    NA      NA      NA FALSE       NA     NA #>  #> Raw agreement table (square) #>          Otolith Age #> Scale Age  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #>        1   5  4  1  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        2   4  1  -  1  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        3   -  1 10  6  -  1  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        4   -  -  5  7  3  3  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        5   -  1  -  3  2  5  3  4  -  -  1  -  -  -  -  -  -  -  -  -  -  -  - #>        6   -  -  1  1  2  1  3  4  1  2  1  1  2  1  -  -  -  -  -  -  -  -  - #>        7   -  -  -  -  -  -  1  3  6  4  2  2  1  1  -  -  -  1  -  -  -  -  - #>        8   -  -  -  -  1  -  1  1  3  3  3  1  -  -  -  -  -  -  -  -  -  -  - #>        9   -  -  -  -  -  -  -  -  -  -  1  1  1  -  2  -  1  -  -  -  -  -  - #>        10  -  -  -  -  -  -  1  -  -  -  -  1  1  -  -  1  -  -  -  -  -  -  1 #>        11  -  -  -  -  -  -  -  -  -  -  -  -  1  -  1  -  2  -  -  -  -  -  - #>        12  -  -  -  -  -  -  -  -  -  -  -  1  -  -  1  1  -  -  -  -  -  -  - #>        13  -  -  -  -  -  -  -  -  -  -  -  -  1  1  -  1  1  1  -  -  -  -  - #>        14  -  -  -  -  -  -  -  -  -  -  -  -  -  -  1  -  -  -  1  -  -  -  - #>        15  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  1  -  -  -  -  -  -  - #>        16  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        17  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        18  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        19  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        20  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        21  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        22  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        23  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>  #> Age agreement table symmetry test results #>       symTest df   chi.sq            p #> 1     McNemar  1 51.57851 6.879037e-13 #> 2 EvansHoenig 10 62.46849 1.232555e-09 #> 3      Bowker 54 75.97662 2.598188e-02 summary(ab1,what=\"symmetry\") #>       symTest df   chi.sq            p #> 1     McNemar  1 51.57851 6.879037e-13 #> 2 EvansHoenig 10 62.46849 1.232555e-09 #> 3      Bowker 54 75.97662 2.598188e-02 summary(ab1,what=\"Bowker\") #>   symTest df   chi.sq          p #> 3  Bowker 54 75.97662 0.02598188 summary(ab1,what=\"EvansHoenig\") #>       symTest df   chi.sq            p #> 2 EvansHoenig 10 62.46849 1.232555e-09 summary(ab1,what=\"McNemar\") #>   symTest df   chi.sq            p #> 1 McNemar  1 51.57851 6.879037e-13 summary(ab1,what=\"McNemar\",cont.corr=\"Yates\") #>                      symTest df   chi.sq            p #> 1 McNemar (Yates Correction)  1 50.92769 9.583228e-13 summary(ab1,what=\"bias\") #>  otolithC  n min max  mean    SE       t   adj.p   sig    LCI   UCI #>         1  9   1   2  1.44 0.176   2.530 0.28212 FALSE  1.039  1.85 #>         2  7   1   5  2.00 0.577   0.000 1.00000 FALSE  0.587  3.41 #>         3 17   1   6  3.35 0.242   1.461 0.81743 FALSE  2.841  3.87 #>         4 18   2   6  3.83 0.232  -0.718 1.00000 FALSE  3.343  4.32 #>         5  8   4   8  5.25 0.491   0.509 1.00000 FALSE  4.089  6.41 #>         6 10   3   6  4.60 0.267  -5.250 0.00686  TRUE  3.997  5.20 #>         7  9   5  10  6.44 0.556  -1.000 1.00000 FALSE  5.163  7.73 #>         8 12   5   8  6.08 0.288  -6.665 0.00053  TRUE  5.450  6.72 #>         9 10   6   8  7.20 0.200  -9.000 0.00014  TRUE  6.748  7.65 #>        10  9   6   8  7.11 0.261 -11.086 0.00007  TRUE  6.510  7.71 #>        11  8   5   9  7.25 0.453  -8.275 0.00103  TRUE  6.178  8.32 #>        12  7   6  12  8.43 0.782  -4.564 0.04600  TRUE  6.514 10.34 #>        13  7   6  13  8.86 1.010  -4.101 0.06349 FALSE  6.385 11.33 #>        14  3   6  13  8.67 2.186  -2.440 0.80891 FALSE -0.738 18.07 #>        15  5   9  14 11.00 0.949  -4.216 0.12165 FALSE  8.366 13.63 #>        16  4  10  15 12.50 1.041  -3.363 0.30552 FALSE  9.188 15.81 #>        17  4   9  13 11.00 0.816  -7.348 0.05729 FALSE  8.402 13.60 #>        18  2   7  13 10.00    NA      NA      NA FALSE     NA    NA #>        19  1  14  14 14.00    NA      NA      NA FALSE     NA    NA #>        23  1  10  10 10.00    NA      NA      NA FALSE     NA    NA summary(ab1,what=\"diff.bias\") #>  otolithC  n min max    mean    SE       t   adj.p   sig      LCI    UCI #>         1  9   0   1   0.444 0.176   2.530 0.28212 FALSE   0.0393  0.850 #>         2  7  -1   3   0.000 0.577   0.000 1.00000 FALSE  -1.4127  1.413 #>         3 17  -2   3   0.353 0.242   1.461 0.81743 FALSE  -0.1593  0.865 #>         4 18  -2   2  -0.167 0.232  -0.718 1.00000 FALSE  -0.6566  0.323 #>         5  8  -1   3   0.250 0.491   0.509 1.00000 FALSE  -0.9110  1.411 #>         6 10  -3   0  -1.400 0.267  -5.250 0.00686  TRUE  -2.0032 -0.797 #>         7  9  -2   3  -0.556 0.556  -1.000 1.00000 FALSE  -1.8367  0.726 #>         8 12  -3   0  -1.917 0.288  -6.665 0.00053  TRUE  -2.5496 -1.284 #>         9 10  -3  -1  -1.800 0.200  -9.000 0.00014  TRUE  -2.2524 -1.348 #>        10  9  -4  -2  -2.889 0.261 -11.086 0.00007  TRUE  -3.4898 -2.288 #>        11  8  -6  -2  -3.750 0.453  -8.275 0.00103  TRUE  -4.8216 -2.678 #>        12  7  -6   0  -3.571 0.782  -4.564 0.04600  TRUE  -5.4860 -1.657 #>        13  7  -7   0  -4.143 1.010  -4.101 0.06349 FALSE  -6.6146 -1.671 #>        14  3  -8  -1  -5.333 2.186  -2.440 0.80891 FALSE -14.7381  4.071 #>        15  5  -6  -1  -4.000 0.949  -4.216 0.12165 FALSE  -6.6340 -1.366 #>        16  4  -6  -1  -3.500 1.041  -3.363 0.30552 FALSE  -6.8124 -0.188 #>        17  4  -8  -4  -6.000 0.816  -7.348 0.05729 FALSE  -8.5985 -3.402 #>        18  2 -11  -5  -8.000    NA      NA      NA FALSE       NA     NA #>        19  1  -5  -5  -5.000    NA      NA      NA FALSE       NA     NA #>        23  1 -13 -13 -13.000    NA      NA      NA FALSE       NA     NA summary(ab1,what=\"n\") #> Sample size in the age agreement table is 151. summary(ab1,what=c(\"n\",\"symmetry\",\"table\")) #> Sample size in the age agreement table is 151. #>  #> Raw agreement table (square) #>          Otolith Age #> Scale Age  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #>        1   5  4  1  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        2   4  1  -  1  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        3   -  1 10  6  -  1  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        4   -  -  5  7  3  3  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        5   -  1  -  3  2  5  3  4  -  -  1  -  -  -  -  -  -  -  -  -  -  -  - #>        6   -  -  1  1  2  1  3  4  1  2  1  1  2  1  -  -  -  -  -  -  -  -  - #>        7   -  -  -  -  -  -  1  3  6  4  2  2  1  1  -  -  -  1  -  -  -  -  - #>        8   -  -  -  -  1  -  1  1  3  3  3  1  -  -  -  -  -  -  -  -  -  -  - #>        9   -  -  -  -  -  -  -  -  -  -  1  1  1  -  2  -  1  -  -  -  -  -  - #>        10  -  -  -  -  -  -  1  -  -  -  -  1  1  -  -  1  -  -  -  -  -  -  1 #>        11  -  -  -  -  -  -  -  -  -  -  -  -  1  -  1  -  2  -  -  -  -  -  - #>        12  -  -  -  -  -  -  -  -  -  -  -  1  -  -  1  1  -  -  -  -  -  -  - #>        13  -  -  -  -  -  -  -  -  -  -  -  -  1  1  -  1  1  1  -  -  -  -  - #>        14  -  -  -  -  -  -  -  -  -  -  -  -  -  -  1  -  -  -  1  -  -  -  - #>        15  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  1  -  -  -  -  -  -  - #>        16  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        17  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        18  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        19  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        20  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        21  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        22  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>        23  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - #>  #> Age agreement table symmetry test results #>       symTest df   chi.sq            p #> 1     McNemar  1 51.57851 6.879037e-13 #> 2 EvansHoenig 10 62.46849 1.232555e-09 #> 3      Bowker 54 75.97662 2.598188e-02 # flip table (easy to compare to age bias plot) and show zeroes (not dashes) summary(ab1,what=\"table\",flip.table=TRUE,zero.print=\"0\") #>          Otolith Age #> Scale Age  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #>        23  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>        22  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>        21  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>        20  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>        19  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>        18  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>        17  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>        16  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>        15  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0 #>        14  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  1  0  0  0  0 #>        13  0  0  0  0  0  0  0  0  0  0  0  0  1  1  0  1  1  1  0  0  0  0  0 #>        12  0  0  0  0  0  0  0  0  0  0  0  1  0  0  1  1  0  0  0  0  0  0  0 #>        11  0  0  0  0  0  0  0  0  0  0  0  0  1  0  1  0  2  0  0  0  0  0  0 #>        10  0  0  0  0  0  0  1  0  0  0  0  1  1  0  0  1  0  0  0  0  0  0  1 #>        9   0  0  0  0  0  0  0  0  0  0  1  1  1  0  2  0  1  0  0  0  0  0  0 #>        8   0  0  0  0  1  0  1  1  3  3  3  1  0  0  0  0  0  0  0  0  0  0  0 #>        7   0  0  0  0  0  0  1  3  6  4  2  2  1  1  0  0  0  1  0  0  0  0  0 #>        6   0  0  1  1  2  1  3  4  1  2  1  1  2  1  0  0  0  0  0  0  0  0  0 #>        5   0  1  0  3  2  5  3  4  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0 #>        4   0  0  5  7  3  3  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>        3   0  1 10  6  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>        2   4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>        1   5  4  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0   ############################################################# ## Differences Plot (inspired by Muir et al. (2008)) # Default (ranges, open circles for sig diffs, marginal hists) plot(ab1)  # Show CIs for means (with and without ranges) plot(ab1,show.CI=TRUE)  plot(ab1,show.CI=TRUE,show.range=FALSE)  # show points (with and without CIs) plot(ab1,show.CI=TRUE,show.range=FALSE,show.pts=TRUE)  plot(ab1,show.range=FALSE,show.pts=TRUE)  # Use same symbols for all means (with ranges) plot(ab1,pch.mean.sig=19)  # Use same symbols/colors for all means/CIs (without ranges) plot(ab1,show.range=FALSE,show.CI=TRUE,pch.mean.sig=19,col.CIsig=\"black\")  # Remove histograms plot(ab1,xHist=FALSE)  plot(ab1,yHist=FALSE)  plot(ab1,xHist=FALSE,yHist=FALSE)  ## Suppress confidence intervals for n < a certain value ##   must set this in the original ageBias() call ab2 <- ageBias(scaleC~otolithC,data=WhitefishLC,min.n.CI=8,                ref.lab=\"Otolith Age\",nref.lab=\"Scale Age\") plot(ab2,show.CI=TRUE,show.range=FALSE)     ############################################################# ## Differences Plot ( inspired by Bland-Altman plots in McBride (2015)) plot(ab1,xvals=\"mean\")  ## Modify axis limits plot(ab1,xvals=\"mean\",xlim=c(1,17))  ## Add and remove histograms plot(ab1,xvals=\"mean\",xHist=TRUE)  plot(ab1,xvals=\"mean\",xHist=TRUE,yHist=FALSE)  plot(ab1,xvals=\"mean\",yHist=FALSE)   ############################################################# ## Adding post hoc analyses to the main plot # get original graphing parameters to be reset at the end op <- par(no.readonly=TRUE)  # get raw data tmp <- ab1$d head(tmp) #>   scaleC otolithC diff mean #> 1      3        3    0  3.0 #> 2      4        3    1  3.5 #> 3      6        3    3  4.5 #> 4      4        3    1  3.5 #> 5      3        3    0  3.0 #> 6      4        6   -2  5.0  # Add mean difference (w/ approx. 95% CI) bias <- mean(tmp$diff)+c(-1.96,0,1.96)*se(tmp$diff) plot(ab1,xvals=\"mean\",xlim=c(1,17),allowAdd=TRUE) abline(h=bias,lty=2,col=\"red\")  par(op)  # Same as above, but without marginal histogram, and with #   95% agreement lines as well (1.96SDs) #   (this is nearly a replicate of a Bland-Altman plot) bias <- mean(tmp$diff)+c(-1.96,0,1.96)*se(tmp$diff) agline <- mean(tmp$diff)+c(-1.96,1.96)*sd(tmp$diff) plot(ab1,xvals=\"mean\",yHist=FALSE,allowAdd=TRUE) abline(h=bias,lty=2,col=\"red\") abline(h=agline,lty=3,lwd=2,col=\"blue\")  par(op)  # Add linear regression line of differences on means (w/ approx. 95% CI) lm1 <- lm(diff~mean,data=tmp) xval <- seq(0,19,0.1) pred1 <- predict(lm1,data.frame(mean=xval),interval=\"confidence\") bias1 <- data.frame(xval,pred1) head(bias1) #>   xval      fit       lwr      upr #> 1  0.0 1.261964 0.6232456 1.900682 #> 2  0.1 1.217797 0.5861659 1.849428 #> 3  0.2 1.173630 0.5490612 1.798199 #> 4  0.3 1.129463 0.5119307 1.746995 #> 5  0.4 1.085296 0.4747735 1.695819 #> 6  0.5 1.041129 0.4375887 1.644670 plot(ab1,xvals=\"mean\",xlim=c(1,17),allowAdd=TRUE) lines(lwr~xval,data=bias1,lty=2,col=\"red\") lines(upr~xval,data=bias1,lty=2,col=\"red\") lines(fit~xval,data=bias1,lty=2,col=\"red\")  par(op)  # Add loess of differences on means (w/ approx. 95% CI as a polygon) lo2 <- loess(diff~mean,data=tmp) xval <- seq(min(tmp$mean),max(tmp$mean),0.1) pred2 <- predict(lo2,data.frame(mean=xval),se=TRUE) bias2 <- data.frame(xval,pred2) bias2$lwr <- bias2$fit-1.96*bias2$se.fit bias2$upr <- bias2$fit+1.96*bias2$se.fit head(bias2) #>   xval         fit    se.fit residual.scale      df        lwr       upr #> 1  1.0 -0.16024844 0.5716894       1.887342 145.685 -1.2807597 0.9602628 #> 2  1.1 -0.13313237 0.5396064       1.887342 145.685 -1.1907610 0.9244962 #> 3  1.2 -0.10771932 0.5091066       1.887342 145.685 -1.1055683 0.8901296 #> 4  1.3 -0.08401421 0.4802391       1.887342 145.685 -1.0252828 0.8572543 #> 5  1.4 -0.06202196 0.4530549       1.887342 145.685 -0.9500096 0.8259657 #> 6  1.5 -0.04174751 0.4276065       1.887342 145.685 -0.8798563 0.7963613 plot(ab1,xvals=\"mean\",xlim=c(1,17),allowAdd=TRUE) with(bias2,polygon(c(xval,rev(xval)),c(lwr,rev(upr)),                    col=col2rgbt(\"red\",1/10),border=NA)) lines(fit~xval,data=bias2,lty=2,col=\"red\")  par(op)                    # Same as above, but polygon and line behind the points plot(ab1,xvals=\"mean\",xlim=c(1,17),col.pts=\"white\",allowAdd=TRUE) with(bias2,polygon(c(xval,rev(xval)),c(lwr,rev(upr)),                    col=col2rgbt(\"red\",1/10),border=NA)) lines(fit~xval,data=bias2,lty=2,col=\"red\") points(diff~mean,data=tmp,pch=19,col=col2rgbt(\"black\",1/8))  par(op)  # Can also be made with the reference ages on the x-axis lo3 <- loess(diff~otolithC,data=tmp) xval <- seq(min(tmp$otolithC),max(tmp$otolithC),0.1) pred3 <- predict(lo3,data.frame(otolithC=xval),se=TRUE) bias3 <- data.frame(xval,pred3) bias3$lwr <- bias3$fit-1.96*bias3$se.fit bias3$upr <- bias3$fit+1.96*bias3$se.fit plot(ab1,show.range=FALSE,show.pts=TRUE,col.pts=\"white\",allowAdd=TRUE) with(bias3,polygon(c(xval,rev(xval)),c(lwr,rev(upr)),                    col=col2rgbt(\"red\",1/10),border=NA)) lines(fit~xval,data=bias3,lty=2,col=\"red\") points(diff~otolithC,data=tmp,pch=19,col=col2rgbt(\"black\",1/8))  par(op)"},{"path":"https://fishr-core-team.github.io/FSA/reference/agePrecision.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute measures of precision among sets of ages. — agePrecision","title":"Compute measures of precision among sets of ages. — agePrecision","text":"Computes overall measures precision multiple age estimates made individuals. Ages may two readers structure, one reader two times, two structures (e.g., scales, spines, otoliths). Measures precision include ACV (Average Coefficient Variation), APE (Average Percent Error), AAD (Average Absolute Deviation), ASD (Average Standard Deviation), various percentage difference values.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/agePrecision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute measures of precision among sets of ages. — agePrecision","text":"","code":"agePrecision(formula, data)  # S3 method for agePrec summary(   object,   what = c(\"precision\", \"difference\", \"absolute difference\", \"details\"),   percent = TRUE,   trunc.diff = NULL,   digits = 4,   show.prec2 = FALSE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/agePrecision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute measures of precision among sets of ages. — agePrecision","text":"formula formula form ~var1+var2+var3+... , alternatively, var1~var2+var3+..., varX generically represent variables contain age estimates. alternative formula allows similar code used ageBias can one variable left-hand side. data data.frame minimally contains variables formula. object object class agePrec, usually agePrecision. string (vector strings) indicates type summary print. See details. percent logical indicates whether difference table (see details) represented percentages (TRUE; default) frequency (FALSE) fish. trunc.diff single integer identifies age values age greater combined one category. See examples. digits single numeric indicates minimum number digits print using summary. show.prec2 logical indicates whether precision metrics use median (.e., ACV2 APE2) shown two age estimates made (instance exactly equal ACV APE). Default show values situation. ... Additional arguments methods.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/agePrecision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute measures of precision among sets of ages. — agePrecision","text":"main function returns list following items: detail data.frame data given data intermediate calculations fish. See details rawdiff frequency table fish differences pair ages. absdiff frequency table fish absolute differences pair ages. AAD average absolute deviation. APE average percent error (using mean age divisor). APE2 average percent error (using median age divisor). ASD average standard deviation. ACV average coefficient variation (using mean age divisor). ACV2 average coefficient variation (using median age divisor). AD average index precision. R number readings individual fish. n Number fish data. validn Number fish data non-NA data R age estimates. summary returns result = contains one item, otherwise returns nothing. See details printed.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/agePrecision.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute measures of precision among sets of ages. — agePrecision","text":"=\"precision\" summary summary table contains following items printed: n Number fish data. validn Number fish data non-NA data R age estimates. R Number age estimates given formula. PercAgree percentage fish age estimates perfectly agree. ASD average (across fish) standard deviation ages within fish. ACV average (across fish) coefficient variation ages within fish using mean divisor. See IFAR chapter calculation details. ACV2 average (across fish) coefficient variation ages within fish using median divisor. shown R>2 show.prec2=TRUE. AAD average (across fish) absolute deviation ages within fish. APE average (across fish) percent error ages within fish using mean divisor. See IFAR chapter calculation details. APE2 average (across fish) percent error ages within fish using median divisor. shown R>2 show.prec2=TRUE. AD average (across fish) index precision (D). Note ACV2 APE2 printed =\"precision\" two sets ages given (mean=median ACV=ACV2 APE=APE2). =\"difference\" used summary, table describes either percentage (percent=TRUE, DEFAULT) frequency fish difference paired age estimates. table one row possible pair age estimates. =\"absolute difference\" used summary, table describes either percentage (percent=TRUE, DEFAULT) frequency fish absolute value difference paired age estimates. table one row possible pair age estimates. “1” column, example, represents age estimates disagree one year (either direction). =\"detail\" used summary, data.frame original data along intermediate calculations mean age, median age, modal age (NA mode exist (e.g., different ages) multiple modes exist), standard deviation age (SD), coefficient variation using mean divisor (CV), coefficient variation using median divisor (CV2), absolute deviation using mean divisor (AD), absolute deviation using median divisor (AD2), average percent error (PE), index precision (D) individual printed. percentage calculations use validn value denominator.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/agePrecision.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Compute measures of precision among sets of ages. — agePrecision","text":"Tested precision results published results Herbst Marsden (2011) WhitefishLC data results AlewifeLH data set FSAdata results online resource http://www.nefsc.noaa.gov/fbp/age-prec/.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/agePrecision.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Compute measures of precision among sets of ages. — agePrecision","text":"4-Age Comparisons.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/agePrecision.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute measures of precision among sets of ages. — agePrecision","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Beamish, R.J. D.. Fournier. 1981. method comparing precision set age determinations. Canadian Journal Fisheries Aquatic Sciences 38:982-983. [(?) available http://www.pac.dfo-mpo.gc.ca/science/people-gens/beamish/PDF_files/compareagecjfas1981.pdf.] Campana, S.E. 1982. Accuracy, precision quality control age determination, including review use abuse age validation methods. Journal Fish Biology 59:197-242. [(?) available http://www.denix.osd.mil/nr/crid/Coral_Reef_Iniative_Database/References_for_Reef_Assessment_files/Campana,%202001.pdf.] Campana, S.E., M.C. Annand, J.. McMillan. 1995. Graphical statistical methods determining consistency age determinations. Transactions American Fisheries Society 124:131-138. [(?) available http://www.bio.gc.ca/otoliths/documents/Campana%20et%20al%201995%20TAFS.pdf.] Chang, W.Y.B. 1982. statistical method evaluating reproducibility age determination. Canadian Journal Fisheries Aquatic Sciences 39:1208-1210. [(?) available http://www.nrcresearchpress.com/doi/abs/10.1139/f82-158.] McBride, R.S. 2015. Diagnosis paired age agreement: simulation approach accuracy precision effects. ICES Journal Marine Science, 72:2149-2167.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/agePrecision.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute measures of precision among sets of ages. — agePrecision","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/agePrecision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute measures of precision among sets of ages. — agePrecision","text":"","code":"## Example with just two age estimates ap1 <- agePrecision(~otolithC+scaleC,data=WhitefishLC) summary(ap1) #> Precision summary statistics #>    n validn R PercAgree   ASD   ACV   AAD   APE #>  151    151 2     19.87 1.541 21.11 1.089 14.93 #>  #> Percentage of fish by absolute differences in ages #>  between pairs of estimates #>       0       1       2       3       4       5       6       7       8       9  #> 19.8675 30.4636 16.5563 13.9073  5.9603  3.3113  5.2980  1.9868  1.3245  0.0000  #>      10      11      12      13  #>  0.0000  0.6623  0.0000  0.6623  #>  #> Percentage of fish by differences in ages #>  between pairs of estimates #>      -3      -2      -1       0       1       2       3       4       5       6  #>  2.6490  0.6623 10.5960 19.8675 19.8675 15.8940 11.2583  5.9603  3.3113  5.2980  #>       7       8       9      10      11      12      13  #>  1.9868  1.3245  0.0000  0.0000  0.6623  0.0000  0.6623  #>  #> Intermediate calculations for each individual #>     otolithC scaleC mean median mode     SD     CV    CV2  AD     PE    PE2 #> 1          3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 2          3      4  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 3          3      6  4.5    4.5   NA 2.1213 47.140 47.140 1.5 33.333 33.333 #> 4          3      4  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 5          3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 6          6      4  5.0    5.0   NA 1.4142 28.284 28.284 1.0 20.000 20.000 #> 7         10      7  8.5    8.5   NA 2.1213 24.957 24.957 1.5 17.647 17.647 #> 8         11      5  8.0    8.0   NA 4.2426 53.033 53.033 3.0 37.500 37.500 #> 9          4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 10         1      1  1.0    1.0    1 0.0000  0.000  0.000 0.0  0.000  0.000 #> 11         1      2  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 12         3      4  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 13         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 14        11      6  8.5    8.5   NA 3.5355 41.595 41.595 2.5 29.412 29.412 #> 15        10      6  8.0    8.0   NA 2.8284 35.355 35.355 2.0 25.000 25.000 #> 16        10      6  8.0    8.0   NA 2.8284 35.355 35.355 2.0 25.000 25.000 #> 17        14      6 10.0   10.0   NA 5.6569 56.569 56.569 4.0 40.000 40.000 #> 18        13      6  9.5    9.5   NA 4.9497 52.103 52.103 3.5 36.842 36.842 #> 19        13      7 10.0   10.0   NA 4.2426 42.426 42.426 3.0 30.000 30.000 #> 20         7      6  6.5    6.5   NA 0.7071 10.879 10.879 0.5  7.692  7.692 #> 21        14      7 10.5   10.5   NA 4.9497 47.140 47.140 3.5 33.333 33.333 #> 22         9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 23         7      5  6.0    6.0   NA 1.4142 23.570 23.570 1.0 16.667 16.667 #> 24         6      5  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 25         6      3  4.5    4.5   NA 2.1213 47.140 47.140 1.5 33.333 33.333 #> 26         3      4  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 27         3      4  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 28         6      5  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 29         4      6  5.0    5.0   NA 1.4142 28.284 28.284 1.0 20.000 20.000 #> 30         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 31         4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 32         1      1  1.0    1.0    1 0.0000  0.000  0.000 0.0  0.000  0.000 #> 33         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 34         4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 35         4      2  3.0    3.0   NA 1.4142 47.140 47.140 1.0 33.333 33.333 #> 36         4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 37         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 38         1      2  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 39         1      1  1.0    1.0    1 0.0000  0.000  0.000 0.0  0.000  0.000 #> 40         2      1  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 41         2      1  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 42         4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 43         8      5  6.5    6.5   NA 2.1213 32.636 32.636 1.5 23.077 23.077 #> 44         2      5  3.5    3.5   NA 2.1213 60.609 60.609 1.5 42.857 42.857 #> 45         2      3  2.5    2.5   NA 0.7071 28.284 28.284 0.5 20.000 20.000 #> 46         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 47         1      2  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 48         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 49         8      5  6.5    6.5   NA 2.1213 32.636 32.636 1.5 23.077 23.077 #> 50         4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 51         2      2  2.0    2.0    2 0.0000  0.000  0.000 0.0  0.000  0.000 #> 52         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 53         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 54         8      5  6.5    6.5   NA 2.1213 32.636 32.636 1.5 23.077 23.077 #> 55         4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 56         6      5  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 57         7      5  6.0    6.0   NA 1.4142 23.570 23.570 1.0 16.667 16.667 #> 58         2      1  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 59         1      1  1.0    1.0    1 0.0000  0.000  0.000 0.0  0.000  0.000 #> 60         2      1  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 61         1      2  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 62         5      4  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 63         5      4  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 64         4      5  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 65         5      6  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 66        18      7 12.5   12.5   NA 7.7782 62.225 62.225 5.5 44.000 44.000 #> 67         7      8  7.5    7.5   NA 0.7071  9.428  9.428 0.5  6.667  6.667 #> 68         9      8  8.5    8.5   NA 0.7071  8.319  8.319 0.5  5.882  5.882 #> 69         5      4  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 70        10      8  9.0    9.0   NA 1.4142 15.713 15.713 1.0 11.111 11.111 #> 71        12      7  9.5    9.5   NA 3.5355 37.216 37.216 2.5 26.316 26.316 #> 72         7      5  6.0    6.0   NA 1.4142 23.570 23.570 1.0 16.667 16.667 #> 73        10      8  9.0    9.0   NA 1.4142 15.713 15.713 1.0 11.111 11.111 #> 74         9      6  7.5    7.5   NA 2.1213 28.284 28.284 1.5 20.000 20.000 #> 75        11      7  9.0    9.0   NA 2.8284 31.427 31.427 2.0 22.222 22.222 #> 76         1      1  1.0    1.0    1 0.0000  0.000  0.000 0.0  0.000  0.000 #> 77         3      1  2.0    2.0   NA 1.4142 70.711 70.711 1.0 50.000 50.000 #> 78        14     13 13.5   13.5   NA 0.7071  5.238  5.238 0.5  3.704  3.704 #> 79         8      6  7.0    7.0   NA 1.4142 20.203 20.203 1.0 14.286 14.286 #> 80        12      6  9.0    9.0   NA 4.2426 47.140 47.140 3.0 33.333 33.333 #> 81        11      9 10.0   10.0   NA 1.4142 14.142 14.142 1.0 10.000 10.000 #> 82         9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 83         8      7  7.5    7.5   NA 0.7071  9.428  9.428 0.5  6.667  6.667 #> 84         5      8  6.5    6.5   NA 2.1213 32.636 32.636 1.5 23.077 23.077 #> 85         8      7  7.5    7.5   NA 0.7071  9.428  9.428 0.5  6.667  6.667 #> 86        18     13 15.5   15.5   NA 3.5355 22.810 22.810 2.5 16.129 16.129 #> 87        12     10 11.0   11.0   NA 1.4142 12.856 12.856 1.0  9.091  9.091 #> 88        11      8  9.5    9.5   NA 2.1213 22.330 22.330 1.5 15.789 15.789 #> 89         9      8  8.5    8.5   NA 0.7071  8.319  8.319 0.5  5.882  5.882 #> 90        11      8  9.5    9.5   NA 2.1213 22.330 22.330 1.5 15.789 15.789 #> 91        13      9 11.0   11.0   NA 2.8284 25.713 25.713 2.0 18.182 18.182 #> 92         9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 93        10      7  8.5    8.5   NA 2.1213 24.957 24.957 1.5 17.647 17.647 #> 94         4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 95         6      4  5.0    5.0   NA 1.4142 28.284 28.284 1.0 20.000 20.000 #> 96         4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 97         4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 98         6      6  6.0    6.0    6 0.0000  0.000  0.000 0.0  0.000  0.000 #> 99        11      7  9.0    9.0   NA 2.8284 31.427 31.427 2.0 22.222 22.222 #> 100        8      6  7.0    7.0   NA 1.4142 20.203 20.203 1.0 14.286 14.286 #> 101        8      5  6.5    6.5   NA 2.1213 32.636 32.636 1.5 23.077 23.077 #> 102        5      6  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 103        6      5  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 104        6      4  5.0    5.0   NA 1.4142 28.284 28.284 1.0 20.000 20.000 #> 105        9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 106       13     10 11.5   11.5   NA 2.1213 18.446 18.446 1.5 13.043 13.043 #> 107        9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 108       12      7  9.5    9.5   NA 3.5355 37.216 37.216 2.5 26.316 26.316 #> 109        5      5  5.0    5.0    5 0.0000  0.000  0.000 0.0  0.000  0.000 #> 110        4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 111        7      7  7.0    7.0    7 0.0000  0.000  0.000 0.0  0.000  0.000 #> 112        4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 113        4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 114       10      7  8.5    8.5   NA 2.1213 24.957 24.957 1.5 17.647 17.647 #> 115        7      6  6.5    6.5   NA 0.7071 10.879 10.879 0.5  7.692  7.692 #> 116        5      5  5.0    5.0    5 0.0000  0.000  0.000 0.0  0.000  0.000 #> 117       17      9 13.0   13.0   NA 5.6569 43.514 43.514 4.0 30.769 30.769 #> 118        7      6  6.5    6.5   NA 0.7071 10.879 10.879 0.5  7.692  7.692 #> 119       10      8  9.0    9.0   NA 1.4142 15.713 15.713 1.0 11.111 11.111 #> 120       11      8  9.5    9.5   NA 2.1213 22.330 22.330 1.5 15.789 15.789 #> 121       12      8 10.0   10.0   NA 2.8284 28.284 28.284 2.0 20.000 20.000 #> 122        4      5  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 123        8      7  7.5    7.5   NA 0.7071  9.428  9.428 0.5  6.667  6.667 #> 124       12      9 10.5   10.5   NA 2.1213 20.203 20.203 1.5 14.286 14.286 #> 125       17     11 14.0   14.0   NA 4.2426 30.305 30.305 3.0 21.429 21.429 #> 126       13     13 13.0   13.0   13 0.0000  0.000  0.000 0.0  0.000  0.000 #> 127       16     13 14.5   14.5   NA 2.1213 14.630 14.630 1.5 10.345 10.345 #> 128       17     11 14.0   14.0   NA 4.2426 30.305 30.305 3.0 21.429 21.429 #> 129       15     12 13.5   13.5   NA 2.1213 15.713 15.713 1.5 11.111 11.111 #> 130        4      5  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 131       13     11 12.0   12.0   NA 1.4142 11.785 11.785 1.0  8.333  8.333 #> 132       16     10 13.0   13.0   NA 4.2426 32.636 32.636 3.0 23.077 23.077 #> 133        7     10  8.5    8.5   NA 2.1213 24.957 24.957 1.5 17.647 17.647 #> 134        6      5  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 135       16     12 14.0   14.0   NA 2.8284 20.203 20.203 2.0 14.286 14.286 #> 136       15     11 13.0   13.0   NA 2.8284 21.757 21.757 2.0 15.385 15.385 #> 137       15     14 14.5   14.5   NA 0.7071  4.877  4.877 0.5  3.448  3.448 #> 138        8      6  7.0    7.0   NA 1.4142 20.203 20.203 1.0 14.286 14.286 #> 139       10      7  8.5    8.5   NA 2.1213 24.957 24.957 1.5 17.647 17.647 #> 140        8      8  8.0    8.0    8 0.0000  0.000  0.000 0.0  0.000  0.000 #> 141       19     14 16.5   16.5   NA 3.5355 21.427 21.427 2.5 15.152 15.152 #> 142        9      8  8.5    8.5   NA 0.7071  8.319  8.319 0.5  5.882  5.882 #> 143       12     12 12.0   12.0   12 0.0000  0.000  0.000 0.0  0.000  0.000 #> 144        8      6  7.0    7.0   NA 1.4142 20.203 20.203 1.0 14.286 14.286 #> 145       15      9 12.0   12.0   NA 4.2426 35.355 35.355 3.0 25.000 25.000 #> 146        9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 147       17     13 15.0   15.0   NA 2.8284 18.856 18.856 2.0 13.333 13.333 #> 148       23     10 16.5   16.5   NA 9.1924 55.711 55.711 6.5 39.394 39.394 #> 149       16     15 15.5   15.5   NA 0.7071  4.562  4.562 0.5  3.226  3.226 #> 150       15      9 12.0   12.0   NA 4.2426 35.355 35.355 3.0 25.000 25.000 #> 151       13      6  9.5    9.5   NA 4.9497 52.103 52.103 3.5 36.842 36.842 #>          D #> 1    0.000 #> 2   14.286 #> 3   33.333 #> 4   14.286 #> 5    0.000 #> 6   20.000 #> 7   17.647 #> 8   37.500 #> 9   14.286 #> 10   0.000 #> 11  33.333 #> 12  14.286 #> 13   0.000 #> 14  29.412 #> 15  25.000 #> 16  25.000 #> 17  40.000 #> 18  36.842 #> 19  30.000 #> 20   7.692 #> 21  33.333 #> 22  12.500 #> 23  16.667 #> 24   9.091 #> 25  33.333 #> 26  14.286 #> 27  14.286 #> 28   9.091 #> 29  20.000 #> 30   0.000 #> 31   0.000 #> 32   0.000 #> 33   0.000 #> 34   0.000 #> 35  33.333 #> 36  14.286 #> 37   0.000 #> 38  33.333 #> 39   0.000 #> 40  33.333 #> 41  33.333 #> 42  14.286 #> 43  23.077 #> 44  42.857 #> 45  20.000 #> 46   0.000 #> 47  33.333 #> 48   0.000 #> 49  23.077 #> 50  14.286 #> 51   0.000 #> 52   0.000 #> 53   0.000 #> 54  23.077 #> 55   0.000 #> 56   9.091 #> 57  16.667 #> 58  33.333 #> 59   0.000 #> 60  33.333 #> 61  33.333 #> 62  11.111 #> 63  11.111 #> 64  11.111 #> 65   9.091 #> 66  44.000 #> 67   6.667 #> 68   5.882 #> 69  11.111 #> 70  11.111 #> 71  26.316 #> 72  16.667 #> 73  11.111 #> 74  20.000 #> 75  22.222 #> 76   0.000 #> 77  50.000 #> 78   3.704 #> 79  14.286 #> 80  33.333 #> 81  10.000 #> 82  12.500 #> 83   6.667 #> 84  23.077 #> 85   6.667 #> 86  16.129 #> 87   9.091 #> 88  15.789 #> 89   5.882 #> 90  15.789 #> 91  18.182 #> 92  12.500 #> 93  17.647 #> 94   0.000 #> 95  20.000 #> 96  14.286 #> 97  14.286 #> 98   0.000 #> 99  22.222 #> 100 14.286 #> 101 23.077 #> 102  9.091 #> 103  9.091 #> 104 20.000 #> 105 12.500 #> 106 13.043 #> 107 12.500 #> 108 26.316 #> 109  0.000 #> 110  0.000 #> 111  0.000 #> 112  0.000 #> 113  0.000 #> 114 17.647 #> 115  7.692 #> 116  0.000 #> 117 30.769 #> 118  7.692 #> 119 11.111 #> 120 15.789 #> 121 20.000 #> 122 11.111 #> 123  6.667 #> 124 14.286 #> 125 21.429 #> 126  0.000 #> 127 10.345 #> 128 21.429 #> 129 11.111 #> 130 11.111 #> 131  8.333 #> 132 23.077 #> 133 17.647 #> 134  9.091 #> 135 14.286 #> 136 15.385 #> 137  3.448 #> 138 14.286 #> 139 17.647 #> 140  0.000 #> 141 15.152 #> 142  5.882 #> 143  0.000 #> 144 14.286 #> 145 25.000 #> 146 12.500 #> 147 13.333 #> 148 39.394 #> 149  3.226 #> 150 25.000 #> 151 36.842 summary(ap1,what=\"precision\") #>    n validn R PercAgree   ASD   ACV   AAD   APE #>  151    151 2     19.87 1.541 21.11 1.089 14.93 summary(ap1,what=\"difference\") #>      -3      -2      -1       0       1       2       3       4       5       6  #>  2.6490  0.6623 10.5960 19.8675 19.8675 15.8940 11.2583  5.9603  3.3113  5.2980  #>       7       8       9      10      11      12      13  #>  1.9868  1.3245  0.0000  0.0000  0.6623  0.0000  0.6623  summary(ap1,what=\"difference\",percent=FALSE) #> -3 -2 -1  0  1  2  3  4  5  6  7  8  9 10 11 12 13  #>  4  1 16 30 30 24 17  9  5  8  3  2  0  0  1  0  1  summary(ap1,what=\"absolute\") #>       0       1       2       3       4       5       6       7       8       9  #> 19.8675 30.4636 16.5563 13.9073  5.9603  3.3113  5.2980  1.9868  1.3245  0.0000  #>      10      11      12      13  #>  0.0000  0.6623  0.0000  0.6623  summary(ap1,what=\"absolute\",percent=FALSE) #>  0  1  2  3  4  5  6  7  8  9 10 11 12 13  #> 30 46 25 21  9  5  8  3  2  0  0  1  0  1  summary(ap1,what=\"absolute\",trunc.diff=4) #>     0     1     2     3    4+  #> 19.87 30.46 16.56 13.91 19.21  summary(ap1,what=c(\"precision\",\"difference\")) #> Precision summary statistics #>    n validn R PercAgree   ASD   ACV   AAD   APE #>  151    151 2     19.87 1.541 21.11 1.089 14.93 #>  #> Percentage of fish by differences in ages #>  between pairs of estimates #>      -3      -2      -1       0       1       2       3       4       5       6  #>  2.6490  0.6623 10.5960 19.8675 19.8675 15.8940 11.2583  5.9603  3.3113  5.2980  #>       7       8       9      10      11      12      13  #>  1.9868  1.3245  0.0000  0.0000  0.6623  0.0000  0.6623  summary(ap1,what=\"detail\") #>     otolithC scaleC mean median mode     SD     CV    CV2  AD     PE    PE2 #> 1          3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 2          3      4  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 3          3      6  4.5    4.5   NA 2.1213 47.140 47.140 1.5 33.333 33.333 #> 4          3      4  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 5          3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 6          6      4  5.0    5.0   NA 1.4142 28.284 28.284 1.0 20.000 20.000 #> 7         10      7  8.5    8.5   NA 2.1213 24.957 24.957 1.5 17.647 17.647 #> 8         11      5  8.0    8.0   NA 4.2426 53.033 53.033 3.0 37.500 37.500 #> 9          4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 10         1      1  1.0    1.0    1 0.0000  0.000  0.000 0.0  0.000  0.000 #> 11         1      2  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 12         3      4  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 13         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 14        11      6  8.5    8.5   NA 3.5355 41.595 41.595 2.5 29.412 29.412 #> 15        10      6  8.0    8.0   NA 2.8284 35.355 35.355 2.0 25.000 25.000 #> 16        10      6  8.0    8.0   NA 2.8284 35.355 35.355 2.0 25.000 25.000 #> 17        14      6 10.0   10.0   NA 5.6569 56.569 56.569 4.0 40.000 40.000 #> 18        13      6  9.5    9.5   NA 4.9497 52.103 52.103 3.5 36.842 36.842 #> 19        13      7 10.0   10.0   NA 4.2426 42.426 42.426 3.0 30.000 30.000 #> 20         7      6  6.5    6.5   NA 0.7071 10.879 10.879 0.5  7.692  7.692 #> 21        14      7 10.5   10.5   NA 4.9497 47.140 47.140 3.5 33.333 33.333 #> 22         9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 23         7      5  6.0    6.0   NA 1.4142 23.570 23.570 1.0 16.667 16.667 #> 24         6      5  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 25         6      3  4.5    4.5   NA 2.1213 47.140 47.140 1.5 33.333 33.333 #> 26         3      4  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 27         3      4  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 28         6      5  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 29         4      6  5.0    5.0   NA 1.4142 28.284 28.284 1.0 20.000 20.000 #> 30         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 31         4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 32         1      1  1.0    1.0    1 0.0000  0.000  0.000 0.0  0.000  0.000 #> 33         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 34         4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 35         4      2  3.0    3.0   NA 1.4142 47.140 47.140 1.0 33.333 33.333 #> 36         4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 37         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 38         1      2  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 39         1      1  1.0    1.0    1 0.0000  0.000  0.000 0.0  0.000  0.000 #> 40         2      1  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 41         2      1  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 42         4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 43         8      5  6.5    6.5   NA 2.1213 32.636 32.636 1.5 23.077 23.077 #> 44         2      5  3.5    3.5   NA 2.1213 60.609 60.609 1.5 42.857 42.857 #> 45         2      3  2.5    2.5   NA 0.7071 28.284 28.284 0.5 20.000 20.000 #> 46         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 47         1      2  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 48         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 49         8      5  6.5    6.5   NA 2.1213 32.636 32.636 1.5 23.077 23.077 #> 50         4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 51         2      2  2.0    2.0    2 0.0000  0.000  0.000 0.0  0.000  0.000 #> 52         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 53         3      3  3.0    3.0    3 0.0000  0.000  0.000 0.0  0.000  0.000 #> 54         8      5  6.5    6.5   NA 2.1213 32.636 32.636 1.5 23.077 23.077 #> 55         4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 56         6      5  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 57         7      5  6.0    6.0   NA 1.4142 23.570 23.570 1.0 16.667 16.667 #> 58         2      1  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 59         1      1  1.0    1.0    1 0.0000  0.000  0.000 0.0  0.000  0.000 #> 60         2      1  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 61         1      2  1.5    1.5   NA 0.7071 47.140 47.140 0.5 33.333 33.333 #> 62         5      4  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 63         5      4  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 64         4      5  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 65         5      6  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 66        18      7 12.5   12.5   NA 7.7782 62.225 62.225 5.5 44.000 44.000 #> 67         7      8  7.5    7.5   NA 0.7071  9.428  9.428 0.5  6.667  6.667 #> 68         9      8  8.5    8.5   NA 0.7071  8.319  8.319 0.5  5.882  5.882 #> 69         5      4  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 70        10      8  9.0    9.0   NA 1.4142 15.713 15.713 1.0 11.111 11.111 #> 71        12      7  9.5    9.5   NA 3.5355 37.216 37.216 2.5 26.316 26.316 #> 72         7      5  6.0    6.0   NA 1.4142 23.570 23.570 1.0 16.667 16.667 #> 73        10      8  9.0    9.0   NA 1.4142 15.713 15.713 1.0 11.111 11.111 #> 74         9      6  7.5    7.5   NA 2.1213 28.284 28.284 1.5 20.000 20.000 #> 75        11      7  9.0    9.0   NA 2.8284 31.427 31.427 2.0 22.222 22.222 #> 76         1      1  1.0    1.0    1 0.0000  0.000  0.000 0.0  0.000  0.000 #> 77         3      1  2.0    2.0   NA 1.4142 70.711 70.711 1.0 50.000 50.000 #> 78        14     13 13.5   13.5   NA 0.7071  5.238  5.238 0.5  3.704  3.704 #> 79         8      6  7.0    7.0   NA 1.4142 20.203 20.203 1.0 14.286 14.286 #> 80        12      6  9.0    9.0   NA 4.2426 47.140 47.140 3.0 33.333 33.333 #> 81        11      9 10.0   10.0   NA 1.4142 14.142 14.142 1.0 10.000 10.000 #> 82         9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 83         8      7  7.5    7.5   NA 0.7071  9.428  9.428 0.5  6.667  6.667 #> 84         5      8  6.5    6.5   NA 2.1213 32.636 32.636 1.5 23.077 23.077 #> 85         8      7  7.5    7.5   NA 0.7071  9.428  9.428 0.5  6.667  6.667 #> 86        18     13 15.5   15.5   NA 3.5355 22.810 22.810 2.5 16.129 16.129 #> 87        12     10 11.0   11.0   NA 1.4142 12.856 12.856 1.0  9.091  9.091 #> 88        11      8  9.5    9.5   NA 2.1213 22.330 22.330 1.5 15.789 15.789 #> 89         9      8  8.5    8.5   NA 0.7071  8.319  8.319 0.5  5.882  5.882 #> 90        11      8  9.5    9.5   NA 2.1213 22.330 22.330 1.5 15.789 15.789 #> 91        13      9 11.0   11.0   NA 2.8284 25.713 25.713 2.0 18.182 18.182 #> 92         9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 93        10      7  8.5    8.5   NA 2.1213 24.957 24.957 1.5 17.647 17.647 #> 94         4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 95         6      4  5.0    5.0   NA 1.4142 28.284 28.284 1.0 20.000 20.000 #> 96         4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 97         4      3  3.5    3.5   NA 0.7071 20.203 20.203 0.5 14.286 14.286 #> 98         6      6  6.0    6.0    6 0.0000  0.000  0.000 0.0  0.000  0.000 #> 99        11      7  9.0    9.0   NA 2.8284 31.427 31.427 2.0 22.222 22.222 #> 100        8      6  7.0    7.0   NA 1.4142 20.203 20.203 1.0 14.286 14.286 #> 101        8      5  6.5    6.5   NA 2.1213 32.636 32.636 1.5 23.077 23.077 #> 102        5      6  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 103        6      5  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 104        6      4  5.0    5.0   NA 1.4142 28.284 28.284 1.0 20.000 20.000 #> 105        9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 106       13     10 11.5   11.5   NA 2.1213 18.446 18.446 1.5 13.043 13.043 #> 107        9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 108       12      7  9.5    9.5   NA 3.5355 37.216 37.216 2.5 26.316 26.316 #> 109        5      5  5.0    5.0    5 0.0000  0.000  0.000 0.0  0.000  0.000 #> 110        4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 111        7      7  7.0    7.0    7 0.0000  0.000  0.000 0.0  0.000  0.000 #> 112        4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 113        4      4  4.0    4.0    4 0.0000  0.000  0.000 0.0  0.000  0.000 #> 114       10      7  8.5    8.5   NA 2.1213 24.957 24.957 1.5 17.647 17.647 #> 115        7      6  6.5    6.5   NA 0.7071 10.879 10.879 0.5  7.692  7.692 #> 116        5      5  5.0    5.0    5 0.0000  0.000  0.000 0.0  0.000  0.000 #> 117       17      9 13.0   13.0   NA 5.6569 43.514 43.514 4.0 30.769 30.769 #> 118        7      6  6.5    6.5   NA 0.7071 10.879 10.879 0.5  7.692  7.692 #> 119       10      8  9.0    9.0   NA 1.4142 15.713 15.713 1.0 11.111 11.111 #> 120       11      8  9.5    9.5   NA 2.1213 22.330 22.330 1.5 15.789 15.789 #> 121       12      8 10.0   10.0   NA 2.8284 28.284 28.284 2.0 20.000 20.000 #> 122        4      5  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 123        8      7  7.5    7.5   NA 0.7071  9.428  9.428 0.5  6.667  6.667 #> 124       12      9 10.5   10.5   NA 2.1213 20.203 20.203 1.5 14.286 14.286 #> 125       17     11 14.0   14.0   NA 4.2426 30.305 30.305 3.0 21.429 21.429 #> 126       13     13 13.0   13.0   13 0.0000  0.000  0.000 0.0  0.000  0.000 #> 127       16     13 14.5   14.5   NA 2.1213 14.630 14.630 1.5 10.345 10.345 #> 128       17     11 14.0   14.0   NA 4.2426 30.305 30.305 3.0 21.429 21.429 #> 129       15     12 13.5   13.5   NA 2.1213 15.713 15.713 1.5 11.111 11.111 #> 130        4      5  4.5    4.5   NA 0.7071 15.713 15.713 0.5 11.111 11.111 #> 131       13     11 12.0   12.0   NA 1.4142 11.785 11.785 1.0  8.333  8.333 #> 132       16     10 13.0   13.0   NA 4.2426 32.636 32.636 3.0 23.077 23.077 #> 133        7     10  8.5    8.5   NA 2.1213 24.957 24.957 1.5 17.647 17.647 #> 134        6      5  5.5    5.5   NA 0.7071 12.856 12.856 0.5  9.091  9.091 #> 135       16     12 14.0   14.0   NA 2.8284 20.203 20.203 2.0 14.286 14.286 #> 136       15     11 13.0   13.0   NA 2.8284 21.757 21.757 2.0 15.385 15.385 #> 137       15     14 14.5   14.5   NA 0.7071  4.877  4.877 0.5  3.448  3.448 #> 138        8      6  7.0    7.0   NA 1.4142 20.203 20.203 1.0 14.286 14.286 #> 139       10      7  8.5    8.5   NA 2.1213 24.957 24.957 1.5 17.647 17.647 #> 140        8      8  8.0    8.0    8 0.0000  0.000  0.000 0.0  0.000  0.000 #> 141       19     14 16.5   16.5   NA 3.5355 21.427 21.427 2.5 15.152 15.152 #> 142        9      8  8.5    8.5   NA 0.7071  8.319  8.319 0.5  5.882  5.882 #> 143       12     12 12.0   12.0   12 0.0000  0.000  0.000 0.0  0.000  0.000 #> 144        8      6  7.0    7.0   NA 1.4142 20.203 20.203 1.0 14.286 14.286 #> 145       15      9 12.0   12.0   NA 4.2426 35.355 35.355 3.0 25.000 25.000 #> 146        9      7  8.0    8.0   NA 1.4142 17.678 17.678 1.0 12.500 12.500 #> 147       17     13 15.0   15.0   NA 2.8284 18.856 18.856 2.0 13.333 13.333 #> 148       23     10 16.5   16.5   NA 9.1924 55.711 55.711 6.5 39.394 39.394 #> 149       16     15 15.5   15.5   NA 0.7071  4.562  4.562 0.5  3.226  3.226 #> 150       15      9 12.0   12.0   NA 4.2426 35.355 35.355 3.0 25.000 25.000 #> 151       13      6  9.5    9.5   NA 4.9497 52.103 52.103 3.5 36.842 36.842 #>          D #> 1    0.000 #> 2   14.286 #> 3   33.333 #> 4   14.286 #> 5    0.000 #> 6   20.000 #> 7   17.647 #> 8   37.500 #> 9   14.286 #> 10   0.000 #> 11  33.333 #> 12  14.286 #> 13   0.000 #> 14  29.412 #> 15  25.000 #> 16  25.000 #> 17  40.000 #> 18  36.842 #> 19  30.000 #> 20   7.692 #> 21  33.333 #> 22  12.500 #> 23  16.667 #> 24   9.091 #> 25  33.333 #> 26  14.286 #> 27  14.286 #> 28   9.091 #> 29  20.000 #> 30   0.000 #> 31   0.000 #> 32   0.000 #> 33   0.000 #> 34   0.000 #> 35  33.333 #> 36  14.286 #> 37   0.000 #> 38  33.333 #> 39   0.000 #> 40  33.333 #> 41  33.333 #> 42  14.286 #> 43  23.077 #> 44  42.857 #> 45  20.000 #> 46   0.000 #> 47  33.333 #> 48   0.000 #> 49  23.077 #> 50  14.286 #> 51   0.000 #> 52   0.000 #> 53   0.000 #> 54  23.077 #> 55   0.000 #> 56   9.091 #> 57  16.667 #> 58  33.333 #> 59   0.000 #> 60  33.333 #> 61  33.333 #> 62  11.111 #> 63  11.111 #> 64  11.111 #> 65   9.091 #> 66  44.000 #> 67   6.667 #> 68   5.882 #> 69  11.111 #> 70  11.111 #> 71  26.316 #> 72  16.667 #> 73  11.111 #> 74  20.000 #> 75  22.222 #> 76   0.000 #> 77  50.000 #> 78   3.704 #> 79  14.286 #> 80  33.333 #> 81  10.000 #> 82  12.500 #> 83   6.667 #> 84  23.077 #> 85   6.667 #> 86  16.129 #> 87   9.091 #> 88  15.789 #> 89   5.882 #> 90  15.789 #> 91  18.182 #> 92  12.500 #> 93  17.647 #> 94   0.000 #> 95  20.000 #> 96  14.286 #> 97  14.286 #> 98   0.000 #> 99  22.222 #> 100 14.286 #> 101 23.077 #> 102  9.091 #> 103  9.091 #> 104 20.000 #> 105 12.500 #> 106 13.043 #> 107 12.500 #> 108 26.316 #> 109  0.000 #> 110  0.000 #> 111  0.000 #> 112  0.000 #> 113  0.000 #> 114 17.647 #> 115  7.692 #> 116  0.000 #> 117 30.769 #> 118  7.692 #> 119 11.111 #> 120 15.789 #> 121 20.000 #> 122 11.111 #> 123  6.667 #> 124 14.286 #> 125 21.429 #> 126  0.000 #> 127 10.345 #> 128 21.429 #> 129 11.111 #> 130 11.111 #> 131  8.333 #> 132 23.077 #> 133 17.647 #> 134  9.091 #> 135 14.286 #> 136 15.385 #> 137  3.448 #> 138 14.286 #> 139 17.647 #> 140  0.000 #> 141 15.152 #> 142  5.882 #> 143  0.000 #> 144 14.286 #> 145 25.000 #> 146 12.500 #> 147 13.333 #> 148 39.394 #> 149  3.226 #> 150 25.000 #> 151 36.842  barplot(ap1$rawdiff,ylab=\"Frequency\",xlab=\"Otolith - Scale Age\")  plot(AD~mean,data=ap1$detail,pch=19,col=col2rgbt(\"black\",1/5),      xlab=\"Mean Age\",ylab=\"Absolute Deviation Age\")  plot(SD~mean,data=ap1$detail,pch=19,col=col2rgbt(\"black\",1/5),      xlab=\"Mean Age\",ylab=\"Standard deviation Age\")  plot(SD~AD,data=ap1$detail,pch=19,col=col2rgbt(\"black\",1/5),      xlab=\"Absolute Deviation Age\",ylab=\"Standard deviation Age\")  plot(CV~PE,data=ap1$detail,pch=19,col=col2rgbt(\"black\",1/5),      xlab=\"Percent Error Age\",ylab=\"Coefficient of Variation Age\")   ## Example with three age estimates ap2 <- agePrecision(~otolithC+finrayC+scaleC,data=WhitefishLC) summary(ap2,digits=3) #> Precision summary statistics #>    n validn R PercAgree  ASD  ACV ACV2 AAD  APE APE2   AD #>  151    151 3      12.6 1.49 21.8 27.5 1.1 16.2 14.8 12.6 #>  #> Percentage of fish by absolute differences in ages #>  between pairs of estimates #>                          0      1      2      3      4      5      6      7 #> otolithC v. finrayC 24.503 21.192 17.881 11.921  7.285  7.947  3.311  2.649 #> otolithC v. scaleC  19.868 30.464 16.556 13.907  5.960  3.311  5.298  1.987 #> finrayC v. scaleC   40.397 34.437 15.232  5.298  3.974  0.000  0.662  0.000 #>                          8      9     10     11     12     13     14 #> otolithC v. finrayC  0.662  1.325  0.000  0.662  0.000  0.000  0.662 #> otolithC v. scaleC   1.325  0.000  0.000  0.662  0.000  0.662  0.000 #> finrayC v. scaleC    0.000  0.000  0.000  0.000  0.000  0.000  0.000 #>  #> Percentage of fish by differences in ages #>  between pairs of estimates #>                        -4     -3     -2     -1      0      1      2      3 #> otolithC - finrayC  0.000  0.000  1.325  3.311 24.503 17.881 16.556 11.921 #> otolithC - scaleC   0.000  2.649  0.662 10.596 19.868 19.868 15.894 11.258 #> finrayC - scaleC    3.311  4.636 12.583 19.868 40.397 14.570  2.649  0.662 #>                         4      5      6      7      8      9     10     11 #> otolithC - finrayC  7.285  7.947  3.311  2.649  0.662  1.325  0.000  0.662 #> otolithC - scaleC   5.960  3.311  5.298  1.987  1.325  0.000  0.000  0.662 #> finrayC - scaleC    0.662  0.000  0.662  0.000  0.000  0.000  0.000  0.000 #>                        12     13     14 #> otolithC - finrayC  0.000  0.000  0.662 #> otolithC - scaleC   0.000  0.662  0.000 #> finrayC - scaleC    0.000  0.000  0.000 #>  #> Intermediate calculations for each individual #>     otolithC finrayC scaleC  mean median mode    SD    CV    CV2    AD    PE #> 1          3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 2          3       3      4  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 3          3       3      6  4.00      3    3 1.732 43.30  70.71 1.333 33.33 #> 4          3       3      4  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 5          3       4      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 6          6       3      4  4.33      4   NA 1.528 35.25  39.53 1.111 25.64 #> 7         10       6      7  7.67      7   NA 2.082 27.15  31.94 1.556 20.29 #> 8         11       9      5  8.33      9   NA 3.055 36.66  35.14 2.222 26.67 #> 9          4       3      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 10         1       1      1  1.00      1    1 0.000  0.00   0.00 0.000  0.00 #> 11         1       2      2  1.67      2    2 0.577 34.64  35.36 0.444 26.67 #> 12         3       3      4  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 13         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 14        11       8      6  8.33      8   NA 2.517 30.20  31.87 1.778 21.33 #> 15        10       7      6  7.67      7   NA 2.082 27.15  31.94 1.556 20.29 #> 16        10       6      6  7.33      6    6 2.309 31.49  47.14 1.778 24.24 #> 17        14      12      6 10.67     12   NA 4.163 39.03  37.27 3.111 29.17 #> 18        13       6      6  8.33      6    6 4.041 48.50  82.50 3.111 37.33 #> 19        13       8      7  9.33      8   NA 3.215 34.44  45.07 2.444 26.19 #> 20         7       6      6  6.33      6    6 0.577  9.12  11.79 0.444  7.02 #> 21        14       7      7  9.33      7    7 4.041 43.30  70.71 3.111 33.33 #> 22         9       6      7  7.33      7   NA 1.528 20.83  22.59 1.111 15.15 #> 23         7       4      5  5.33      5   NA 1.528 28.64  31.62 1.111 20.83 #> 24         6       6      5  5.67      6    6 0.577 10.19  11.79 0.444  7.84 #> 25         6       6      3  5.00      6    6 1.732 34.64  35.36 1.333 26.67 #> 26         3       3      4  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 27         3       3      4  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 28         6       4      5  5.00      5   NA 1.000 20.00  20.00 0.667 13.33 #> 29         4       4      6  4.67      4    4 1.155 24.74  35.36 0.889 19.05 #> 30         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 31         4       3      4  3.67      4    4 0.577 15.75  17.68 0.444 12.12 #> 32         1       1      1  1.00      1    1 0.000  0.00   0.00 0.000  0.00 #> 33         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 34         4       2      4  3.33      4    4 1.155 34.64  35.36 0.889 26.67 #> 35         4       3      2  3.00      3   NA 1.000 33.33  33.33 0.667 22.22 #> 36         4       3      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 37         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 38         1       3      2  2.00      2   NA 1.000 50.00  50.00 0.667 33.33 #> 39         1       2      1  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 40         2       1      1  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 41         2       1      1  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 42         4       3      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 43         8       6      5  6.33      6   NA 1.528 24.12  26.35 1.111 17.54 #> 44         2       3      5  3.33      3   NA 1.528 45.83  52.70 1.111 33.33 #> 45         2       4      3  3.00      3   NA 1.000 33.33  33.33 0.667 22.22 #> 46         3       2      3  2.67      3    3 0.577 21.65  23.57 0.444 16.67 #> 47         1       1      2  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 48         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 49         8       7      5  6.67      7   NA 1.528 22.91  22.59 1.111 16.67 #> 50         4       4      3  3.67      4    4 0.577 15.75  17.68 0.444 12.12 #> 51         2       2      2  2.00      2    2 0.000  0.00   0.00 0.000  0.00 #> 52         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 53         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 54         8       6      5  6.33      6   NA 1.528 24.12  26.35 1.111 17.54 #> 55         4       4      4  4.00      4    4 0.000  0.00   0.00 0.000  0.00 #> 56         6       6      5  5.67      6    6 0.577 10.19  11.79 0.444  7.84 #> 57         7       5      5  5.67      5    5 1.155 20.38  28.28 0.889 15.69 #> 58         2       1      1  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 59         1       1      1  1.00      1    1 0.000  0.00   0.00 0.000  0.00 #> 60         2       1      1  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 61         1       1      2  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 62         5       5      4  4.67      5    5 0.577 12.37  14.14 0.444  9.52 #> 63         5       4      4  4.33      4    4 0.577 13.32  17.68 0.444 10.26 #> 64         4       4      5  4.33      4    4 0.577 13.32  17.68 0.444 10.26 #> 65         5       3      6  4.67      5   NA 1.528 32.73  31.62 1.111 23.81 #> 66        18       7      7 10.67      7    7 6.351 59.54 111.12 4.889 45.83 #> 67         7       5      8  6.67      7   NA 1.528 22.91  22.59 1.111 16.67 #> 68         9       6      8  7.67      8   NA 1.528 19.92  19.76 1.111 14.49 #> 69         5       4      4  4.33      4    4 0.577 13.32  17.68 0.444 10.26 #> 70        10       6      8  8.00      8   NA 2.000 25.00  25.00 1.333 16.67 #> 71        12       7      7  8.67      7    7 2.887 33.31  50.51 2.222 25.64 #> 72         7       6      5  6.00      6   NA 1.000 16.67  16.67 0.667 11.11 #> 73        10       7      8  8.33      8   NA 1.528 18.33  19.76 1.111 13.33 #> 74         9       5      6  6.67      6   NA 2.082 31.22  37.27 1.556 23.33 #> 75        11       7      7  8.33      7    7 2.309 27.71  40.41 1.778 21.33 #> 76         1       1      1  1.00      1    1 0.000  0.00   0.00 0.000  0.00 #> 77         3       2      1  2.00      2   NA 1.000 50.00  50.00 0.667 33.33 #> 78        14       9     13 12.00     13   NA 2.646 22.05  22.43 2.000 16.67 #> 79         8       6      6  6.67      6    6 1.155 17.32  23.57 0.889 13.33 #> 80        12       7      6  8.33      7   NA 3.215 38.57  51.51 2.444 29.33 #> 81        11       7      9  9.00      9   NA 2.000 22.22  22.22 1.333 14.81 #> 82         9       7      7  7.67      7    7 1.155 15.06  20.20 0.889 11.59 #> 83         8       6      7  7.00      7   NA 1.000 14.29  14.29 0.667  9.52 #> 84         5       4      8  5.67      5   NA 2.082 36.74  44.72 1.556 27.45 #> 85         8       6      7  7.00      7   NA 1.000 14.29  14.29 0.667  9.52 #> 86        18       9     13 13.33     13   NA 4.509 33.82  34.83 3.111 23.33 #> 87        12       8     10 10.00     10   NA 2.000 20.00  20.00 1.333 13.33 #> 88        11       5      8  8.00      8   NA 3.000 37.50  37.50 2.000 25.00 #> 89         9       6      8  7.67      8   NA 1.528 19.92  19.76 1.111 14.49 #> 90        11       8      8  9.00      8    8 1.732 19.25  26.52 1.333 14.81 #> 91        13       7      9  9.67      9   NA 3.055 31.60  35.14 2.222 22.99 #> 92         9       6      7  7.33      7   NA 1.528 20.83  22.59 1.111 15.15 #> 93        10       7      7  8.00      7    7 1.732 21.65  30.30 1.333 16.67 #> 94         4       3      4  3.67      4    4 0.577 15.75  17.68 0.444 12.12 #> 95         6       4      4  4.67      4    4 1.155 24.74  35.36 0.889 19.05 #> 96         4       3      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 97         4       3      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 98         6       6      6  6.00      6    6 0.000  0.00   0.00 0.000  0.00 #> 99        11       7      7  8.33      7    7 2.309 27.71  40.41 1.778 21.33 #> 100        8       6      6  6.67      6    6 1.155 17.32  23.57 0.889 13.33 #> 101        8       5      5  6.00      5    5 1.732 28.87  42.43 1.333 22.22 #> 102        5       5      6  5.33      5    5 0.577 10.83  14.14 0.444  8.33 #> 103        6       4      5  5.00      5   NA 1.000 20.00  20.00 0.667 13.33 #> 104        6       4      4  4.67      4    4 1.155 24.74  35.36 0.889 19.05 #> 105        9       7      7  7.67      7    7 1.155 15.06  20.20 0.889 11.59 #> 106       13      10     10 11.00     10   10 1.732 15.75  21.21 1.333 12.12 #> 107        9       8      7  8.00      8   NA 1.000 12.50  12.50 0.667  8.33 #> 108       12       7      7  8.67      7    7 2.887 33.31  50.51 2.222 25.64 #> 109        5       5      5  5.00      5    5 0.000  0.00   0.00 0.000  0.00 #> 110        4       4      4  4.00      4    4 0.000  0.00   0.00 0.000  0.00 #> 111        7       5      7  6.33      7    7 1.155 18.23  20.20 0.889 14.04 #> 112        4       4      4  4.00      4    4 0.000  0.00   0.00 0.000  0.00 #> 113        4       4      4  4.00      4    4 0.000  0.00   0.00 0.000  0.00 #> 114       10       7      7  8.00      7    7 1.732 21.65  30.30 1.333 16.67 #> 115        7       6      6  6.33      6    6 0.577  9.12  11.79 0.444  7.02 #> 116        5       4      5  4.67      5    5 0.577 12.37  14.14 0.444  9.52 #> 117       17      10      9 12.00     10   NA 4.359 36.32  50.00 3.333 27.78 #> 118        7       6      6  6.33      6    6 0.577  9.12  11.79 0.444  7.02 #> 119       10       8      8  8.67      8    8 1.155 13.32  17.68 0.889 10.26 #> 120       11       9      8  9.33      9   NA 1.528 16.37  17.57 1.111 11.90 #> 121       12       7      8  9.00      8   NA 2.646 29.40  36.44 2.000 22.22 #> 122        4       4      5  4.33      4    4 0.577 13.32  17.68 0.444 10.26 #> 123        8       7      7  7.33      7    7 0.577  7.87  10.10 0.444  6.06 #> 124       12       7      9  9.33      9   NA 2.517 26.96  28.33 1.778 19.05 #> 125       17       9     11 12.33     11   NA 4.163 33.76  40.66 3.111 25.23 #> 126       13      11     13 12.33     13   13 1.155  9.36  10.88 0.889  7.21 #> 127       16      11     13 13.33     13   NA 2.517 18.87  19.61 1.778 13.33 #> 128       17      11     11 13.00     11   11 3.464 26.65  38.57 2.667 20.51 #> 129       15      12     12 13.00     12   12 1.732 13.32  17.68 1.333 10.26 #> 130        4       3      5  4.00      4   NA 1.000 25.00  25.00 0.667 16.67 #> 131       13       9     11 11.00     11   NA 2.000 18.18  18.18 1.333 12.12 #> 132       16      11     10 12.33     11   NA 3.215 26.06  32.78 2.444 19.82 #> 133        7       7     10  8.00      7    7 1.732 21.65  30.30 1.333 16.67 #> 134        6       5      5  5.33      5    5 0.577 10.83  14.14 0.444  8.33 #> 135       16      10     12 12.67     12   NA 3.055 24.12  26.35 2.222 17.54 #> 136       15      12     11 12.67     12   NA 2.082 16.43  18.63 1.556 12.28 #> 137       15      10     14 13.00     14   NA 2.646 20.35  20.82 2.000 15.38 #> 138        8       6      6  6.67      6    6 1.155 17.32  23.57 0.889 13.33 #> 139       10       6      7  7.67      7   NA 2.082 27.15  31.94 1.556 20.29 #> 140        8       5      8  7.00      8    8 1.732 24.74  26.52 1.333 19.05 #> 141       19      10     14 14.33     14   NA 4.509 31.46  32.34 3.111 21.71 #> 142        9      10      8  9.00      9   NA 1.000 11.11  11.11 0.667  7.41 #> 143       12       9     12 11.00     12   12 1.732 15.75  17.68 1.333 12.12 #> 144        8       6      6  6.67      6    6 1.155 17.32  23.57 0.889 13.33 #> 145       15       8      9 10.67      9   NA 3.786 35.49  47.79 2.889 27.08 #> 146        9       5      7  7.00      7   NA 2.000 28.57  28.57 1.333 19.05 #> 147       17      11     13 13.67     13   NA 3.055 22.35  24.33 2.222 16.26 #> 148       23       9     10 14.00     10   NA 7.810 55.79  92.20 6.000 42.86 #> 149       16      14     15 15.00     15   NA 1.000  6.67   6.67 0.667  4.44 #> 150       15      10      9 11.33     10   NA 3.215 28.36  36.06 2.444 21.57 #> 151       13       8      6  9.00      8   NA 3.606 40.06  47.60 2.667 29.63 #>       PE2     D #> 1    0.00  0.00 #> 2   11.11 10.00 #> 3   33.33 25.00 #> 4   11.11 10.00 #> 5   11.11 10.00 #> 6   25.00 20.35 #> 7   19.05 15.68 #> 8   22.22 21.17 #> 9   11.11 10.00 #> 10   0.00  0.00 #> 11  16.67 20.00 #> 12  11.11 10.00 #> 13   0.00  0.00 #> 14  20.83 17.44 #> 15  19.05 15.68 #> 16  22.22 18.18 #> 17  22.22 22.53 #> 18  38.89 28.00 #> 19  25.00 19.88 #> 20   5.56  5.26 #> 21  33.33 25.00 #> 22  14.29 12.03 #> 23  20.00 16.54 #> 24   5.56  5.88 #> 25  16.67 20.00 #> 26  11.11 10.00 #> 27  11.11 10.00 #> 28  13.33 11.55 #> 29  16.67 14.29 #> 30   0.00  0.00 #> 31   8.33  9.09 #> 32   0.00  0.00 #> 33   0.00  0.00 #> 34  16.67 20.00 #> 35  22.22 19.25 #> 36  11.11 10.00 #> 37   0.00  0.00 #> 38  33.33 28.87 #> 39  33.33 25.00 #> 40  33.33 25.00 #> 41  33.33 25.00 #> 42  11.11 10.00 #> 43  16.67 13.93 #> 44  33.33 26.46 #> 45  22.22 19.25 #> 46  11.11 12.50 #> 47  33.33 25.00 #> 48   0.00  0.00 #> 49  14.29 13.23 #> 50   8.33  9.09 #> 51   0.00  0.00 #> 52   0.00  0.00 #> 53   0.00  0.00 #> 54  16.67 13.93 #> 55   0.00  0.00 #> 56   5.56  5.88 #> 57  13.33 11.76 #> 58  33.33 25.00 #> 59   0.00  0.00 #> 60  33.33 25.00 #> 61  33.33 25.00 #> 62   6.67  7.14 #> 63   8.33  7.69 #> 64   8.33  7.69 #> 65  20.00 18.90 #> 66  52.38 34.38 #> 67  14.29 13.23 #> 68  12.50 11.50 #> 69   8.33  7.69 #> 70  16.67 14.43 #> 71  23.81 19.23 #> 72  11.11  9.62 #> 73  12.50 10.58 #> 74  22.22 18.03 #> 75  19.05 16.00 #> 76   0.00  0.00 #> 77  33.33 28.87 #> 78  12.82 12.73 #> 79  11.11 10.00 #> 80  28.57 22.27 #> 81  14.81 12.83 #> 82   9.52  8.70 #> 83   9.52  8.25 #> 84  26.67 21.21 #> 85   9.52  8.25 #> 86  23.08 19.53 #> 87  13.33 11.55 #> 88  25.00 21.65 #> 89  12.50 11.50 #> 90  12.50 11.11 #> 91  22.22 18.25 #> 92  14.29 12.03 #> 93  14.29 12.50 #> 94   8.33  9.09 #> 95  16.67 14.29 #> 96  11.11 10.00 #> 97  11.11 10.00 #> 98   0.00  0.00 #> 99  19.05 16.00 #> 100 11.11 10.00 #> 101 20.00 16.67 #> 102  6.67  6.25 #> 103 13.33 11.55 #> 104 16.67 14.29 #> 105  9.52  8.70 #> 106 10.00  9.09 #> 107  8.33  7.22 #> 108 23.81 19.23 #> 109  0.00  0.00 #> 110  0.00  0.00 #> 111  9.52 10.53 #> 112  0.00  0.00 #> 113  0.00  0.00 #> 114 14.29 12.50 #> 115  5.56  5.26 #> 116  6.67  7.14 #> 117 26.67 20.97 #> 118  5.56  5.26 #> 119  8.33  7.69 #> 120 11.11  9.45 #> 121 20.83 16.97 #> 122  8.33  7.69 #> 123  4.76  4.55 #> 124 18.52 15.57 #> 125 24.24 19.49 #> 126  5.13  5.41 #> 127 12.82 10.90 #> 128 18.18 15.38 #> 129  8.33  7.69 #> 130 16.67 14.43 #> 131 12.12 10.50 #> 132 18.18 15.05 #> 133 14.29 12.50 #> 134  6.67  6.25 #> 135 16.67 13.93 #> 136 11.11  9.49 #> 137 11.90 11.75 #> 138 11.11 10.00 #> 139 19.05 15.68 #> 140 12.50 14.29 #> 141 21.43 18.16 #> 142  7.41  6.42 #> 143  8.33  9.09 #> 144 11.11 10.00 #> 145 25.93 20.49 #> 146 19.05 16.50 #> 147 15.38 12.91 #> 148 46.67 32.21 #> 149  4.44  3.85 #> 150 20.00 16.38 #> 151 29.17 23.13 summary(ap2,what=\"precision\") #>    n validn R PercAgree   ASD   ACV  ACV2   AAD   APE  APE2    AD #>  151    151 3     12.58 1.487 21.77 27.52 1.104 16.19 14.76 12.57 summary(ap2,what=\"difference\") #>                         -4      -3      -2      -1       0       1       2 #> otolithC - finrayC  0.0000  0.0000  1.3245  3.3113 24.5033 17.8808 16.5563 #> otolithC - scaleC   0.0000  2.6490  0.6623 10.5960 19.8675 19.8675 15.8940 #> finrayC - scaleC    3.3113  4.6358 12.5828 19.8675 40.3974 14.5695  2.6490 #>                          3       4       5       6       7       8       9 #> otolithC - finrayC 11.9205  7.2848  7.9470  3.3113  2.6490  0.6623  1.3245 #> otolithC - scaleC  11.2583  5.9603  3.3113  5.2980  1.9868  1.3245  0.0000 #> finrayC - scaleC    0.6623  0.6623  0.0000  0.6623  0.0000  0.0000  0.0000 #>                         10      11      12      13      14 #> otolithC - finrayC  0.0000  0.6623  0.0000  0.0000  0.6623 #> otolithC - scaleC   0.0000  0.6623  0.0000  0.6623  0.0000 #> finrayC - scaleC    0.0000  0.0000  0.0000  0.0000  0.0000 summary(ap2,what=\"absolute\",percent=FALSE,trunc.diff=4) #>                      0  1  2  3 4+ #> otolithC v. finrayC 37 32 27 18 37 #> otolithC v. scaleC  30 46 25 21 29 #> finrayC v. scaleC   61 52 23  8  7 summary(ap2,what=\"detail\",digits=3) #>     otolithC finrayC scaleC  mean median mode    SD    CV    CV2    AD    PE #> 1          3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 2          3       3      4  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 3          3       3      6  4.00      3    3 1.732 43.30  70.71 1.333 33.33 #> 4          3       3      4  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 5          3       4      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 6          6       3      4  4.33      4   NA 1.528 35.25  39.53 1.111 25.64 #> 7         10       6      7  7.67      7   NA 2.082 27.15  31.94 1.556 20.29 #> 8         11       9      5  8.33      9   NA 3.055 36.66  35.14 2.222 26.67 #> 9          4       3      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 10         1       1      1  1.00      1    1 0.000  0.00   0.00 0.000  0.00 #> 11         1       2      2  1.67      2    2 0.577 34.64  35.36 0.444 26.67 #> 12         3       3      4  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 13         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 14        11       8      6  8.33      8   NA 2.517 30.20  31.87 1.778 21.33 #> 15        10       7      6  7.67      7   NA 2.082 27.15  31.94 1.556 20.29 #> 16        10       6      6  7.33      6    6 2.309 31.49  47.14 1.778 24.24 #> 17        14      12      6 10.67     12   NA 4.163 39.03  37.27 3.111 29.17 #> 18        13       6      6  8.33      6    6 4.041 48.50  82.50 3.111 37.33 #> 19        13       8      7  9.33      8   NA 3.215 34.44  45.07 2.444 26.19 #> 20         7       6      6  6.33      6    6 0.577  9.12  11.79 0.444  7.02 #> 21        14       7      7  9.33      7    7 4.041 43.30  70.71 3.111 33.33 #> 22         9       6      7  7.33      7   NA 1.528 20.83  22.59 1.111 15.15 #> 23         7       4      5  5.33      5   NA 1.528 28.64  31.62 1.111 20.83 #> 24         6       6      5  5.67      6    6 0.577 10.19  11.79 0.444  7.84 #> 25         6       6      3  5.00      6    6 1.732 34.64  35.36 1.333 26.67 #> 26         3       3      4  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 27         3       3      4  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 28         6       4      5  5.00      5   NA 1.000 20.00  20.00 0.667 13.33 #> 29         4       4      6  4.67      4    4 1.155 24.74  35.36 0.889 19.05 #> 30         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 31         4       3      4  3.67      4    4 0.577 15.75  17.68 0.444 12.12 #> 32         1       1      1  1.00      1    1 0.000  0.00   0.00 0.000  0.00 #> 33         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 34         4       2      4  3.33      4    4 1.155 34.64  35.36 0.889 26.67 #> 35         4       3      2  3.00      3   NA 1.000 33.33  33.33 0.667 22.22 #> 36         4       3      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 37         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 38         1       3      2  2.00      2   NA 1.000 50.00  50.00 0.667 33.33 #> 39         1       2      1  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 40         2       1      1  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 41         2       1      1  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 42         4       3      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 43         8       6      5  6.33      6   NA 1.528 24.12  26.35 1.111 17.54 #> 44         2       3      5  3.33      3   NA 1.528 45.83  52.70 1.111 33.33 #> 45         2       4      3  3.00      3   NA 1.000 33.33  33.33 0.667 22.22 #> 46         3       2      3  2.67      3    3 0.577 21.65  23.57 0.444 16.67 #> 47         1       1      2  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 48         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 49         8       7      5  6.67      7   NA 1.528 22.91  22.59 1.111 16.67 #> 50         4       4      3  3.67      4    4 0.577 15.75  17.68 0.444 12.12 #> 51         2       2      2  2.00      2    2 0.000  0.00   0.00 0.000  0.00 #> 52         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 53         3       3      3  3.00      3    3 0.000  0.00   0.00 0.000  0.00 #> 54         8       6      5  6.33      6   NA 1.528 24.12  26.35 1.111 17.54 #> 55         4       4      4  4.00      4    4 0.000  0.00   0.00 0.000  0.00 #> 56         6       6      5  5.67      6    6 0.577 10.19  11.79 0.444  7.84 #> 57         7       5      5  5.67      5    5 1.155 20.38  28.28 0.889 15.69 #> 58         2       1      1  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 59         1       1      1  1.00      1    1 0.000  0.00   0.00 0.000  0.00 #> 60         2       1      1  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 61         1       1      2  1.33      1    1 0.577 43.30  70.71 0.444 33.33 #> 62         5       5      4  4.67      5    5 0.577 12.37  14.14 0.444  9.52 #> 63         5       4      4  4.33      4    4 0.577 13.32  17.68 0.444 10.26 #> 64         4       4      5  4.33      4    4 0.577 13.32  17.68 0.444 10.26 #> 65         5       3      6  4.67      5   NA 1.528 32.73  31.62 1.111 23.81 #> 66        18       7      7 10.67      7    7 6.351 59.54 111.12 4.889 45.83 #> 67         7       5      8  6.67      7   NA 1.528 22.91  22.59 1.111 16.67 #> 68         9       6      8  7.67      8   NA 1.528 19.92  19.76 1.111 14.49 #> 69         5       4      4  4.33      4    4 0.577 13.32  17.68 0.444 10.26 #> 70        10       6      8  8.00      8   NA 2.000 25.00  25.00 1.333 16.67 #> 71        12       7      7  8.67      7    7 2.887 33.31  50.51 2.222 25.64 #> 72         7       6      5  6.00      6   NA 1.000 16.67  16.67 0.667 11.11 #> 73        10       7      8  8.33      8   NA 1.528 18.33  19.76 1.111 13.33 #> 74         9       5      6  6.67      6   NA 2.082 31.22  37.27 1.556 23.33 #> 75        11       7      7  8.33      7    7 2.309 27.71  40.41 1.778 21.33 #> 76         1       1      1  1.00      1    1 0.000  0.00   0.00 0.000  0.00 #> 77         3       2      1  2.00      2   NA 1.000 50.00  50.00 0.667 33.33 #> 78        14       9     13 12.00     13   NA 2.646 22.05  22.43 2.000 16.67 #> 79         8       6      6  6.67      6    6 1.155 17.32  23.57 0.889 13.33 #> 80        12       7      6  8.33      7   NA 3.215 38.57  51.51 2.444 29.33 #> 81        11       7      9  9.00      9   NA 2.000 22.22  22.22 1.333 14.81 #> 82         9       7      7  7.67      7    7 1.155 15.06  20.20 0.889 11.59 #> 83         8       6      7  7.00      7   NA 1.000 14.29  14.29 0.667  9.52 #> 84         5       4      8  5.67      5   NA 2.082 36.74  44.72 1.556 27.45 #> 85         8       6      7  7.00      7   NA 1.000 14.29  14.29 0.667  9.52 #> 86        18       9     13 13.33     13   NA 4.509 33.82  34.83 3.111 23.33 #> 87        12       8     10 10.00     10   NA 2.000 20.00  20.00 1.333 13.33 #> 88        11       5      8  8.00      8   NA 3.000 37.50  37.50 2.000 25.00 #> 89         9       6      8  7.67      8   NA 1.528 19.92  19.76 1.111 14.49 #> 90        11       8      8  9.00      8    8 1.732 19.25  26.52 1.333 14.81 #> 91        13       7      9  9.67      9   NA 3.055 31.60  35.14 2.222 22.99 #> 92         9       6      7  7.33      7   NA 1.528 20.83  22.59 1.111 15.15 #> 93        10       7      7  8.00      7    7 1.732 21.65  30.30 1.333 16.67 #> 94         4       3      4  3.67      4    4 0.577 15.75  17.68 0.444 12.12 #> 95         6       4      4  4.67      4    4 1.155 24.74  35.36 0.889 19.05 #> 96         4       3      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 97         4       3      3  3.33      3    3 0.577 17.32  23.57 0.444 13.33 #> 98         6       6      6  6.00      6    6 0.000  0.00   0.00 0.000  0.00 #> 99        11       7      7  8.33      7    7 2.309 27.71  40.41 1.778 21.33 #> 100        8       6      6  6.67      6    6 1.155 17.32  23.57 0.889 13.33 #> 101        8       5      5  6.00      5    5 1.732 28.87  42.43 1.333 22.22 #> 102        5       5      6  5.33      5    5 0.577 10.83  14.14 0.444  8.33 #> 103        6       4      5  5.00      5   NA 1.000 20.00  20.00 0.667 13.33 #> 104        6       4      4  4.67      4    4 1.155 24.74  35.36 0.889 19.05 #> 105        9       7      7  7.67      7    7 1.155 15.06  20.20 0.889 11.59 #> 106       13      10     10 11.00     10   10 1.732 15.75  21.21 1.333 12.12 #> 107        9       8      7  8.00      8   NA 1.000 12.50  12.50 0.667  8.33 #> 108       12       7      7  8.67      7    7 2.887 33.31  50.51 2.222 25.64 #> 109        5       5      5  5.00      5    5 0.000  0.00   0.00 0.000  0.00 #> 110        4       4      4  4.00      4    4 0.000  0.00   0.00 0.000  0.00 #> 111        7       5      7  6.33      7    7 1.155 18.23  20.20 0.889 14.04 #> 112        4       4      4  4.00      4    4 0.000  0.00   0.00 0.000  0.00 #> 113        4       4      4  4.00      4    4 0.000  0.00   0.00 0.000  0.00 #> 114       10       7      7  8.00      7    7 1.732 21.65  30.30 1.333 16.67 #> 115        7       6      6  6.33      6    6 0.577  9.12  11.79 0.444  7.02 #> 116        5       4      5  4.67      5    5 0.577 12.37  14.14 0.444  9.52 #> 117       17      10      9 12.00     10   NA 4.359 36.32  50.00 3.333 27.78 #> 118        7       6      6  6.33      6    6 0.577  9.12  11.79 0.444  7.02 #> 119       10       8      8  8.67      8    8 1.155 13.32  17.68 0.889 10.26 #> 120       11       9      8  9.33      9   NA 1.528 16.37  17.57 1.111 11.90 #> 121       12       7      8  9.00      8   NA 2.646 29.40  36.44 2.000 22.22 #> 122        4       4      5  4.33      4    4 0.577 13.32  17.68 0.444 10.26 #> 123        8       7      7  7.33      7    7 0.577  7.87  10.10 0.444  6.06 #> 124       12       7      9  9.33      9   NA 2.517 26.96  28.33 1.778 19.05 #> 125       17       9     11 12.33     11   NA 4.163 33.76  40.66 3.111 25.23 #> 126       13      11     13 12.33     13   13 1.155  9.36  10.88 0.889  7.21 #> 127       16      11     13 13.33     13   NA 2.517 18.87  19.61 1.778 13.33 #> 128       17      11     11 13.00     11   11 3.464 26.65  38.57 2.667 20.51 #> 129       15      12     12 13.00     12   12 1.732 13.32  17.68 1.333 10.26 #> 130        4       3      5  4.00      4   NA 1.000 25.00  25.00 0.667 16.67 #> 131       13       9     11 11.00     11   NA 2.000 18.18  18.18 1.333 12.12 #> 132       16      11     10 12.33     11   NA 3.215 26.06  32.78 2.444 19.82 #> 133        7       7     10  8.00      7    7 1.732 21.65  30.30 1.333 16.67 #> 134        6       5      5  5.33      5    5 0.577 10.83  14.14 0.444  8.33 #> 135       16      10     12 12.67     12   NA 3.055 24.12  26.35 2.222 17.54 #> 136       15      12     11 12.67     12   NA 2.082 16.43  18.63 1.556 12.28 #> 137       15      10     14 13.00     14   NA 2.646 20.35  20.82 2.000 15.38 #> 138        8       6      6  6.67      6    6 1.155 17.32  23.57 0.889 13.33 #> 139       10       6      7  7.67      7   NA 2.082 27.15  31.94 1.556 20.29 #> 140        8       5      8  7.00      8    8 1.732 24.74  26.52 1.333 19.05 #> 141       19      10     14 14.33     14   NA 4.509 31.46  32.34 3.111 21.71 #> 142        9      10      8  9.00      9   NA 1.000 11.11  11.11 0.667  7.41 #> 143       12       9     12 11.00     12   12 1.732 15.75  17.68 1.333 12.12 #> 144        8       6      6  6.67      6    6 1.155 17.32  23.57 0.889 13.33 #> 145       15       8      9 10.67      9   NA 3.786 35.49  47.79 2.889 27.08 #> 146        9       5      7  7.00      7   NA 2.000 28.57  28.57 1.333 19.05 #> 147       17      11     13 13.67     13   NA 3.055 22.35  24.33 2.222 16.26 #> 148       23       9     10 14.00     10   NA 7.810 55.79  92.20 6.000 42.86 #> 149       16      14     15 15.00     15   NA 1.000  6.67   6.67 0.667  4.44 #> 150       15      10      9 11.33     10   NA 3.215 28.36  36.06 2.444 21.57 #> 151       13       8      6  9.00      8   NA 3.606 40.06  47.60 2.667 29.63 #>       PE2     D #> 1    0.00  0.00 #> 2   11.11 10.00 #> 3   33.33 25.00 #> 4   11.11 10.00 #> 5   11.11 10.00 #> 6   25.00 20.35 #> 7   19.05 15.68 #> 8   22.22 21.17 #> 9   11.11 10.00 #> 10   0.00  0.00 #> 11  16.67 20.00 #> 12  11.11 10.00 #> 13   0.00  0.00 #> 14  20.83 17.44 #> 15  19.05 15.68 #> 16  22.22 18.18 #> 17  22.22 22.53 #> 18  38.89 28.00 #> 19  25.00 19.88 #> 20   5.56  5.26 #> 21  33.33 25.00 #> 22  14.29 12.03 #> 23  20.00 16.54 #> 24   5.56  5.88 #> 25  16.67 20.00 #> 26  11.11 10.00 #> 27  11.11 10.00 #> 28  13.33 11.55 #> 29  16.67 14.29 #> 30   0.00  0.00 #> 31   8.33  9.09 #> 32   0.00  0.00 #> 33   0.00  0.00 #> 34  16.67 20.00 #> 35  22.22 19.25 #> 36  11.11 10.00 #> 37   0.00  0.00 #> 38  33.33 28.87 #> 39  33.33 25.00 #> 40  33.33 25.00 #> 41  33.33 25.00 #> 42  11.11 10.00 #> 43  16.67 13.93 #> 44  33.33 26.46 #> 45  22.22 19.25 #> 46  11.11 12.50 #> 47  33.33 25.00 #> 48   0.00  0.00 #> 49  14.29 13.23 #> 50   8.33  9.09 #> 51   0.00  0.00 #> 52   0.00  0.00 #> 53   0.00  0.00 #> 54  16.67 13.93 #> 55   0.00  0.00 #> 56   5.56  5.88 #> 57  13.33 11.76 #> 58  33.33 25.00 #> 59   0.00  0.00 #> 60  33.33 25.00 #> 61  33.33 25.00 #> 62   6.67  7.14 #> 63   8.33  7.69 #> 64   8.33  7.69 #> 65  20.00 18.90 #> 66  52.38 34.38 #> 67  14.29 13.23 #> 68  12.50 11.50 #> 69   8.33  7.69 #> 70  16.67 14.43 #> 71  23.81 19.23 #> 72  11.11  9.62 #> 73  12.50 10.58 #> 74  22.22 18.03 #> 75  19.05 16.00 #> 76   0.00  0.00 #> 77  33.33 28.87 #> 78  12.82 12.73 #> 79  11.11 10.00 #> 80  28.57 22.27 #> 81  14.81 12.83 #> 82   9.52  8.70 #> 83   9.52  8.25 #> 84  26.67 21.21 #> 85   9.52  8.25 #> 86  23.08 19.53 #> 87  13.33 11.55 #> 88  25.00 21.65 #> 89  12.50 11.50 #> 90  12.50 11.11 #> 91  22.22 18.25 #> 92  14.29 12.03 #> 93  14.29 12.50 #> 94   8.33  9.09 #> 95  16.67 14.29 #> 96  11.11 10.00 #> 97  11.11 10.00 #> 98   0.00  0.00 #> 99  19.05 16.00 #> 100 11.11 10.00 #> 101 20.00 16.67 #> 102  6.67  6.25 #> 103 13.33 11.55 #> 104 16.67 14.29 #> 105  9.52  8.70 #> 106 10.00  9.09 #> 107  8.33  7.22 #> 108 23.81 19.23 #> 109  0.00  0.00 #> 110  0.00  0.00 #> 111  9.52 10.53 #> 112  0.00  0.00 #> 113  0.00  0.00 #> 114 14.29 12.50 #> 115  5.56  5.26 #> 116  6.67  7.14 #> 117 26.67 20.97 #> 118  5.56  5.26 #> 119  8.33  7.69 #> 120 11.11  9.45 #> 121 20.83 16.97 #> 122  8.33  7.69 #> 123  4.76  4.55 #> 124 18.52 15.57 #> 125 24.24 19.49 #> 126  5.13  5.41 #> 127 12.82 10.90 #> 128 18.18 15.38 #> 129  8.33  7.69 #> 130 16.67 14.43 #> 131 12.12 10.50 #> 132 18.18 15.05 #> 133 14.29 12.50 #> 134  6.67  6.25 #> 135 16.67 13.93 #> 136 11.11  9.49 #> 137 11.90 11.75 #> 138 11.11 10.00 #> 139 19.05 15.68 #> 140 12.50 14.29 #> 141 21.43 18.16 #> 142  7.41  6.42 #> 143  8.33  9.09 #> 144 11.11 10.00 #> 145 25.93 20.49 #> 146 19.05 16.50 #> 147 15.38 12.91 #> 148 46.67 32.21 #> 149  4.44  3.85 #> 150 20.00 16.38 #> 151 29.17 23.13  plot(AD~mean,data=ap2$detail,pch=19,col=col2rgbt(\"black\",1/5),      xlab=\"Mean Age\",ylab=\"Absolute Deviation Age\")  plot(SD~mean,data=ap2$detail,pch=19,col=col2rgbt(\"black\",1/5),      xlab=\"Mean Age\",ylab=\"Standard Deviation Age\")  plot(SD~AD,data=ap2$detail,pch=19,col=col2rgbt(\"black\",1/5),      xlab=\"Absolute Deviation Age\",ylab=\"Standard Deviation Age\")  plot(CV~PE,data=ap2$detail,pch=19,col=col2rgbt(\"black\",1/5),      xlab=\"Percent Error Age\",ylab=\"Coefficient of Variation Age\")  plot(median~mean,data=ap2$detail,pch=19,col=col2rgbt(\"black\",1/5),      xlab=\"Mean Age\",ylab=\"Median Age\")"},{"path":"https://fishr-core-team.github.io/FSA/reference/alkAgeDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportions-at-age from an age-length key — alkAgeDist","title":"Proportions-at-age from an age-length key — alkAgeDist","text":"Computes proportions--age (standard errors) larger sample based age-length-key created subsample ages two-stage random sampling design. Follows methods Quinn Deriso (1999).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkAgeDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportions-at-age from an age-length key — alkAgeDist","text":"","code":"alkAgeDist(key, lenA.n, len.n)"},{"path":"https://fishr-core-team.github.io/FSA/reference/alkAgeDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportions-at-age from an age-length key — alkAgeDist","text":"key numeric matrix contains age-length key. See details. lenA.n numeric vector sample sizes length interval aged sample. len.n numeric vector sample sizes length interval complete sample (.e., fish regardless whether aged ).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkAgeDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportions-at-age from an age-length key — alkAgeDist","text":"data.frame many rows ages (columns) present key following three variables: age ages. prop proportion fish age. se SE proportion fish age.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkAgeDist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Proportions-at-age from an age-length key — alkAgeDist","text":"age-length key key must length intervals rows ages columns. row names key (.e., rownames(key)) must contain minimum values length interval (e.g., interval 100-109 corresponding row name must 100). column names key (.e., colnames(key)) must contain age values (e.g., columns can named “age.1”, example). length intervals rows key must contain length intervals present larger sample. Thus, length len.n must, least, equal number rows key. constraint met, function stop error message. values lenA.n equal row sums key key converted row proportions table. Thus, length lenA.n must also equal number rows key. constraint met, function stop error message.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkAgeDist.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Proportions-at-age from an age-length key — alkAgeDist","text":"results function perfectly match results Table 8.4 (left) Quinn Deriso (1999) using SnapperHG2 FSAdata. results also perfectly match results using alkprop fishmethods.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkAgeDist.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Proportions-at-age from an age-length key — alkAgeDist","text":"5-Age-Length Key.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkAgeDist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Proportions-at-age from an age-length key — alkAgeDist","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Lai, H.-L. 1987. Optimum allocation estimating age composition using age-length key. Fishery Bulletin, 85:179-185. Lai, H.-L. 1993. Optimum sampling design using age-length key estimate age composition fish population. Fishery Bulletin, 92:382-388. Quinn, T. J. R. B. Deriso. 1999. Quantitative Fish Dynamics. Oxford University Press, New York, New York. 542 pages.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/alkAgeDist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Proportions-at-age from an age-length key — alkAgeDist","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkAgeDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proportions-at-age from an age-length key — alkAgeDist","text":"","code":"## Example -- Even breaks for length categories WR1 <- WR79 # add length intervals (width=5) WR1$LCat <- lencat(WR1$len,w=5) # get number of fish in each length interval in the entire sample len.n <- xtabs(~LCat,data=WR1) # isolate aged sample and get number in each length interval WR1.age <- subset(WR1, !is.na(age)) lenA.n <- xtabs(~LCat,data=WR1.age) # create age-length key raw <- xtabs(~LCat+age,data=WR1.age) ( WR1.key <- prop.table(raw, margin=1) ) #>      age #> LCat           4          5          6          7          8          9 #>   35  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   40  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   45  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   50  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   55  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   60  0.60000000 0.40000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   65  0.00000000 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   70  0.00000000 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   75  0.00000000 0.88888889 0.11111111 0.00000000 0.00000000 0.00000000 #>   80  0.00000000 0.25000000 0.75000000 0.00000000 0.00000000 0.00000000 #>   85  0.00000000 0.00000000 0.90909091 0.09090909 0.00000000 0.00000000 #>   90  0.00000000 0.00000000 0.26315789 0.63157895 0.10526316 0.00000000 #>   95  0.00000000 0.00000000 0.05882353 0.70588235 0.17647059 0.00000000 #>   100 0.00000000 0.00000000 0.00000000 0.55555556 0.16666667 0.27777778 #>   105 0.00000000 0.00000000 0.00000000 0.28571429 0.42857143 0.14285714 #>   110 0.00000000 0.00000000 0.00000000 0.20000000 0.20000000 0.20000000 #>   115 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>      age #> LCat          10         11 #>   35  0.00000000 0.00000000 #>   40  0.00000000 0.00000000 #>   45  0.00000000 0.00000000 #>   50  0.00000000 0.00000000 #>   55  0.00000000 0.00000000 #>   60  0.00000000 0.00000000 #>   65  0.00000000 0.00000000 #>   70  0.00000000 0.00000000 #>   75  0.00000000 0.00000000 #>   80  0.00000000 0.00000000 #>   85  0.00000000 0.00000000 #>   90  0.00000000 0.00000000 #>   95  0.05882353 0.00000000 #>   100 0.00000000 0.00000000 #>   105 0.14285714 0.00000000 #>   110 0.20000000 0.20000000 #>   115 1.00000000 0.00000000  # use age-length key to estimate age distribution of all fish alkAgeDist(WR1.key,lenA.n,len.n) #>   age        prop          se #> 1   4 0.416378219 0.013206893 #> 2   5 0.167201351 0.013907259 #> 3   6 0.113882857 0.014938965 #> 4   7 0.189170701 0.021247383 #> 5   8 0.061572157 0.016537338 #> 6   9 0.032955436 0.011718417 #> 7  10 0.016306565 0.008988814 #> 8  11 0.002532714 0.002574054"},{"path":"https://fishr-core-team.github.io/FSA/reference/alkIndivAge.html","id":null,"dir":"Reference","previous_headings":"","what":"Use an age-length key to assign age to individuals in the unaged sample. — alkIndivAge","title":"Use an age-length key to assign age to individuals in the unaged sample. — alkIndivAge","text":"Use either semi- completely-random methods Isermann Knight (2005) assign ages individual fish unaged sample according information age-length key supplied user.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkIndivAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use an age-length key to assign age to individuals in the unaged sample. — alkIndivAge","text":"","code":"alkIndivAge(   key,   formula,   data,   type = c(\"SR\", \"CR\"),   breaks = NULL,   seed = NULL )"},{"path":"https://fishr-core-team.github.io/FSA/reference/alkIndivAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use an age-length key to assign age to individuals in the unaged sample. — alkIndivAge","text":"key numeric matrix contains age-length key. format matrix important. See details. formula formula form age~length age generically represents variable contain estimated ages key applied (.e., currently contain values) length generically represents variable contains known length measurements. ~length used, new variable called “age” created resulting data frame. data data.frame minimally contains length measurements possibly contains variable receive age assignments given formula. type string indicates whether use semi-random (type=\"SR\", default) completely-random (type=\"CR\") methods assigning ages individual fish. See IFAR chapter details. breaks numeric vector lower values define length intervals. See details. seed single numeric given set.seed set random seed. allows repeatability results.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkIndivAge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use an age-length key to assign age to individuals in the unaged sample. — alkIndivAge","text":"original data.frame data assigned ages added column supplied formula additional column labeled age. See details.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkIndivAge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use an age-length key to assign age to individuals in the unaged sample. — alkIndivAge","text":"age-length key key must length intervals rows ages columns. row names key (.e., rownames(key)) must contain minimum values length interval (e.g., interval 100-109, corresponding row name must 100). column names key (.e., colnames(key)) must contain age values (e.g., columns can named “age.1”, example). length intervals rows key must contain length intervals present unaged sample age-length key applied (.e., sent length portion formula). constraint met, function stop error message. breaks=NULL, length intervals unaged sample determined starting interval minimum value row names key width length intervals determined minimum difference adjacent row names key. length intervals differing widths used constructing key, breaks supplied breaks=. Use breaks= may useful “uneven” length interval widths used lengths unaged sample fully represented aged sample. See examples. Assigned ages stored column identified left-hand-side formula (formula left- right-hand-side). variable missing formula, new column labeled age.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkIndivAge.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Use an age-length key to assign age to individuals in the unaged sample. — alkIndivAge","text":"type=\"SR\" method worked perfectly small example. type=\"SR\" method provides results reasonably approximate results alkAgeDist alkMeanVar, suggests age assessments reasonable.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkIndivAge.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Use an age-length key to assign age to individuals in the unaged sample. — alkIndivAge","text":"5-Age-Length Key.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkIndivAge.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Use an age-length key to assign age to individuals in the unaged sample. — alkIndivAge","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Isermann, D.. C.T. Knight. 2005. computer program age-length keys incorporating age assignment individual fish. North American Journal Fisheries Management, 25:1153-1160. [(?) http://www.tandfonline.com/doi/abs/10.1577/M04-130.1.]","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/alkIndivAge.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Use an age-length key to assign age to individuals in the unaged sample. — alkIndivAge","text":"Derek H. Ogle, DerekOgle51@gmail.com. largely R version SAS code provided Isermann Knight (2005).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkIndivAge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use an age-length key to assign age to individuals in the unaged sample. — alkIndivAge","text":"","code":"## First Example -- Even breaks for length categories WR1 <- WR79 # add length categories (width=5) WR1$LCat <- lencat(WR1$len,w=5) # isolate aged and unaged samples WR1.age <- subset(WR1, !is.na(age)) WR1.len <- subset(WR1, is.na(age)) # note no ages in unaged sample head(WR1.len) #>   ID len age LCat #> 1  1  37  NA   35 #> 2  2  37  NA   35 #> 3  3  39  NA   35 #> 4  4  37  NA   35 #> 7  7  42  NA   40 #> 8  8  42  NA   40 # create age-length key raw <- xtabs(~LCat+age,data=WR1.age) ( WR1.key <- prop.table(raw, margin=1) ) #>      age #> LCat           4          5          6          7          8          9 #>   35  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   40  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   45  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   50  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   55  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   60  0.60000000 0.40000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   65  0.00000000 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   70  0.00000000 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   75  0.00000000 0.88888889 0.11111111 0.00000000 0.00000000 0.00000000 #>   80  0.00000000 0.25000000 0.75000000 0.00000000 0.00000000 0.00000000 #>   85  0.00000000 0.00000000 0.90909091 0.09090909 0.00000000 0.00000000 #>   90  0.00000000 0.00000000 0.26315789 0.63157895 0.10526316 0.00000000 #>   95  0.00000000 0.00000000 0.05882353 0.70588235 0.17647059 0.00000000 #>   100 0.00000000 0.00000000 0.00000000 0.55555556 0.16666667 0.27777778 #>   105 0.00000000 0.00000000 0.00000000 0.28571429 0.42857143 0.14285714 #>   110 0.00000000 0.00000000 0.00000000 0.20000000 0.20000000 0.20000000 #>   115 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>      age #> LCat          10         11 #>   35  0.00000000 0.00000000 #>   40  0.00000000 0.00000000 #>   45  0.00000000 0.00000000 #>   50  0.00000000 0.00000000 #>   55  0.00000000 0.00000000 #>   60  0.00000000 0.00000000 #>   65  0.00000000 0.00000000 #>   70  0.00000000 0.00000000 #>   75  0.00000000 0.00000000 #>   80  0.00000000 0.00000000 #>   85  0.00000000 0.00000000 #>   90  0.00000000 0.00000000 #>   95  0.05882353 0.00000000 #>   100 0.00000000 0.00000000 #>   105 0.14285714 0.00000000 #>   110 0.20000000 0.20000000 #>   115 1.00000000 0.00000000 # apply the age-length key WR1.len <- alkIndivAge(WR1.key,age~len,data=WR1.len) # now there are ages head(WR1.len) #>   ID len age LCat #> 1  1  37   4   35 #> 2  2  37   4   35 #> 3  3  39   4   35 #> 4  4  37   4   35 #> 7  7  42   4   40 #> 8  8  42   4   40 # combine orig age & new ages WR1.comb <- rbind(WR1.age, WR1.len) # mean length-at-age Summarize(len~age,data=WR1.comb,digits=2) #>   age   n   mean   sd min     Q1 median     Q3 max #> 1   4 987  51.86 5.15  35  48.00   52.0  56.00  64 #> 2   5 396  71.79 5.35  60  68.00   72.0  76.00  84 #> 3   6 270  86.77 4.70  75  83.00   87.0  89.00  98 #> 4   7 447  97.53 5.12  85  93.00   97.0 102.00 113 #> 5   8 145 101.06 5.87  90  96.00  101.0 107.00 113 #> 6   9  78 103.86 3.19 100 102.00  103.0 104.75 113 #> 7  10  40 105.53 7.10  95  98.00  107.0 109.75 119 #> 8  11   6 112.00 1.26 110 111.25  112.5 113.00 113 # age frequency distribution ( af <- xtabs(~age,data=WR1.comb) ) #> age #>   4   5   6   7   8   9  10  11  #> 987 396 270 447 145  78  40   6  # proportional age distribution ( ap <- prop.table(af) ) #> age #>           4           5           6           7           8           9  #> 0.416631490 0.167159139 0.113972140 0.188687210 0.061207260 0.032925285  #>          10          11  #> 0.016884762 0.002532714   ## Second Example -- length sample does not have an age variable WR2 <- WR79 # isolate age and unaged samples WR2.age <- subset(WR2, !is.na(age)) WR2.len <- subset(WR2, is.na(age)) # remove age variable (for demo only) WR2.len <- WR2.len[,-3] # add length categories to aged sample WR2.age$LCat <- lencat(WR2.age$len,w=5) # create age-length key raw <- xtabs(~LCat+age,data=WR2.age) ( WR2.key <- prop.table(raw, margin=1) ) #>      age #> LCat           4          5          6          7          8          9 #>   35  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   40  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   45  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   50  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   55  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   60  0.60000000 0.40000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   65  0.00000000 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   70  0.00000000 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   75  0.00000000 0.88888889 0.11111111 0.00000000 0.00000000 0.00000000 #>   80  0.00000000 0.25000000 0.75000000 0.00000000 0.00000000 0.00000000 #>   85  0.00000000 0.00000000 0.90909091 0.09090909 0.00000000 0.00000000 #>   90  0.00000000 0.00000000 0.26315789 0.63157895 0.10526316 0.00000000 #>   95  0.00000000 0.00000000 0.05882353 0.70588235 0.17647059 0.00000000 #>   100 0.00000000 0.00000000 0.00000000 0.55555556 0.16666667 0.27777778 #>   105 0.00000000 0.00000000 0.00000000 0.28571429 0.42857143 0.14285714 #>   110 0.00000000 0.00000000 0.00000000 0.20000000 0.20000000 0.20000000 #>   115 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>      age #> LCat          10         11 #>   35  0.00000000 0.00000000 #>   40  0.00000000 0.00000000 #>   45  0.00000000 0.00000000 #>   50  0.00000000 0.00000000 #>   55  0.00000000 0.00000000 #>   60  0.00000000 0.00000000 #>   65  0.00000000 0.00000000 #>   70  0.00000000 0.00000000 #>   75  0.00000000 0.00000000 #>   80  0.00000000 0.00000000 #>   85  0.00000000 0.00000000 #>   90  0.00000000 0.00000000 #>   95  0.05882353 0.00000000 #>   100 0.00000000 0.00000000 #>   105 0.14285714 0.00000000 #>   110 0.20000000 0.20000000 #>   115 1.00000000 0.00000000 # apply the age-length key WR2.len <- alkIndivAge(WR2.key,~len,data=WR2.len) # add length cat to length sample WR2.len$LCat <- lencat(WR2.len$len,w=5) head(WR2.len) #>   ID len age LCat #> 1  1  37   4   35 #> 2  2  37   4   35 #> 3  3  39   4   35 #> 4  4  37   4   35 #> 7  7  42   4   40 #> 8  8  42   4   40 # combine orig age & new ages WR2.comb <- rbind(WR2.age, WR2.len) Summarize(len~age,data=WR2.comb,digits=2) #>   age   n   mean   sd min     Q1 median     Q3 max #> 1   4 986  51.85 5.14  35  48.00   52.0  56.00  64 #> 2   5 396  71.71 5.32  60  68.00   72.0  76.00  84 #> 3   6 270  86.79 4.67  75  83.00   87.0  89.00  99 #> 4   7 450  97.52 5.21  85  93.00   97.0 101.00 113 #> 5   8 145 101.18 5.86  90  97.00  102.0 107.00 113 #> 6   9  78 103.96 3.29 100 102.00  103.0 106.75 113 #> 7  10  38 105.05 6.97  96  98.00  106.0 109.50 119 #> 8  11   6 111.50 1.38 110 110.25  111.5 112.75 113  ## Third Example -- Uneven breaks for length categories WR3 <- WR79 # set up uneven breaks brks <- c(seq(35,100,5),110,130) WR3$LCat <- lencat(WR3$len,breaks=brks) WR3.age <- subset(WR3, !is.na(age)) WR3.len <- subset(WR3, is.na(age)) head(WR3.len) #>   ID len age LCat #> 1  1  37  NA   35 #> 2  2  37  NA   35 #> 3  3  39  NA   35 #> 4  4  37  NA   35 #> 7  7  42  NA   40 #> 8  8  42  NA   40 raw <- xtabs(~LCat+age,data=WR3.age) ( WR3.key <- prop.table(raw, margin=1) ) #>      age #> LCat           4          5          6          7          8          9 #>   35  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   40  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   45  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   50  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   55  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   60  0.60000000 0.40000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   65  0.00000000 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   70  0.00000000 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   75  0.00000000 0.88888889 0.11111111 0.00000000 0.00000000 0.00000000 #>   80  0.00000000 0.25000000 0.75000000 0.00000000 0.00000000 0.00000000 #>   85  0.00000000 0.00000000 0.90909091 0.09090909 0.00000000 0.00000000 #>   90  0.00000000 0.00000000 0.26315789 0.63157895 0.10526316 0.00000000 #>   95  0.00000000 0.00000000 0.05882353 0.70588235 0.17647059 0.00000000 #>   100 0.00000000 0.00000000 0.00000000 0.48000000 0.24000000 0.24000000 #>   110 0.00000000 0.00000000 0.00000000 0.14285714 0.14285714 0.14285714 #>      age #> LCat          10         11 #>   35  0.00000000 0.00000000 #>   40  0.00000000 0.00000000 #>   45  0.00000000 0.00000000 #>   50  0.00000000 0.00000000 #>   55  0.00000000 0.00000000 #>   60  0.00000000 0.00000000 #>   65  0.00000000 0.00000000 #>   70  0.00000000 0.00000000 #>   75  0.00000000 0.00000000 #>   80  0.00000000 0.00000000 #>   85  0.00000000 0.00000000 #>   90  0.00000000 0.00000000 #>   95  0.05882353 0.00000000 #>   100 0.04000000 0.00000000 #>   110 0.42857143 0.14285714 WR3.len <- alkIndivAge(WR3.key,age~len,data=WR3.len,breaks=brks) #> Warning: The maximum observed length in the length sample (117) is greater #>  than the largest length category in the age-length key (110). #>  The last length category will be treated as all-inclusive. head(WR3.len) #>   ID len age LCat #> 1  1  37   4   35 #> 2  2  37   4   35 #> 3  3  39   4   35 #> 4  4  37   4   35 #> 7  7  42   4   40 #> 8  8  42   4   40 WR3.comb <- rbind(WR3.age, WR3.len) Summarize(len~age,data=WR3.comb,digits=2) #>   age   n   mean   sd min     Q1 median  Q3 max #> 1   4 987  51.86 5.14  35  48.00   52.0  56  64 #> 2   5 395  71.75 5.26  60  68.00   72.0  76  84 #> 3   6 269  86.77 4.67  75  83.00   87.0  89  99 #> 4   7 453  97.72 5.41  85  93.00   97.0 102 114 #> 5   8 139 100.42 5.31  90  97.00  101.0 104 113 #> 6   9  78 104.12 3.21 100 102.00  103.0 107 113 #> 7  10  44 105.18 7.38  95  97.00  105.0 112 119 #> 8  11   4 112.25 0.96 111 111.75  112.5 113 113"},{"path":"https://fishr-core-team.github.io/FSA/reference/alkMeanVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Values-at-age from an age-length key — alkMeanVar","title":"Mean Values-at-age from an age-length key — alkMeanVar","text":"Computes mean value--age larger sample based age-length-key created subsample ages two-stage random sampling design. mean values mean length-, weight-, fecundity--age, example. methods Bettoli Miranda (2001) Quinn Deriso (1999) used. standard deviation computed Bettoli Miranda (2001) method standard error Quinn Deriso (1999) method. See testing section notes.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkMeanVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Values-at-age from an age-length key — alkMeanVar","text":"","code":"alkMeanVar(   key,   formula,   data,   len.n,   method = c(\"BettoliMiranda\", \"QuinnDeriso\") )"},{"path":"https://fishr-core-team.github.io/FSA/reference/alkMeanVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Values-at-age from an age-length key — alkMeanVar","text":"key numeric matrix contains age-length key. See details. formula formula form var~lencat+age var generically represents variable summarized (e.g., length, weight, fecundity), lencat generically represents variable contains length intervals, age generically represents variable contains assigned ages. data data.frame minimally contains length intervals, assessed ages, variable summarized (.e., aged sample) given formula. len.n vector sample sizes length interval complete sample (.e., fish regardless whether aged ). method string indicates method calculation used. See details.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkMeanVar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Values-at-age from an age-length key — alkMeanVar","text":"data.frame many rows ages (columns) present key following three variables: age ages. mean mean value age. sd,se SD method=\"BettoliMiranda\" SE mean method=\"QuinnDeriso\" value age.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkMeanVar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Values-at-age from an age-length key — alkMeanVar","text":"age-length key key must length intervals rows ages columns. row names key (.e., rownames(key)) must contain minimum values length interval (e.g., interval 100-109, corresponding row name must 100). column names key (.e., colnames(key)) must contain age values (e.g., columns can named “age.1”, example). length intervals rows key must contain length intervals present larger sample. Thus, length len.n must, least, equal number rows key. constraint met, function stop error message. Note function stop error formula formula meet specific criteria outlined parameter list .","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkMeanVar.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Mean Values-at-age from an age-length key — alkMeanVar","text":"results functions yet rigorously tested. Bettoli Miranda (2001) results appear, least, approximately correct compared results alkIndivAge. Quinn Deriso (1999) results appear least approximately correct mean values, appear correct SE values. Thus, note returned Quinn Deriso (1999) results SE trusted.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkMeanVar.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Mean Values-at-age from an age-length key — alkMeanVar","text":"5-Age-Length Key.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkMeanVar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Values-at-age from an age-length key — alkMeanVar","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Bettoli, P. W. Miranda, L. E. 2001. cautionary note estimating mean length age subsampled data. North American Journal Fisheries Management, 21:425-428. Quinn, T. J. R. B. Deriso. 1999. Quantitative Fish Dynamics. Oxford University Press, New York, New York. 542 pages","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/alkMeanVar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mean Values-at-age from an age-length key — alkMeanVar","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkMeanVar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Values-at-age from an age-length key — alkMeanVar","text":"","code":"## Example -- Even breaks for length categories WR1 <- WR79 # add length intervals (width=5) WR1$LCat <- lencat(WR1$len,w=5) # get number of fish in each length interval in the entire sample len.n <- xtabs(~LCat,data=WR1) # isolate aged sample WR1.age <- subset(WR1, !is.na(age)) # create age-length key raw <- xtabs(~LCat+age,data=WR1.age) ( WR1.key <- prop.table(raw, margin=1) ) #>      age #> LCat           4          5          6          7          8          9 #>   35  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   40  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   45  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   50  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   55  1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   60  0.60000000 0.40000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   65  0.00000000 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   70  0.00000000 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>   75  0.00000000 0.88888889 0.11111111 0.00000000 0.00000000 0.00000000 #>   80  0.00000000 0.25000000 0.75000000 0.00000000 0.00000000 0.00000000 #>   85  0.00000000 0.00000000 0.90909091 0.09090909 0.00000000 0.00000000 #>   90  0.00000000 0.00000000 0.26315789 0.63157895 0.10526316 0.00000000 #>   95  0.00000000 0.00000000 0.05882353 0.70588235 0.17647059 0.00000000 #>   100 0.00000000 0.00000000 0.00000000 0.55555556 0.16666667 0.27777778 #>   105 0.00000000 0.00000000 0.00000000 0.28571429 0.42857143 0.14285714 #>   110 0.00000000 0.00000000 0.00000000 0.20000000 0.20000000 0.20000000 #>   115 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>      age #> LCat          10         11 #>   35  0.00000000 0.00000000 #>   40  0.00000000 0.00000000 #>   45  0.00000000 0.00000000 #>   50  0.00000000 0.00000000 #>   55  0.00000000 0.00000000 #>   60  0.00000000 0.00000000 #>   65  0.00000000 0.00000000 #>   70  0.00000000 0.00000000 #>   75  0.00000000 0.00000000 #>   80  0.00000000 0.00000000 #>   85  0.00000000 0.00000000 #>   90  0.00000000 0.00000000 #>   95  0.05882353 0.00000000 #>   100 0.00000000 0.00000000 #>   105 0.14285714 0.00000000 #>   110 0.20000000 0.20000000 #>   115 1.00000000 0.00000000  ## use age-length key to estimate mean length-at-age of all fish # Bettoli-Miranda method alkMeanVar(WR1.key,len~LCat+age,WR1.age,len.n) #>   age      mean       sd #> 1   4  51.95492 5.050430 #> 2   5  72.01342 5.519135 #> 3   6  86.59311 4.714664 #> 4   7  97.45567 5.247117 #> 5   8 101.38084 5.576238 #> 6   9 103.65599 2.312767 #> 7  10 104.86056 7.497515 #> 8  11 113.00000 0.000000  # Quinn-Deriso method alkMeanVar(WR1.key,len~LCat+age,WR1.age,len.n,method=\"QuinnDeriso\") #> The 'se' values should not be trusted! #>   age      mean        se #> 1   4  51.95492 0.3031374 #> 2   5  72.01342 0.5018225 #> 3   6  86.59311 0.5977608 #> 4   7  97.45567 0.4823013 #> 5   8 101.38084 1.4384950 #> 6   9 103.65599 0.9653842 #> 7  10 104.86056 0.6696853 #> 8  11 113.00000 0.0000000"},{"path":"https://fishr-core-team.github.io/FSA/reference/alkPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots to visualize age-length keys. — alkPlot","title":"Plots to visualize age-length keys. — alkPlot","text":"Various plots visualize proportion fish certain ages within length intervals age-length key.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots to visualize age-length keys. — alkPlot","text":"","code":"alkPlot(   key,   type = c(\"barplot\", \"area\", \"lines\", \"splines\", \"bubble\"),   xlab = \"Length\",   ylab = ifelse(type != \"bubble\", \"Proportion\", \"Age\"),   xlim = NULL,   ylim = NULL,   showLegend = FALSE,   lbl.cex = 1.25,   leg.cex = 1,   lwd = 2,   span = 0.25,   grid = TRUE,   col = NULL,   buf = 0.45,   add = FALSE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/alkPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots to visualize age-length keys. — alkPlot","text":"key numeric matrix contains age-length key. type string indicates type plot construct. See details. xlab, ylab string contains label x- y-axis. xlim, ylim numeric length 2 provide limits x-axis y-axis. showLegend logical indicates whether legend displayed (implemented type=\"bubble\"). See examples. lbl.cex numeric character expansion value labels inside bars type=\"barplot\" lines type=\"lines\" type=\"splines\". used showLegend=FALSE. leg.cex numeric character expansion value labels legend showLegend=TRUE. lwd numeric indicates line width type=\"lines\" type=\"splines\". span numeric indicates span value use loess type=\"splines\". grid logical indicates whether grid placed bubbles type=\"bubble\" character appropriate vector identifies color grid. See examples. col single character string palette hcl.pals vector character strings containing colors bars, areas, lines, spline lines different ages; defaults \"viridis\" palette hcl.colors. single string indicates color bubbles type=\"bubble\". buf single numeric indicates relative width bubbles type=\"bubble\". value 0.5 means two full-width bubbles touch either x- y-direction (.e., represent half minimum physical distance values one-unit apart x- y-axes). Set value less 0.5 bubbles touch (default 0.45). add logical indicates whether data added already existing plot. May useful visually comparing age-length keys. implemented type=\"bubble\". ... Additional arguments pass plot barplot.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots to visualize age-length keys. — alkPlot","text":"None, plot constructed.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plots to visualize age-length keys. — alkPlot","text":"variety plots can used visualize proportion fish certain ages within length intervals age-length key. types plots described illustrated examples. “stacked” bar chart vertical bars length intervals sum 1 segmented proportion age length interval constructed type=\"barplot\". ages labeled bar segments unless showLegend=TRUE used. “stacked” area chart similar bar chart described constructed type=\"area\". plot (differently colored) lines connect proportions ages within length interval constructed type=\"lines\". plot (differently colored) lines, estimated loess splines, connect proportions ages within length interval constructed type=\"splines\". “bubble” plot circles whose size proportional proportion fish age length interval constructed type=\"bubble\". color bubbles can controlled col= underlying grid ease seeing age length interval bubble can controlled grid=. Bubbles second age-length key can overlaid already constructed bubble plot using add=TRUE second call alkPlot. Note plots “vertically conditional” -- .e., represents proportional ages WITHIN length interval.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkPlot.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Plots to visualize age-length keys. — alkPlot","text":"5-Age-Length Key.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkPlot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plots to visualize age-length keys. — alkPlot","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/alkPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots to visualize age-length keys. — alkPlot","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/alkPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots to visualize age-length keys. — alkPlot","text":"","code":"## Make an example age-length key WR.age <- droplevels(subset(WR79, !is.na(age))) WR.age$LCat <- lencat(WR.age$len,w=5) raw <- xtabs(~LCat+age,data=WR.age) WR.key <- prop.table(raw, margin=1) round(WR.key,3) #>      age #> LCat      4     5     6     7     8     9    10    11 #>   35  1.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 #>   40  1.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 #>   45  1.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 #>   50  1.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 #>   55  1.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 #>   60  0.600 0.400 0.000 0.000 0.000 0.000 0.000 0.000 #>   65  0.000 1.000 0.000 0.000 0.000 0.000 0.000 0.000 #>   70  0.000 1.000 0.000 0.000 0.000 0.000 0.000 0.000 #>   75  0.000 0.889 0.111 0.000 0.000 0.000 0.000 0.000 #>   80  0.000 0.250 0.750 0.000 0.000 0.000 0.000 0.000 #>   85  0.000 0.000 0.909 0.091 0.000 0.000 0.000 0.000 #>   90  0.000 0.000 0.263 0.632 0.105 0.000 0.000 0.000 #>   95  0.000 0.000 0.059 0.706 0.176 0.000 0.059 0.000 #>   100 0.000 0.000 0.000 0.556 0.167 0.278 0.000 0.000 #>   105 0.000 0.000 0.000 0.286 0.429 0.143 0.143 0.000 #>   110 0.000 0.000 0.000 0.200 0.200 0.200 0.200 0.200 #>   115 0.000 0.000 0.000 0.000 0.000 0.000 1.000 0.000  ## Various visualizations of the age-length key alkPlot(WR.key,\"barplot\")  alkPlot(WR.key,\"barplot\",col=\"Cork\")  alkPlot(WR.key,\"barplot\",col=heat.colors(8))  alkPlot(WR.key,\"barplot\",showLegend=TRUE)  alkPlot(WR.key,\"area\")  alkPlot(WR.key,\"lines\")  alkPlot(WR.key,\"splines\")  alkPlot(WR.key,\"splines\",span=0.2)  alkPlot(WR.key,\"bubble\")  alkPlot(WR.key,\"bubble\",col=col2rgbt(\"black\",0.5))"},{"path":"https://fishr-core-team.github.io/FSA/reference/binCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for binomial probability of success. — binCI","title":"Confidence intervals for binomial probability of success. — binCI","text":"Uses one three methods compute confidence interval probability success (p) binomial distribution.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/binCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for binomial probability of success. — binCI","text":"","code":"binCI(   x,   n,   conf.level = 0.95,   type = c(\"wilson\", \"exact\", \"asymptotic\"),   verbose = FALSE )"},{"path":"https://fishr-core-team.github.io/FSA/reference/binCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for binomial probability of success. — binCI","text":"x single vector numbers contains number observed successes. n single vector numbers contains sample size. conf.level single number indicates level confidence (default 0.95). type string identifies type method use calculations. See details. verbose logical indicates whether x, n, x/n included returned matrix (=TRUE) (=FALSE; DEFAULT).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/binCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals for binomial probability of success. — binCI","text":"#x2 matrix contains lower upper confidence interval bounds columns , verbose=TRUE  x, n, x/n .","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/binCI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence intervals for binomial probability of success. — binCI","text":"function compute confidence interval three possible methods chosen type argument. Note Agresti Coull (2000) suggest Wilson interval preferred method , thus, default type.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/binCI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence intervals for binomial probability of success. — binCI","text":"Agresti, . B.. Coull. 1998. Approximate better “exact” interval estimation binomial proportions. American Statistician, 52:119-126.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/binCI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence intervals for binomial probability of success. — binCI","text":"Derek H. Ogle, DerekOgle51@gmail.com, though largely based binom.exact, binom.wilson, binom.approx old epitools package.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/binCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence intervals for binomial probability of success. — binCI","text":"","code":"## All types at once binCI(7,20) #>              95% LCI   95% UCI #> Exact      0.1539092 0.5921885 #> Wilson     0.1811918 0.5671457 #> Asymptotic 0.1409627 0.5590373  ## Individual types binCI(7,20,type=\"wilson\") #>    95% LCI   95% UCI #>  0.1811918 0.5671457 binCI(7,20,type=\"exact\") #>    95% LCI   95% UCI #>  0.1539092 0.5921885 binCI(7,20,type=\"asymptotic\") #>    95% LCI   95% UCI #>  0.1409627 0.5590373 binCI(7,20,type=\"asymptotic\",verbose=TRUE) #>            x  n proportion   95% LCI   95% UCI #> Asymptotic 7 20       0.35 0.1409627 0.5590373  ## Multiple types binCI(7,20,type=c(\"exact\",\"asymptotic\")) #>              95% LCI   95% UCI #> Exact      0.1539092 0.5921885 #> Asymptotic 0.1409627 0.5590373 binCI(7,20,type=c(\"exact\",\"asymptotic\"),verbose=TRUE) #>            x  n proportion   95% LCI   95% UCI #> Exact      7 20       0.35 0.1539092 0.5921885 #> Asymptotic 7 20       0.35 0.1409627 0.5590373  ## Use with multiple inputs binCI(c(7,10),c(20,30),type=\"wilson\") #>    95% LCI   95% UCI #>  0.1811918 0.5671457 #>  0.1923050 0.5121995 binCI(c(7,10),c(20,30),type=\"wilson\",verbose=TRUE) #>       x  n proportion   95% LCI   95% UCI #> [1,]  7 20  0.3500000 0.1811918 0.5671457 #> [2,] 10 30  0.3333333 0.1923050 0.5121995"},{"path":"https://fishr-core-team.github.io/FSA/reference/boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Associated S3 methods for bootstrap results from car::Boot. — confint.boot","title":"Associated S3 methods for bootstrap results from car::Boot. — confint.boot","text":"S3 methods provided construct non-parametric bootstrap confidence intervals, predictions non-parametric confidence intervals, hypothesis tests, plots parameter estimates objects returned Boot car.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Associated S3 methods for bootstrap results from car::Boot. — confint.boot","text":"","code":"# S3 method for boot confint(   object,   parm = NULL,   level = conf.level,   conf.level = 0.95,   type = c(\"bca\", \"norm\", \"basic\", \"perc\"),   plot = FALSE,   err.col = \"black\",   err.lwd = 2,   rows = NULL,   cols = NULL,   ... )  # S3 method for boot htest(   object,   parm = NULL,   bo = 0,   alt = c(\"two.sided\", \"less\", \"greater\"),   plot = FALSE,   ... )  # S3 method for boot predict(object, FUN, conf.level = 0.95, digits = NULL, ...)  # S3 method for boot hist(   x,   same.ylim = TRUE,   ymax = NULL,   rows = round(sqrt(ncol(x$t))),   cols = ceiling(sqrt(ncol(x$t))),   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Associated S3 methods for bootstrap results from car::Boot. — confint.boot","text":"object, x object class boot Boot. parm number string indicates column object contains parameter estimates use confidence interval hypothesis test. level conf.level. conf.level level confidence proportion. type Confidence interval type; types implemented \"percentile\" method, uses function quantile return appropriate quantiles confidence limit specified, default bca uses bias-corrected accelerated method presented Efron Tibshirani (1993, Chapter 14). types, see documentation boot. plot logical indicates whether plot constructed. confint histogram parm parameters bootstrap samples error bars illustrate bootstrapped confidence intervals constructed. codehtest histogram parm parameters vertical line illustrating bo value constructed. err.col single numeric character identifies color error bars plot. err.lwd single numeric identifies line width error bars plot. rows single numeric contains number rows use graphic. cols single numeric contains number columns use graphic. ... Additional items send functions. See details. bo null hypothesized parameter value. alt string indicates “direction” alternative hypothesis. See details. FUN function applied prediction. See examples. digits single numeric indicates number digits result. .ylim logical indicates whether limits y-axis used histogram. Defaults TRUE. Ignored ylmts non-null. ymax single value sets maximum y-axis limit histogram vector length equal number groups sets maximum y-axis limit histogram separately. col named color histogram bars.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Associated S3 methods for bootstrap results from car::Boot. — confint.boot","text":"object matrix, confint returns matrix many rows columns (.e., parameter estimates) object two columns quantiles correspond approximate confidence interval. object vector, confint returns vector two quantiles correspond approximate confidence interval. htest returns two-column matrix first column containing hypothesized value sent function second column containing corresponding p-value. hist constructs histograms bootstrapped parameter estimates. plot constructs scatterplots pairs bootstrapped parameter estimates. predict returns matrix one row three columns, first column holding predicted value (.e., median prediction) last two columns holding approximate confidence interval.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/boot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Associated S3 methods for bootstrap results from car::Boot. — confint.boot","text":"confint largely wrapper Confint car (see manual page). predict applies user-supplied function row object finds median two quantiles proportion (1-conf.level)/2 bootstrapped predictions . median returned predicted value quantiles returned approximate 100conf.level% confidence interval prediction. Values independent variable FUN must named argument sent ... argument (see examples). Note arguments needed FUN besides values independent variable, included ... argument values independent variable. htest “direction” alternative hypothesis identified string alt= argument. strings may \"less\" “less ” alternative, \"greater\" “greater ” alternative, \"two.sided\" “equals” alternative (DEFAULT). one-tailed alternatives p-value proportion bootstrapped parameter estimates object$coefboot extreme null hypothesized parameter value bo. two-tailed alternative p-value twice smallest proportion bootstrapped parameter estimates null hypothesized parameter value bo.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/boot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Associated S3 methods for bootstrap results from car::Boot. — confint.boot","text":"S. Weisberg (2005). Applied Linear Regression, third edition. New York: Wiley, Chapters 4 11.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/boot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Associated S3 methods for bootstrap results from car::Boot. — confint.boot","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Associated S3 methods for bootstrap results from car::Boot. — confint.boot","text":"","code":"fnx <- function(days,B1,B2,B3) {   if (length(B1) > 1) {     B2 <- B1[2]     B3 <- B1[3]     B1 <- B1[1]   }   B1/(1+exp(B2+B3*days)) } nl1 <- nls(cells~fnx(days,B1,B2,B3),data=Ecoli,            start=list(B1=6,B2=7.2,B3=-1.45))  if (require(car)) {   nl1.bootc <- car::Boot(nl1,f=coef,R=99)  # R=99 too few to be useful   confint(nl1.bootc,\"B1\")   confint(nl1.bootc,c(2,3))   confint(nl1.bootc,conf.level=0.90)   confint(nl1.bootc,\"B1\",plot=TRUE)   htest(nl1.bootc,1,bo=6,alt=\"less\")   htest(nl1.bootc,1,bo=6,alt=\"less\",plot=TRUE)   predict(nl1.bootc,fnx,days=1:3)   predict(nl1.bootc,fnx,days=3)   hist(nl1.bootc) } #> Loading required package: car #> Loading required package: carData #>  #> Attaching package: ‘car’ #> The following object is masked from ‘package:FSA’: #>  #>     bootCase #> Error in fnx(days, B1, B2, B3): could not find function \"fnx\""},{"path":"https://fishr-core-team.github.io/FSA/reference/capFirst.html","id":null,"dir":"Reference","previous_headings":"","what":"Capitalizes the first letter of first or all words in a string. — capFirst","title":"Capitalizes the first letter of first or all words in a string. — capFirst","text":"Capitalizes first letter first words string.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capFirst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capitalizes the first letter of first or all words in a string. — capFirst","text":"","code":"capFirst(x, which = c(\"all\", \"first\"))"},{"path":"https://fishr-core-team.github.io/FSA/reference/capFirst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capitalizes the first letter of first or all words in a string. — capFirst","text":"x single string. single string indicates whether (default) first words capitalized.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capFirst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capitalizes the first letter of first or all words in a string. — capFirst","text":"single string first letter first words capitalized.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capFirst.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Capitalizes the first letter of first or all words in a string. — capFirst","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capFirst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capitalizes the first letter of first or all words in a string. — capFirst","text":"","code":"## Capitalize first letter of all words (the default) capFirst(\"Derek Ogle\") #> [1] \"Derek Ogle\" capFirst(\"derek ogle\") #> [1] \"Derek Ogle\" capFirst(\"derek\") #> [1] \"Derek\"  ## Capitalize first letter of only the first words capFirst(\"Derek Ogle\",which=\"first\") #> [1] \"Derek ogle\" capFirst(\"derek ogle\",which=\"first\") #> [1] \"Derek ogle\" capFirst(\"derek\",which=\"first\") #> [1] \"Derek\" ## apply to all elements in a vector vec <- c(\"Derek Ogle\",\"derek ogle\",\"Derek ogle\",\"derek Ogle\",\"DEREK OGLE\") capFirst(vec) #> [1] \"Derek Ogle\" \"Derek Ogle\" \"Derek Ogle\" \"Derek Ogle\" \"Derek Ogle\" capFirst(vec,which=\"first\") #> [1] \"Derek ogle\" \"Derek ogle\" \"Derek ogle\" \"Derek ogle\" \"Derek ogle\"  ## check class types class(vec) #> [1] \"character\" vec1 <- capFirst(vec) class(vec1) #> [1] \"character\" fvec <- factor(vec) fvec1 <- capFirst(fvec) class(fvec1) #> [1] \"factor\""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistConvert.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between capture history data.frame formats. — capHistConvert","title":"Convert between capture history data.frame formats. — capHistConvert","text":"Use convert simple versions several capture history data.frame formats -- “individual”, “frequency”, “event”, “MARK”, “RMark”. primary use convert “individual” format use capHistSum.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistConvert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between capture history data.frame formats. — capHistConvert","text":"","code":"capHistConvert(   df,   cols2use = NULL,   cols2ignore = NULL,   in.type = c(\"frequency\", \"event\", \"individual\", \"MARK\", \"marked\", \"RMark\"),   out.type = c(\"individual\", \"event\", \"frequency\", \"MARK\", \"marked\", \"RMark\"),   id = NULL,   event.ord = NULL,   freq = NULL,   var.lbls = NULL,   var.lbls.pre = \"event\",   include.id = ifelse(is.null(id), FALSE, TRUE) )"},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistConvert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between capture history data.frame formats. — capHistConvert","text":"df data.frame contains capture histories , perhaps, unique fish identifier frequency variable. See details. cols2use string numeric vector indicates columns df use. Negative numeric values use columns. use cols2use col2ignore. cols2ignore string numeric vector indicates columns df ignore. Typical columns ignore either id= freq= part capture history data. use cols2use col2ignore. .type single string indicates type capture history format convert . .type single string indicates type capture history format convert . id string numeric indicates column df contains unique identifier individual fish. argument used .type=\"event\", .type=\"individual\", , possibly, .type=\"RMark\". event.ord string contains vector ordered levels used .type=\"event\". default order alphabetically may desirable , example, events labeled ‘first’, ‘second’, ‘third’, ‘fourth’. case, use event.ord=c(\"first\",\"second\",\"third\",\"fourth\"). freq string numeric indicates column df contains frequency individual fish corresponding capture history. argument used .type=\"MARK\", .type=\"frequency\", , possibly, .type=\"RMark\". var.lbls string vector labels columns contain returned individual frequency capture histories. var.lbls=NULL length different number events default labels using var.lbls.pre used. argument used .type=\"frequency\" .type=\"individual\". var.lbls.pre single string used prefix labels columns contain returned individual frequency capture histories. prefix appended number corresponding sample event. argument used .type=\"frequency\" .type=\"individual\" ignored proper vector given var.lbls. include.id logical indicates whether unique fish identifier variable/column included output data.frame. argument used .type=\"individual\" .type=\"RMark\".","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistConvert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between capture history data.frame formats. — capHistConvert","text":"data frame proper type given .type returned. See details.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistConvert.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert between capture history data.frame formats. — capHistConvert","text":"capHistSum requires capture histories recorded “individual” format. format, data frame contains (least) many columns sample events many rows individually tagged fish. Optionally, data.frame may also contain column unique fish identifiers (e.g., tag numbers). cell capture history portion data.frame contains ‘0’ fish row seen event column ‘1’ fish row seen event column. example, suppose five fish marked four sampling events; fish ‘17’ captured first two events; fish ‘18’ captured first third events; fish ‘19’ captured third event; fish ‘20’ captured fourth event; fish ‘21’ captured first second events. “individual” capture history date.frame data looks like: “frequency” format data.frame (format used Rcapture) unique capture histories separate columns, “individual” format, also includes column frequency individuals capture history row. contain fish identifier variable. data looks like: “event” format data.frame column unique fish identifier column event fish row observed. data looks like: MARK (http://www.phidot.org/software/mark/index.html) “gold-standard” software analyzing complex capture history information. “MARK” format 0s 1s capture histories combined together string without spaces. Thus, “MARK” format capture history strings one column additional column contains frequency individuals exhibited capture history row. final column ends semi-colon. data looks like: RMark marked packages used replace functionality MARK interact MARK. “RMark” “marked” format requires capture histories one string (must character string called ‘ch’), “MARK” format, without semicolon. data.frame may augmented identifier individual fish frequency variable. augmented unique fish identification variable data looks like: However, augmented frequency variable data looks like: formats can used convert (.e., .type=) convert (.e., .type=) exception individual fish identifier version can converted .type=\"RMark\".","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistConvert.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert between capture history data.frame formats. — capHistConvert","text":"formats used simple sense one allowed individual fish identifier frequency variable addition capture history information. complex analyses may use number covariates. complex analyses, one work directly Rcapture, RMark, marked packages. function also assumes unmarked captured fish marked returned population (.e., losses time marking allowed).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistConvert.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Convert between capture history data.frame formats. — capHistConvert","text":"capHistConvert may give unwanted results data .type=\"event\" unused levels variable, result data.frame subsetted event variable. unwanted results can corrected using droplevels capHistConvert. See last example example.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistConvert.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Convert between capture history data.frame formats. — capHistConvert","text":"9-Abundance Capture-Recapture Data.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistConvert.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert between capture history data.frame formats. — capHistConvert","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistConvert.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert between capture history data.frame formats. — capHistConvert","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistConvert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert between capture history data.frame formats. — capHistConvert","text":"","code":"## A small example of 'event' format ( ex1 <- data.frame(fish=c(17,18,21,17,21,18,19,20),yr=c(1987,1987,1987,1988,1988,1989,1989,1990)) ) #>   fish   yr #> 1   17 1987 #> 2   18 1987 #> 3   21 1987 #> 4   17 1988 #> 5   21 1988 #> 6   18 1989 #> 7   19 1989 #> 8   20 1990 # convert to 'individual' format ( ex1.E2I <- capHistConvert(ex1,id=\"fish\",in.type=\"event\") ) #>   fish 1987 1988 1989 1990 #> 1   17    1    1    0    0 #> 2   18    1    0    1    0 #> 3   19    0    0    1    0 #> 4   20    0    0    0    1 #> 5   21    1    1    0    0 # convert to 'frequency' format ( ex1.E2F <- capHistConvert(ex1,id=\"fish\",in.type=\"event\",out.type=\"frequency\") ) #>   1987 1988 1989 1990 freq #> 1    0    0    0    1    1 #> 2    0    0    1    0    1 #> 3    1    0    1    0    1 #> 4    1    1    0    0    2 # convert to 'MARK' format ( ex1.E2M <- capHistConvert(ex1,id=\"fish\",in.type=\"event\",out.type=\"MARK\") ) #>     ch freq #> 1 0001   1; #> 2 0010   1; #> 3 1010   1; #> 4 1100   2; # convert to 'RMark' format ( ex1.E2R <- capHistConvert(ex1,id=\"fish\",in.type=\"event\",out.type=\"RMark\") ) #>   fish   ch #> 1   17 1100 #> 2   18 1010 #> 3   19 0010 #> 4   20 0001 #> 5   21 1100  ## convert converted 'individual' format ... # to 'frequency' format (must ignore \"id\") ( ex1.I2F <- capHistConvert(ex1.E2I,id=\"fish\",in.type=\"individual\",out.type=\"frequency\") ) #>   1987 1988 1989 1990 freq #> 1    0    0    0    1    1 #> 2    0    0    1    0    1 #> 3    1    0    1    0    1 #> 4    1    1    0    0    2 # to 'MARK' format ( ex1.I2M <- capHistConvert(ex1.E2I,id=\"fish\",in.type=\"individual\",out.type=\"MARK\") ) #>     ch freq #> 1 0001   1; #> 2 0010   1; #> 3 1010   1; #> 4 1100   2; # to 'RMark' format ( ex1.I2R <- capHistConvert(ex1.E2I,id=\"fish\",in.type=\"individual\",out.type=\"RMark\") ) #>   fish   ch #> 1   17 1100 #> 2   18 1010 #> 3   19 0010 #> 4   20 0001 #> 5   21 1100 # to 'event' format ( ex1.I2E <- capHistConvert(ex1.E2I,id=\"fish\",in.type=\"individual\",out.type=\"event\") ) #>   fish event #> 1   17  1987 #> 2   18  1987 #> 3   21  1987 #> 4   17  1988 #> 5   21  1988 #> 6   18  1989 #> 7   19  1989 #> 8   20  1990  #' ## convert converted 'frequency' format ... # to 'individual' format ( ex1.F2I <- capHistConvert(ex1.E2F,freq=\"freq\",in.type=\"frequency\") ) #>   1987 1988 1989 1990 #> 1    0    0    0    1 #> 2    0    0    1    0 #> 3    1    0    1    0 #> 4    1    1    0    0 #> 5    1    1    0    0 ( ex1.F2Ia <- capHistConvert(ex1.E2F,freq=\"freq\",in.type=\"frequency\",include.id=TRUE) ) #>   id 1987 1988 1989 1990 #> 1  1    0    0    0    1 #> 2  2    0    0    1    0 #> 3  3    1    0    1    0 #> 4  4    1    1    0    0 #> 5  5    1    1    0    0 # to 'Mark' format ( ex1.F2M <- capHistConvert(ex1.E2F,freq=\"freq\",in.type=\"frequency\",                             out.type=\"MARK\") ) #>     ch freq #> 1 0001   1; #> 2 0010   1; #> 3 1010   1; #> 4 1100   2; # to 'RMark' format ( ex1.F2R <- capHistConvert(ex1.E2F,freq=\"freq\",in.type=\"frequency\",                             out.type=\"RMark\") ) #>     ch #> 1 0001 #> 2 0010 #> 3 1010 #> 4 1100 #> 5 1100 ( ex1.F2Ra <- capHistConvert(ex1.E2F,freq=\"freq\",in.type=\"frequency\",                              out.type=\"RMark\",include.id=TRUE) ) #>   id   ch #> 1  1 0001 #> 2  2 0010 #> 3  3 1010 #> 4  4 1100 #> 5  5 1100 # to 'event' format ( ex1.F2E <- capHistConvert(ex1.E2F,freq=\"freq\",in.type=\"frequency\",                             out.type=\"event\") ) #>   id event #> 1  3  1987 #> 2  4  1987 #> 3  5  1987 #> 4  4  1988 #> 5  5  1988 #> 6  2  1989 #> 7  3  1989 #> 8  1  1990  ## convert converted 'MARK' format ... # to 'individual' format ( ex1.M2I <- capHistConvert(ex1.E2M,freq=\"freq\",in.type=\"MARK\") ) #>   event1 event2 event3 event4 #> 1      0      0      0      1 #> 2      0      0      1      0 #> 3      1      0      1      0 #> 4      1      1      0      0 #> 5      1      1      0      0 ( ex1.M2Ia <- capHistConvert(ex1.E2M,freq=\"freq\",in.type=\"MARK\",include.id=TRUE) ) #>   id event1 event2 event3 event4 #> 1  1      0      0      0      1 #> 2  2      0      0      1      0 #> 3  3      1      0      1      0 #> 4  4      1      1      0      0 #> 5  5      1      1      0      0 # to 'frequency' format ( ex1.M2F <- capHistConvert(ex1.E2M,freq=\"freq\",in.type=\"MARK\",out.type=\"frequency\") ) #>   event1 event2 event3 event4 freq #> 1      0      0      0      1    1 #> 2      0      0      1      0    1 #> 3      1      0      1      0    1 #> 4      1      1      0      0    2 # to 'RMark' format ( ex1.M2R <- capHistConvert(ex1.E2M,freq=\"freq\",in.type=\"MARK\",out.type=\"RMark\") ) #>     ch #> 1 0001 #> 2 0010 #> 3 1010 #> 4 1100 #> 5 1100 ( ex1.M2Ra <- capHistConvert(ex1.E2M,freq=\"freq\",in.type=\"MARK\",out.type=\"RMark\",include.id=TRUE) ) #>   id   ch #> 1  1 0001 #> 2  2 0010 #> 3  3 1010 #> 4  4 1100 #> 5  5 1100 # to 'event' format ( ex1.M2E <- capHistConvert(ex1.E2M,freq=\"freq\",in.type=\"MARK\",out.type=\"event\") ) #>   id  event #> 1  3 event1 #> 2  4 event1 #> 3  5 event1 #> 4  4 event2 #> 5  5 event2 #> 6  2 event3 #> 7  3 event3 #> 8  1 event4   ## convert converted 'RMark' format ... # to 'individual' format ( ex1.R2I <- capHistConvert(ex1.E2R,id=\"fish\",in.type=\"RMark\") ) #>   fish event1 event2 event3 event4 #> 1   17      1      1      0      0 #> 2   18      1      0      1      0 #> 3   19      0      0      1      0 #> 4   20      0      0      0      1 #> 5   21      1      1      0      0 # to 'frequency' format ( ex1.R2F <- capHistConvert(ex1.E2R,id=\"fish\",in.type=\"RMark\",out.type=\"frequency\") ) #>   event1 event2 event3 event4 freq #> 1      0      0      0      1    1 #> 2      0      0      1      0    1 #> 3      1      0      1      0    1 #> 4      1      1      0      0    2 # to 'MARK' format ( ex1.R2M <- capHistConvert(ex1.E2R,id=\"fish\",in.type=\"RMark\",out.type=\"MARK\") ) #>     ch freq #> 1 0001   1; #> 2 0010   1; #> 3 1010   1; #> 4 1100   2; # to 'event' format ( ex1.R2E <- capHistConvert(ex1.E2R,id=\"fish\",in.type=\"RMark\",out.type=\"event\") ) #>   fish  event #> 1   17 event1 #> 2   18 event1 #> 3   21 event1 #> 4   17 event2 #> 5   21 event2 #> 6   18 event3 #> 7   19 event3 #> 8   20 event4  ## Remove semi-colon from MARK format to make a RMark 'frequency' format ex1.E2R1 <- ex1.E2M ex1.E2R1$freq <- as.numeric(sub(\";\",\"\",ex1.E2R1$freq)) ex1.E2R1 #>     ch freq #> 1 0001    1 #> 2 0010    1 #> 3 1010    1 #> 4 1100    2 # convert this to 'individual' format ( ex1.R2I1 <- capHistConvert(ex1.E2R1,freq=\"freq\",in.type=\"RMark\") ) #>   event1 event2 event3 event4 #> 1      0      0      0      1 #> 2      0      0      1      0 #> 3      1      0      1      0 #> 4      1      1      0      0 #> 5      1      1      0      0 ( ex1.R2I1a <- capHistConvert(ex1.E2R1,freq=\"freq\",in.type=\"RMark\",include.id=TRUE) ) #>   id event1 event2 event3 event4 #> 1  1      0      0      0      1 #> 2  2      0      0      1      0 #> 3  3      1      0      1      0 #> 4  4      1      1      0      0 #> 5  5      1      1      0      0 # convert this to 'frequency' format ( ex1.R2F1 <- capHistConvert(ex1.E2R1,freq=\"freq\",in.type=\"RMark\",out.type=\"frequency\") ) #>   event1 event2 event3 event4 freq #> 1      0      0      0      1    1 #> 2      0      0      1      0    1 #> 3      1      0      1      0    1 #> 4      1      1      0      0    2 # convert this to 'MARK' format ( ex1.R2M1 <- capHistConvert(ex1.E2R1,freq=\"freq\",in.type=\"RMark\",out.type=\"MARK\") ) #>     ch freq #> 1 0001   1; #> 2 0010   1; #> 3 1010   1; #> 4 1100   2; # convert this to 'event' format ( ex1.R2E1 <- capHistConvert(ex1.E2R1,freq=\"freq\",in.type=\"RMark\",out.type=\"event\") ) #>   id  event #> 1  3 event1 #> 2  4 event1 #> 3  5 event1 #> 4  4 event2 #> 5  5 event2 #> 6  2 event3 #> 7  3 event3 #> 8  1 event4   ######################################################################## ## A small example using character ids ( ex2 <- data.frame(fish=c(\"id17\",\"id18\",\"id21\",\"id17\",\"id21\",\"id18\",\"id19\",\"id20\"),                     yr=c(1987,1987,1987,1988,1988,1989,1989,1990)) ) #>   fish   yr #> 1 id17 1987 #> 2 id18 1987 #> 3 id21 1987 #> 4 id17 1988 #> 5 id21 1988 #> 6 id18 1989 #> 7 id19 1989 #> 8 id20 1990 # convert to 'individual' format ( ex2.E2I <- capHistConvert(ex2,id=\"fish\",in.type=\"event\") ) #>   fish 1987 1988 1989 1990 #> 1 id17    1    1    0    0 #> 2 id18    1    0    1    0 #> 3 id19    0    0    1    0 #> 4 id20    0    0    0    1 #> 5 id21    1    1    0    0 # convert to 'frequency' format ( ex2.E2F <- capHistConvert(ex2,id=\"fish\",in.type=\"event\",out.type=\"frequency\") ) #>   1987 1988 1989 1990 freq #> 1    0    0    0    1    1 #> 2    0    0    1    0    1 #> 3    1    0    1    0    1 #> 4    1    1    0    0    2 # convert to 'MARK' format ( ex2.E2M <- capHistConvert(ex2,id=\"fish\",in.type=\"event\",out.type=\"MARK\") ) #>     ch freq #> 1 0001   1; #> 2 0010   1; #> 3 1010   1; #> 4 1100   2; # convert to 'RMark' format ( ex2.E2R <- capHistConvert(ex2,id=\"fish\",in.type=\"event\",out.type=\"RMark\") ) #>   fish   ch #> 1 id17 1100 #> 2 id18 1010 #> 3 id19 0010 #> 4 id20 0001 #> 5 id21 1100  ## convert converted 'individual' format ... # to 'frequency' format ( ex2.I2F <- capHistConvert(ex2.E2I,id=\"fish\",in.type=\"individual\",out.type=\"frequency\") ) #>   1987 1988 1989 1990 freq #> 1    0    0    0    1    1 #> 2    0    0    1    0    1 #> 3    1    0    1    0    1 #> 4    1    1    0    0    2 # to 'MARK' format ( ex2.I2M <- capHistConvert(ex2.E2I,id=\"fish\",in.type=\"individual\",out.type=\"MARK\") ) #>     ch freq #> 1 0001   1; #> 2 0010   1; #> 3 1010   1; #> 4 1100   2; # to 'RMark' format ( ex2.I2R <- capHistConvert(ex2.E2I,id=\"fish\",in.type=\"individual\",out.type=\"RMark\") ) #>   fish   ch #> 1 id17 1100 #> 2 id18 1010 #> 3 id19 0010 #> 4 id20 0001 #> 5 id21 1100 # to 'event' format ( ex2.I2E <- capHistConvert(ex2.E2I,id=\"fish\",in.type=\"individual\",out.type=\"event\") ) #>   fish event #> 1 id17  1987 #> 2 id18  1987 #> 3 id21  1987 #> 4 id17  1988 #> 5 id21  1988 #> 6 id18  1989 #> 7 id19  1989 #> 8 id20  1990  ## demo use of var.lbls ( ex2.E2Ia <- capHistConvert(ex2,id=\"fish\",in.type=\"event\",var.lbls.pre=\"Sample\") ) #>   fish 1987 1988 1989 1990 #> 1 id17    1    1    0    0 #> 2 id18    1    0    1    0 #> 3 id19    0    0    1    0 #> 4 id20    0    0    0    1 #> 5 id21    1    1    0    0 ( ex2.E2Ib <- capHistConvert(ex2,id=\"fish\",in.type=\"event\",               var.lbls=c(\"first\",\"second\",\"third\",\"fourth\")) ) #>   fish first second third fourth #> 1 id17     1      1     0      0 #> 2 id18     1      0     1      0 #> 3 id19     0      0     1      0 #> 4 id20     0      0     0      1 #> 5 id21     1      1     0      0  ## demo use of event.ord ( ex2.I2Ea <- capHistConvert(ex2.E2Ib,id=\"fish\",in.type=\"individual\",out.type=\"event\") ) #>   fish  event #> 1 id17  first #> 2 id18  first #> 3 id21  first #> 4 id17 second #> 5 id21 second #> 6 id18  third #> 7 id19  third #> 8 id20 fourth ( ex2.E2Ibad <- capHistConvert(ex2.I2Ea,id=\"fish\",in.type=\"event\") ) #>   fish first fourth second third #> 1 id17     1      0      1     0 #> 2 id18     1      0      0     1 #> 3 id19     0      0      0     1 #> 4 id20     0      1      0     0 #> 5 id21     1      0      1     0 ( ex2.E2Igood <- capHistConvert(ex2.I2Ea,id=\"fish\",in.type=\"event\",                  event.ord=c(\"first\",\"second\",\"third\",\"fourth\")) ) #>   fish first second third fourth #> 1 id17     1      1     0      0 #> 2 id18     1      0     1      0 #> 3 id19     0      0     1      0 #> 4 id20     0      0     0      1 #> 5 id21     1      1     0      0  ## ONLY RUN IN INTERACTIVE MODE if (interactive()) {  ######################################################################## ## A larger example of 'frequency' format (data from Rcapture package) data(bunting,package=\"Rcapture\") head(bunting) # convert to 'individual' format bun.F2I <- capHistConvert(bunting,in.type=\"frequency\",freq=\"freq\") head(bun.F2I) # convert to 'MARK' format bun.F2M <- capHistConvert(bunting,id=\"id\",in.type=\"frequency\",freq=\"freq\",out.type=\"MARK\") head(bun.F2M) # convert converted 'individual' back to 'MARK' format bun.I2M <- capHistConvert(bun.F2I,id=\"id\",in.type=\"individual\",out.type=\"MARK\") head(bun.I2M) # convert converted 'individual' back to 'frequency' format bun.I2F <- capHistConvert(bun.F2I,id=\"id\",in.type=\"individual\",            out.type=\"frequency\",var.lbls.pre=\"Sample\") head(bun.I2F)   ######################################################################## ## A larger example of 'marked' or 'RMark' format, but with a covariate ##   and when the covariate is removed there is no frequency or individual ##   fish identifier. data(dipper,package=\"marked\") head(dipper) # isolate males and females dipperF <- subset(dipper,sex==\"Female\") dipperM <- subset(dipper,sex==\"Male\") # convert females to 'individual' format dipF.R2I <- capHistConvert(dipperF,cols2ignore=\"sex\",in.type=\"RMark\") head(dipF.R2I) # convert males to 'individual' format dipM.R2I <- capHistConvert(dipperM,cols2ignore=\"sex\",in.type=\"RMark\") head(dipM.R2I) # add sex variable to each data.frame and then combine dipF.R2I$sex <- \"Female\" dipM.R2I$sex <- \"Male\" dip.R2I <- rbind(dipF.R2I,dipM.R2I) head(dip.R2I) tail(dip.R2I)  } # end interactive   ## An example of problem with unused levels ## Create a set of test data with several groups ( df <- data.frame(fish=c(\"id17\",\"id18\",\"id21\",\"id17\",\"id21\",\"id18\",\"id19\",\"id20\",\"id17\"),                    group=c(\"B1\",\"B1\",\"B1\",\"B2\",\"B2\",\"B3\",\"B4\",\"C1\",\"C1\")) ) #>   fish group #> 1 id17    B1 #> 2 id18    B1 #> 3 id21    B1 #> 4 id17    B2 #> 5 id21    B2 #> 6 id18    B3 #> 7 id19    B4 #> 8 id20    C1 #> 9 id17    C1 #  Let's assume the user wants to subset the data from the \"B\" group ( df1 <- subset(df,group %in% c(\"B1\",\"B2\",\"B3\",\"B4\")) ) #>   fish group #> 1 id17    B1 #> 2 id18    B1 #> 3 id21    B1 #> 4 id17    B2 #> 5 id21    B2 #> 6 id18    B3 #> 7 id19    B4 #  Looks like capHistConvert() is still using the unused factor #  level from group C capHistConvert(df1,id=\"fish\",in.type=\"event\") #>   fish B1 B2 B3 B4 #> 1 id17  1  1  0  0 #> 2 id18  1  0  1  0 #> 3 id19  0  0  0  1 #> 4 id21  1  1  0  0 # use droplevels() to remove the unused groups and no problem df1 <- droplevels(df1) capHistConvert(df1,id=\"fish\",in.type=\"event\") #>   fish B1 B2 B3 B4 #> 1 id17  1  1  0  0 #> 2 id18  1  0  1  0 #> 3 id19  0  0  0  1 #> 4 id21  1  1  0  0"},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistSum.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize capture histories in individual fish format. — capHistSum","title":"Summarize capture histories in individual fish format. — capHistSum","text":"Use summarize capture history data file “individual” fish format (see capHistConvert discussion data file format types). Summarized capture history results may used Lincoln-Petersen, Schnabel, Schumacher-Eschmeyer, Jolly-Seber methods estimating population abundance (see mrClosed mrOpen).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistSum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize capture histories in individual fish format. — capHistSum","text":"","code":"capHistSum(df, cols2use = NULL, cols2ignore = NULL)  is.CapHist(x)  # S3 method for CapHist plot(x, what = c(\"u\", \"f\"), pch = 19, cex.pch = 0.7, lwd = 1, ...)"},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistSum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize capture histories in individual fish format. — capHistSum","text":"df data.frame contains capture histories (, perhaps, information) “individual” fish format. See details. cols2use string numeric vector indicates columns df contain capture histories. Negative numeric values use columns. use cols2use col2ignore. See details. cols2ignore string numeric vector indicates columns df contain capture histories ignored. use cols2use col2ignore. x object capHistSum. string indicates type diagnostic plot construct plot. See details. pch numeric indicates plotting character diagnostic plot. cex.pch numeric indicates character expansion value plotting characters diagnostic plot. default “slightly smaller” (.e., cex.pch=0.7). lwd numeric indicates line width diagnostic plot. ... Optional arguments send plot.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistSum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize capture histories in individual fish format. — capHistSum","text":"capture history data file represents two samples, list following two components returned.  caphist vector summarizing frequency fish capture history. sum data.frame contains number marked fish first sample (M), number captured fish second sample (n), number recaptured (.e. previously marked) fish second sample (m). capture history data file represents two samples, list following five components returned  caphist vector summarizing frequency fish capture history. sum data frame contains number captured fish ith sample (n), number recaptured (.e. previously marked) fish ith sample (m), number marked fish returned population following ith sample (R; equal n function currently handle mortalities); number marked fish population prior ith sample (M); number fish first seen ith sample (u); number fish last seen ith sample (v); number fish seen times (f). methodB.top matrix contains top Method B table used Jolly-Seber method (.e., contingency table capture sample (columns) last seen sample (rows)). methodB.bot data.frame contains bottom Method B table used Jolly-Seber method (.e., number marked fish sample (m), number unmarked fish sample (u), total number fish sample (n), number marked fish returned population following sample (R). m.array matrix contains -called “m-array”. first column contains number fish captured ith event. columns labeled “cX” prefix show number fish originally captured ith row captured Xth event. last column shows number fish originally captured ith row never recaptured.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistSum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize capture histories in individual fish format. — capHistSum","text":"function requires capture history data file “individual” fish format. See capHistConvert description () formats methods convert formats “individual” fish format. addition, function requires capture history portion data file. Thus, df contains columns non-capture history information (e.g., fish ID, length, location, etc.) use cols2use= identify columns contain capture history information. Columns use can identified listing column numbers (e.g., columns 2 7 included cols2use=2:7). many instances may easier identify columns exclude can done preceding column number negative sign (e.g., columns 1 3 excluded cols2use=-(1:3)). object returned function can used directly mrClosed mrOpen. See examples functionality help pages functions. plot function can used construct two diagnostic plots described Baillargeon Rivest (2007). =\"f\" plot plot log number fish seen times divided choose(t,) . =\"u\" plot plot log number fish seen first time event . Baillargeon Rivest (2007) provide table can used diagnosed types heterogeneities capture probabilities plots.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistSum.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Summarize capture histories in individual fish format. — capHistSum","text":"function assumes unmarked captured fish marked returned population (.e., losses time marking allowed).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistSum.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Summarize capture histories in individual fish format. — capHistSum","text":"9-Abundance Capture-Recapture Data.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistSum.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarize capture histories in individual fish format. — capHistSum","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Baillargeon, S. Rivest, L.-P. (2007). Rcapture: Loglinear models capture-recapture R. Journal Statistical Software, 19(5):1-31.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistSum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize capture histories in individual fish format. — capHistSum","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/capHistSum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize capture histories in individual fish format. — capHistSum","text":"","code":"# data.frame with IDs in the first column head(PikeNYPartial1) #>     id first second third fourth #> 1 2001     1      0     0      0 #> 2 2002     1      0     0      0 #> 3 2003     1      0     0      0 #> 4 2004     1      0     0      0 #> 5 2005     1      0     0      0 #> 6 2006     1      0     0      0  # Three ways to ignore first column of ID numbers ( ch1 <- capHistSum(PikeNYPartial1,cols2use=-1) ) #> $caphist #>  #> 0001 0010 0011 0100 0101 0110 1000 1001 1010 1100  #>    5    8    2   12    1    2   21    1    2    3  #>  #> $sum #>    n m  R  M  u  v  f #> 1 27 0 27  0 27 21 46 #> 2 18 3 18 27 18 15 11 #> 3 14 4 14 42 10 14  0 #> 4  9 4  0 52  5  9  0 #>  #> $methodB.top #>     i=1 i=2 i=3 i=4 #> j=1  NA   3   2   1 #> j=2  NA  NA   2   1 #> j=3  NA  NA  NA   2 #> j=4  NA  NA  NA  NA #>  #> $methodB.bot #>   i=1 i=2 i=3 i=4 #> m   0   3   4   4 #> u  27  15  10   5 #> n  27  18  14   9 #> R  27  18  14   0 #>  #> $m.array #>     ni c2 c3 c4 not recapt #> i=1 27  3  2  1         21 #> i=2 18 NA  2  1         15 #> i=3 14 NA NA  2         12 #> i=4  9 NA NA NA          9 #>  #> attr(,\"class\") #> [1] \"CapHist\" ( ch1 <- capHistSum(PikeNYPartial1,cols2ignore=1) ) #> $caphist #>  #> 0001 0010 0011 0100 0101 0110 1000 1001 1010 1100  #>    5    8    2   12    1    2   21    1    2    3  #>  #> $sum #>    n m  R  M  u  v  f #> 1 27 0 27  0 27 21 46 #> 2 18 3 18 27 18 15 11 #> 3 14 4 14 42 10 14  0 #> 4  9 4  0 52  5  9  0 #>  #> $methodB.top #>     i=1 i=2 i=3 i=4 #> j=1  NA   3   2   1 #> j=2  NA  NA   2   1 #> j=3  NA  NA  NA   2 #> j=4  NA  NA  NA  NA #>  #> $methodB.bot #>   i=1 i=2 i=3 i=4 #> m   0   3   4   4 #> u  27  15  10   5 #> n  27  18  14   9 #> R  27  18  14   0 #>  #> $m.array #>     ni c2 c3 c4 not recapt #> i=1 27  3  2  1         21 #> i=2 18 NA  2  1         15 #> i=3 14 NA NA  2         12 #> i=4  9 NA NA NA          9 #>  #> attr(,\"class\") #> [1] \"CapHist\" ( ch1 <- capHistSum(PikeNYPartial1,cols2ignore=\"id\") ) #> $caphist #>  #> 0001 0010 0011 0100 0101 0110 1000 1001 1010 1100  #>    5    8    2   12    1    2   21    1    2    3  #>  #> $sum #>    n m  R  M  u  v  f #> 1 27 0 27  0 27 21 46 #> 2 18 3 18 27 18 15 11 #> 3 14 4 14 42 10 14  0 #> 4  9 4  0 52  5  9  0 #>  #> $methodB.top #>     i=1 i=2 i=3 i=4 #> j=1  NA   3   2   1 #> j=2  NA  NA   2   1 #> j=3  NA  NA  NA   2 #> j=4  NA  NA  NA  NA #>  #> $methodB.bot #>   i=1 i=2 i=3 i=4 #> m   0   3   4   4 #> u  27  15  10   5 #> n  27  18  14   9 #> R  27  18  14   0 #>  #> $m.array #>     ni c2 c3 c4 not recapt #> i=1 27  3  2  1         21 #> i=2 18 NA  2  1         15 #> i=3 14 NA NA  2         12 #> i=4  9 NA NA NA          9 #>  #> attr(,\"class\") #> [1] \"CapHist\"  # diagnostic plots plot(ch1)  plot(ch1,what=\"f\")  plot(ch1,what=\"u\")   # An examle with only two sample events (for demonstration only) ( ch2 <- capHistSum(PikeNYPartial1,cols2use=-c(1,4:5)) ) #> $caphist #>  #> 00 01 10 11  #> 15 15 24  3  #>  #> $sum #>    M  n m #> 1 27 18 3 #>  #> attr(,\"class\") #> [1] \"CapHist\" ( ch2 <- capHistSum(PikeNYPartial1,cols2use=2:3) ) #> $caphist #>  #> 00 01 10 11  #> 15 15 24  3  #>  #> $sum #>    M  n m #> 1 27 18 3 #>  #> attr(,\"class\") #> [1] \"CapHist\" ( ch2 <- capHistSum(PikeNYPartial1,cols2ignore=c(1,4:5)) ) #> $caphist #>  #> 00 01 10 11  #> 15 15 24  3  #>  #> $sum #>    M  n m #> 1 27 18 3 #>  #> attr(,\"class\") #> [1] \"CapHist\""},{"path":"https://fishr-core-team.github.io/FSA/reference/catchCurve.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality estimates from the descending limb of a catch curve. — catchCurve","title":"Mortality estimates from the descending limb of a catch curve. — catchCurve","text":"Fits linear model user-defined descending limb catch curve. Method functions extract estimates instantaneous (Z) total annual () mortality rates associated standard errors confidence intervals. plot method highlights descending limb, shows linear model descending limb, , optionally, prints estimated Z .","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/catchCurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality estimates from the descending limb of a catch curve. — catchCurve","text":"","code":"catchCurve(x, ...)  # S3 method for default catchCurve(   x,   catch,   ages2use = age,   weighted = FALSE,   negWeightReplace = 0,   ... )  # S3 method for formula catchCurve(   x,   data,   ages2use = age,   weighted = FALSE,   negWeightReplace = 0,   ... )  # S3 method for catchCurve summary(object, parm = c(\"both\", \"all\", \"Z\", \"A\", \"lm\"), ...)  # S3 method for catchCurve coef(object, parm = c(\"all\", \"both\", \"Z\", \"A\", \"lm\"), ...)  # S3 method for catchCurve anova(object, ...)  # S3 method for catchCurve confint(   object,   parm = c(\"all\", \"both\", \"Z\", \"A\", \"lm\"),   level = conf.level,   conf.level = 0.95,   ... )  # S3 method for catchCurve rSquared(object, digits = getOption(\"digits\"), percent = FALSE, ...)  # S3 method for catchCurve plot(   x,   pos.est = \"topright\",   cex.est = 0.95,   round.est = c(3, 1),   ylab = \"log(Catch)\",   xlab = \"Age\",   ylim = NULL,   col.pt = \"gray30\",   col.mdl = \"black\",   lwd = 2,   lty = 1,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/catchCurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mortality estimates from the descending limb of a catch curve. — catchCurve","text":"x numerical vector assigned ages catch curve formula form catch~age used catchCurve. object saved catchCurve (.e., class catchCurve) used methods. ... Additional arguments methods. catch numerical vector catches CPUEs ages catch curve. used x formula. ages2use numerical vector ages define descending limb catch curve. weighted logical indicates whether weighted regression used. See details. negWeightReplace single non-negative numeric replace negative weights (defaults 0). used weighted=TRUE. See details. data data.frame variables x formula can found. used x formula. object object saved catchCurve call (.e., class catchCurve). parm numeric string (parameter names) vector specifies parameters given confidence intervals. parm=\"lm\" confidence intervals underlying linear model returned. level conf.level. Used compatibility generic confint function. conf.level number representing level confidence use constructing confidence intervals. digits number digits round rSquared result . percent logical indicates rSquared result returned percentage (=TRUE) proportion (=FALSE; default). pos.est string identify place estimated mortality rates plot. Can set one \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\", \"top\", \"topright\", \"right\" \"center\" positioning estimated mortality rates plot. Typically \"bottomleft\" (DEFAULT) \"topright\" “---way” placements. Set pos.est NULL remove estimated mortality rates plot. cex.est single numeric character expansion value estimated mortality rates plot. round.est numeric indicates number decimal place Z (first value) (second value) rounded. one value used Z . ylab label y-axis (\"log(Catch)\" default). xlab label x-axis (\"Age\" default). ylim numeric limits y-axis. NULL default minimum 0 lowest negative log catch maximum maximum log catch. single value maximum y-axis. two values minimum maximum values y-axis. col.pt string indicates color plotted points. col.mdl string indicates color fitted line. lwd numeric indicates line width fitted line. lty numeric indicates type line used fitted line.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/catchCurve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mortality estimates from the descending limb of a catch curve. — catchCurve","text":"list contains following items:  age original vector assigned ages. catch original vector observed catches CPUEs. age.e vector assigned ages catch curve fit. log.catch.e vector log catches CPUEs catch curve fit. W vector weights used catch curve fit. NULL unless weighted=TRUE. lm lm object fit ages log catches CPUEs descending limb (.e., age.e log.catch.e).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/catchCurve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality estimates from the descending limb of a catch curve. — catchCurve","text":"default use ages age vector. appropriate age catch vectors contain ages catches descending limb catch curve. Use ages2use isolate catch ages descending limb. weighted=TRUE weighted regression used weights log(number) age predicted unweighted regression log(number) age (proposed Maceina Bettoli (1998)). negative weight computed changed value negWeightReplace warning issued.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/catchCurve.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Mortality estimates from the descending limb of a catch curve. — catchCurve","text":"Tested results catch curve, unweighted weighted, results Miranda Bettoli (2007). Results Z SE Z matched perfectly. Tested unweighted results results agesurv fishmethods using rockbass data.frame fishmethods. Results Z SE Z matched perfectly.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/catchCurve.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Mortality estimates from the descending limb of a catch curve. — catchCurve","text":"11-Mortality.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/catchCurve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mortality estimates from the descending limb of a catch curve. — catchCurve","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Maceina, M.J., P.W. Bettoli. 1998. Variation Largemouth Bass recruitment four mainstream impoundments Tennessee River. North American Journal Fisheries Management 18:998-1003. Ricker, W.E. 1975. Computation interpretation biological statistics fish populations. Technical Report Bulletin 191, Bulletin Fisheries Research Board Canada. [(?) http://www.dfo-mpo.gc.ca/Library/1485.pdf.]","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/catchCurve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mortality estimates from the descending limb of a catch curve. — catchCurve","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/catchCurve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mortality estimates from the descending limb of a catch curve. — catchCurve","text":"","code":"plot(catch~age,data=BrookTroutTH,pch=19)   ## demonstration of formula notation cc1 <- catchCurve(catch~age,data=BrookTroutTH,ages2use=2:6) summary(cc1) #>    Estimate Std. Error  t value   Pr(>|t|) #> Z  0.659987   0.136741 4.826549 0.01695159 #> A 48.314197         NA       NA         NA cbind(Est=coef(cc1),confint(cc1)) #>         Est    95% LCI   95% UCI #> Z  0.659987  0.2248162  1.095158 #> A 48.314197 20.1337012 66.551321 rSquared(cc1) #> [1] 0.8859124 plot(cc1) summary(cc1,parm=\"Z\") #>   Estimate Std. Error  t value   Pr(>|t|) #> Z 0.659987   0.136741 4.826549 0.01695159 cbind(Est=coef(cc1,parm=\"Z\"),confint(cc1,parm=\"Z\")) #>        Est   95% LCI  95% UCI #> Z 0.659987 0.2248162 1.095158  ## demonstration of excluding ages2use cc2 <- catchCurve(catch~age,data=BrookTroutTH,ages2use=-c(0,1)) summary(cc2) #>    Estimate Std. Error  t value   Pr(>|t|) #> Z  0.659987   0.136741 4.826549 0.01695159 #> A 48.314197         NA       NA         NA plot(cc2)   ## demonstration of using weights cc3 <- catchCurve(catch~age,data=BrookTroutTH,ages2use=2:6,weighted=TRUE) summary(cc3) #>     Estimate Std. Error t value   Pr(>|t|) #> Z  0.6430183  0.1417433  4.5365 0.02004993 #> A 47.4296703         NA      NA         NA plot(cc3)   ## demonstration of returning the linear model results summary(cc3,parm=\"lm\") #>  #> Call: #> stats::lm(formula = log.catch.e ~ age.e, weights = W, na.action = stats::na.exclude) #>  #> Weighted Residuals: #>         1         2         3         4         5  #> -0.008845 -0.551857  1.155519 -0.513606 -0.103196  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)    #> (Intercept)   6.0086     0.5475  10.974  0.00162 ** #> age.e        -0.6430     0.1417  -4.536  0.02005 *  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.7988 on 3 degrees of freedom #> Multiple R-squared:  0.8728,\tAdjusted R-squared:  0.8304  #> F-statistic: 20.58 on 1 and 3 DF,  p-value: 0.02005 #>  cbind(Est=coef(cc3,parm=\"lm\"),confint(cc3,parm=\"lm\")) #>                    Est   95% LCI   95% UCI #> (Intercept)  6.0085938  4.266116  7.751072 #> age.e       -0.6430183 -1.094109 -0.191928  ## demonstration of ability to work with missing age classes df <- data.frame(age=c(  2, 3, 4, 5, 7, 9,12),                  ct= c(100,92,83,71,56,35, 1)) cc4 <- catchCurve(ct~age,data=df,ages2use=4:12) #> Warning: Some 'ages2use' not in observed ages. summary(cc4) #>     Estimate Std. Error  t value   Pr(>|t|) #> Z  0.5139824  0.1495532 3.436786 0.04133277 #> A 40.1891060         NA       NA         NA plot(cc4)   ## demonstration of ability to work with missing age classes ## evein if catches are recorded as NAs df <- data.frame(age=c(  2, 3, 4, 5, 6, 7, 8, 9,10,11,12),                  ct= c(100,92,83,71,NA,56,NA,35,NA,NA, 1)) cc5 <- catchCurve(ct~age,data=df,ages2use=4:12) summary(cc5) #>     Estimate Std. Error  t value   Pr(>|t|) #> Z  0.5139824  0.1495532 3.436786 0.04133277 #> A 40.1891060         NA       NA         NA plot(cc5)"},{"path":"https://fishr-core-team.github.io/FSA/reference/chapmanRobson.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes Chapman-Robson estimates of S and Z. — chapmanRobson","title":"Computes Chapman-Robson estimates of S and Z. — chapmanRobson","text":"Computes Chapman-Robson estimates annual survival rate (S) instantaneous mortality rate (Z) catch--age data descending limb catch-curve. Method functions extract estimates associated standard errors confidence intervals. plot method highlights descending-limb, shows linear model descending limb, , optionally, prints estimated Z .","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/chapmanRobson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes Chapman-Robson estimates of S and Z. — chapmanRobson","text":"","code":"chapmanRobson(x, ...)  # S3 method for default chapmanRobson(   x,   catch,   ages2use = age,   zmethod = c(\"Smithetal\", \"Hoenigetal\", \"original\"),   ... )  # S3 method for formula chapmanRobson(   x,   data,   ages2use = age,   zmethod = c(\"Smithetal\", \"Hoenigetal\", \"original\"),   ... )  # S3 method for chapmanRobson summary(object, parm = c(\"all\", \"both\", \"Z\", \"S\"), verbose = FALSE, ...)  # S3 method for chapmanRobson coef(object, parm = c(\"all\", \"both\", \"Z\", \"S\"), ...)  # S3 method for chapmanRobson confint(   object,   parm = c(\"all\", \"both\", \"S\", \"Z\"),   level = conf.level,   conf.level = 0.95,   ... )  # S3 method for chapmanRobson plot(   x,   pos.est = \"topright\",   cex.est = 0.95,   round.est = c(3, 1),   ylab = \"Catch\",   xlab = \"Age\",   ylim = NULL,   col.pt = \"gray30\",   axis.age = c(\"both\", \"age\", \"recoded age\"),   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/chapmanRobson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes Chapman-Robson estimates of S and Z. — chapmanRobson","text":"x numerical vector assigned ages catch curve formula form catch~age used chapmanRobson. object saved chapmanRobson (.e., class chapmanRobson) used methods. ... Additional arguments methods. catch numerical vector catches CPUEs ages catch curve. used x formula. ages2use numerical vector ages define descending limb catch curve. zmethod string indicates method use estimating Z. See details. data data frame variables x formula can found. used x formula. object object saved chapmanRobson call (.e., class chapmanRobson). parm numeric string (parameter names) vector specifies parameters given confidence intervals  missing, parameters considered. verbose logical indicates whether method return just estimate (FALSE; default) verbose statement. level conf.level. Used compatibility generic confint function. conf.level number representing level confidence use constructing confidence intervals. pos.est string identify place estimated mortality rates plot. Can set one \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\", \"top\", \"topright\", \"right\" \"center\" positioning estimated mortality rates plot. Typically \"bottomleft\" (DEFAULT) \"topright\" “---way” placements. Set pos.est NULL remove estimated mortality rates plot. cex.est single numeric character expansion value estimated mortality rates plot. round.est numeric indicates number decimal place Z (first value) S (second value) rounded. one value used Z S. ylab label y-axis (\"Catch\" default). xlab label x-axis (\"Age\" default). ylim numeric limits y-axis. NULL default 0 lowest catch maximum maximum catch. single value maximum y-axis. two values minimum maximum values y-axis. col.pt string indicates color plotted points. axis.age string indicates type x-axis display. age display original ages, recoded age display recoded ages, (DEFAULT) displays original ages main axis recoded ages secondary axis.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/chapmanRobson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes Chapman-Robson estimates of S and Z. — chapmanRobson","text":"list following items:  age original vector assigned ages. catch original vector observed catches CPUEs. age.e vector assigned ages used estimate mortalities. catch.e vector catches CPUEs used estimate mortalities. age.r vector recoded ages used estimate mortalities. See references. n numeric holding intermediate calculation n. See references. T numeric holding intermediate calculation T. See references. est 2x2 matrix contains estimates standard errors S Z.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/chapmanRobson.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes Chapman-Robson estimates of S and Z. — chapmanRobson","text":"default use ages age vector. appropriate age catch vectors contain ages catches descending limb catch curve. Use ages2use isolate catch ages descending limb. Chapman-Robson method provides estimate annual survival rate, annual mortality rate () determined 1-S. instantaneous mortality rate often computed -log(S). However, Hoenig et al. (1983) showed produced biased ()estimate Z provided correction. correction applied setting zmethod=\"Hoenigetal\". Smith et al. (2012) showed Hoenig et al. method corrected variance inflation factor. correction applied setting zmethod=\"Smithetal\" (default behavior). Choose zmethod=\"original\" use original estimates Z SE provided Chapman Robson.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/chapmanRobson.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Computes Chapman-Robson estimates of S and Z. — chapmanRobson","text":"Tested results chapmanRobson results Miranda Bettoli (2007). point estimates S matched perfectly SE S Miranda Bettoli used rounded estimate S calculation SE S chapmanRobson . Tested results results agesurv fishmethods using rockbass data.frame fishmethods. Results Z SE Z matched perfectly non-bias-corrected results. estimate Z, SE Z, matched bias-corrected (following Smith et al. (2012)) results. FSA uses equation 2 Smith et al. (2012) whereas fishmethods appears use equation 5 source estimate SE Z.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/chapmanRobson.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Computes Chapman-Robson estimates of S and Z. — chapmanRobson","text":"11-Mortality.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/chapmanRobson.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes Chapman-Robson estimates of S and Z. — chapmanRobson","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Chapman, D.G. D.S. Robson. 1960. analysis catch curve. Biometrics. 16:354-368. Hoenig, J.M. W.D. Lawing, N.. Hoenig. 1983. Using mean age, mean length median length data estimate total mortality rate. International Council Exploration Sea, CM 1983/D:23, Copenhagen. Ricker, W.E. 1975. Computation interpretation biological statistics fish populations. Technical Report Bulletin 191, Bulletin Fisheries Research Board Canada. [(?) http://www.dfo-mpo.gc.ca/Library/1485.pdf.] Robson, D.S. D.G. Chapman. 1961. Catch curves mortality rates. Transactions American Fisheries Society. 90:181-189. Smith, M.W., .Y. , C. Wor, G. Ralph, K.H. Pollock, J.M. Hoenig. 2012. Recommendations catch-curve analysis. North American Journal Fisheries Management. 32:956-967.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/chapmanRobson.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes Chapman-Robson estimates of S and Z. — chapmanRobson","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/chapmanRobson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes Chapman-Robson estimates of S and Z. — chapmanRobson","text":"","code":"plot(catch~age,data=BrookTroutTH,pch=19)   ## demonstration of formula notation cr1 <- chapmanRobson(catch~age,data=BrookTroutTH,ages2use=2:6) summary(cr1) #>     Estimate Std. Error #> S 49.4600432  2.3260749 #> Z  0.7018264  0.1153428 summary(cr1,verbose=TRUE) #> Intermediate statistics: n=235; T=229 #>     Estimate Std. Error #> S 49.4600432  2.3260749 #> Z  0.7018264  0.1153428 cbind(Est=coef(cr1),confint(cr1)) #>          Est    95% LCI    95% UCI #> S 49.4600432 44.9010202 54.0190662 #> Z  0.7018264  0.4757586  0.9278941 plot(cr1)  plot(cr1,axis.age=\"age\")  plot(cr1,axis.age=\"recoded age\")  summary(cr1,parm=\"Z\") #>    Estimate Std. Error #> Z 0.7018264  0.1153428 cbind(Est=coef(cr1,parm=\"Z\"),confint(cr1,parm=\"Z\")) #>         Est   95% LCI   95% UCI #> Z 0.7018264 0.4757586 0.9278941  ## demonstration of excluding ages2use cr2 <- chapmanRobson(catch~age,data=BrookTroutTH,ages2use=-c(0,1)) summary(cr2) #>     Estimate Std. Error #> S 49.4600432  2.3260749 #> Z  0.7018264  0.1153428 plot(cr2)   ## demonstration of ability to work with missing age classes age <- c(  2, 3, 4, 5, 7, 9,12) ct  <- c(100,92,83,71,56,35, 1) cr3 <- chapmanRobson(age,ct,4:12) #> Warning: Some 'ages2use' not in observed ages. summary(cr3) #>     Estimate Std. Error #> S 63.2683658  1.8679976 #> Z  0.4569234  0.1465991 plot(cr3)"},{"path":"https://fishr-core-team.github.io/FSA/reference/col2rgbt.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts an R color to RGB (red/green/blue) including a transparency (alpha channel). — col2rgbt","title":"Converts an R color to RGB (red/green/blue) including a transparency (alpha channel). — col2rgbt","text":"Converts R color RGB (red/green/blue) including transparency (alpha channel). Similar col2rgb except transparency (alpha channel) can included.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/col2rgbt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts an R color to RGB (red/green/blue) including a transparency (alpha channel). — col2rgbt","text":"","code":"col2rgbt(col, transp = 1)"},{"path":"https://fishr-core-team.github.io/FSA/reference/col2rgbt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts an R color to RGB (red/green/blue) including a transparency (alpha channel). — col2rgbt","text":"col vector three kinds R color specifications (.e., either color name (listed colors()), hexadecimal string form \"#rrggbb\" \"#rrggbbaa\" (see rgb), positive integer meaning palette()[]. transp numeric vector indicates transparency level color. transparency values must greater 0. Transparency values greater 1 interpreted number points plotted top transparency lost , thus, transformed inverse transparency value provided.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/col2rgbt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts an R color to RGB (red/green/blue) including a transparency (alpha channel). — col2rgbt","text":"vector hexadecimal strings form \"#rrggbbaa\" returned rgb.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/col2rgbt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Converts an R color to RGB (red/green/blue) including a transparency (alpha channel). — col2rgbt","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/col2rgbt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts an R color to RGB (red/green/blue) including a transparency (alpha channel). — col2rgbt","text":"","code":"col2rgbt(\"black\") #> [1] \"#000000FF\" col2rgbt(\"black\",1/4) #> [1] \"#00000040\" clrs <- c(\"black\",\"blue\",\"red\",\"green\") col2rgbt(clrs) #> [1] \"#000000FF\" \"#0000FFFF\" \"#FF0000FF\" \"#00FF00FF\" col2rgbt(clrs,1/4) #> [1] \"#00000040\" \"#0000FF40\" \"#FF000040\" \"#00FF0040\" trans <- (1:4)/5 col2rgbt(clrs,trans) #> [1] \"#00000033\" \"#0000FF66\" \"#FF000099\" \"#00FF00CC\""},{"path":"https://fishr-core-team.github.io/FSA/reference/depletion.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the Leslie or DeLury population estimate from catch and effort data. — depletion","title":"Computes the Leslie or DeLury population estimate from catch and effort data. — depletion","text":"Computes Leslie DeLury estimates population size catchability coefficient paired catch effort data. Ricker modification may also used.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/depletion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the Leslie or DeLury population estimate from catch and effort data. — depletion","text":"","code":"depletion(   catch,   effort,   method = c(\"Leslie\", \"DeLury\", \"Delury\"),   Ricker.mod = FALSE )  # S3 method for depletion summary(object, parm = c(\"all\", \"both\", \"No\", \"q\", \"lm\"), verbose = FALSE, ...)  # S3 method for depletion coef(object, parm = c(\"all\", \"both\", \"No\", \"q\", \"lm\"), ...)  # S3 method for depletion confint(   object,   parm = c(\"all\", \"both\", \"No\", \"q\", \"lm\"),   level = conf.level,   conf.level = 0.95,   ... )  # S3 method for depletion anova(object, ...)  # S3 method for depletion rSquared(object, digits = getOption(\"digits\"), percent = FALSE, ...)  # S3 method for depletion plot(   x,   xlab = NULL,   ylab = NULL,   pch = 19,   col.pt = \"black\",   col.mdl = \"gray70\",   lwd = 1,   lty = 1,   pos.est = \"topright\",   cex.est = 0.95,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/depletion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the Leslie or DeLury population estimate from catch and effort data. — depletion","text":"catch numeric vector catches fish time. effort numeric vector efforts expended time. method single string indicates depletion method use Ricker.mod single logical indicates whether use modification proposed Ricker (=TRUE) (=FALSE, default). object object saved removal call (.e., class depletion). parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. verbose logical indicates whether reminder method used printed summary results. ... Additional arguments methods. level conf.level used compatibility generic confint function. conf.level single number represents level confidence use constructing confidence intervals. digits number digits round rSquared result . percent logical indicates rSquared result returned percentage (=TRUE) proportion (=FALSE; default). x object saved depletion call (.e., class depletion). xlab label x-axis. ylab label y-axis. pch numeric indicates type plotting character. col.pt string indicates color plotted points. col.mdl string indicates color fitted line. lwd numeric indicates line width fitted line. lty numeric indicates type line used fitted line. pos.est single string identify place estimated population estimate catchability plot. Can set one \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\", \"top\", \"topright\", \"right\" \"center\" positioning estimated mortality rates plot. Typically \"bottomleft\" (DEFAULT) \"topright\" “---way” placements. Set pos.est NULL remove estimated population size catchability coefficient plot. cex.est single numeric identifies character expansion value estimated population estimate catchability placed plot.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/depletion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the Leslie or DeLury population estimate from catch and effort data. — depletion","text":"list following items:  method string indicates whether \"Leslie\" \"DeLury\" model used. catch original vector catches. effort original vector efforts. cpe computed vector catch-per-unit-effort time. KorE computed vector cumulative catch (K; Leslie method) effort (E; DeLury method). lm lm object fit CPE K (Leslie method) log(CPE) E (DeLury method). est 2x2 matrix contains estimates standard errors q.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/depletion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes the Leslie or DeLury population estimate from catch and effort data. — depletion","text":"Leslie method, linear regression model catch-per-unit-effort cumulative catch prior sample fit. catchability coefficient (q) estimated negative slope initial population size () estimated dividing intercept catchability coefficient. Ricker.mod=TRUE cumulative catch modified cumulative catch prior sample plus half catch current sample. DeLury method, linear regression model log (catch-per-unit-effort) cumulative effort fit. catchability coefficient (q) estimated negative slope initial population size () estimated dividing intercept exponent e catchability coefficient. Ricker.mod=TRUE cumulative effort modified cumulative effort prior sample plus half effort current sample. Standard errors catchability population size estimates computed formulas page 298 (Leslie) 303 (DeLury) Seber (2002). Confidence intervals computed using standard large-sample normal distribution theory regression error df.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/depletion.html","id":"testing","dir":"Reference","previous_headings":"","what":"testing","title":"Computes the Leslie or DeLury population estimate from catch and effort data. — depletion","text":"Leslie method without Ricker modification DeLury method Ricker modification matches results deplet fishmethods darter (fishmethods), LobsterPEI BlueCrab FSAdata, SMBassLS N0 whole numbers, SE one decimal, q seven decimals, SE q least five decimals. Leslie method matches results Seber (2002) N0, q, CI Q CI N (far might Seber's result incorrect) lobster data q CI q CI (likely due lots rounding Seber 2002) Blue Crab data. Leslie DeLury methods match results Ricker (1975) Q CI (Ricker used different method compute CIs).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/depletion.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Computes the Leslie or DeLury population estimate from catch and effort data. — depletion","text":"10-Abundance Depletion Data.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/depletion.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes the Leslie or DeLury population estimate from catch and effort data. — depletion","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Ricker, W.E. 1975. Computation interpretation biological statistics fish populations. Technical Report Bulletin 191, Bulletin Fisheries Research Board Canada. [(?) http://www.dfo-mpo.gc.ca/Library/1485.pdf.] Seber, G..F. 2002. Estimation Animal Abundance. Edward Arnold, Second edition (reprinted).","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/depletion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes the Leslie or DeLury population estimate from catch and effort data. — depletion","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/depletion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the Leslie or DeLury population estimate from catch and effort data. — depletion","text":"","code":"## Leslie model examples # no Ricker modification l1 <- depletion(SMBassLS$catch,SMBassLS$effort,method=\"Leslie\") summary(l1) #>        Estimate    Std. Err. #> No 1.060296e+03 1.692676e+02 #> q  1.484403e-02 3.520491e-03 summary(l1,verbose=TRUE) #> The Leslie method was used. #>        Estimate    Std. Err. #> No 1.060296e+03 1.692676e+02 #> q  1.484403e-02 3.520491e-03 summary(l1,parm=\"No\") #>    Estimate Std. Err. #> No 1060.296  169.2676 rSquared(l1) #> [1] 0.6896648 rSquared(l1,digits=1,percent=TRUE) #> [1] 69 cbind(Est=coef(l1),confint(l1)) #>             Est      95% LCI      95% UCI #> No 1.060296e+03 6.699638e+02 1.450627e+03 #> q  1.484403e-02 6.725759e-03 2.296229e-02 cbind(Est=coef(l1,parm=\"No\"),confint(l1,parm=\"No\")) #>         Est  95% LCI  95% UCI #> No 1060.296 669.9638 1450.627 cbind(Est=coef(l1,parm=\"q\"),confint(l1,parm=\"q\")) #>          Est     95% LCI    95% UCI #> q 0.01484403 0.006725759 0.02296229 summary(l1,parm=\"lm\") #>  #> Call: #> stats::lm(formula = cpe ~ K) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.9373 -1.3879  0.3295  1.5023  2.9752  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 15.73906    1.51266  10.405 6.31e-06 *** #> K           -0.01484    0.00352  -4.216  0.00293 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 2.295 on 8 degrees of freedom #> Multiple R-squared:  0.6897,\tAdjusted R-squared:  0.6509  #> F-statistic: 17.78 on 1 and 8 DF,  p-value: 0.00293 #>  plot(l1)   # with Ricker modification l2 <- depletion(SMBassLS$catch,SMBassLS$effort,method=\"Leslie\",Ricker.mod=TRUE) summary(l2) #>        Estimate    Std. Err. #> No 1.077571e+03 1.778035e+02 #> q  1.525078e-02 3.911632e-03 cbind(Est=coef(l2),confint(l1)) #>             Est      95% LCI      95% UCI #> No 1.077571e+03 6.699638e+02 1.450627e+03 #> q  1.525078e-02 6.725759e-03 2.296229e-02 plot(l2)   ## DeLury model examples # no Ricker modification d1 <- depletion(SMBassLS$catch,SMBassLS$effort,method=\"DeLury\") summary(d1) #>        Estimate    Std. Err. #> No 1.098503e+03 1.916049e+02 #> q  1.319375e-02 3.585777e-03 summary(d1,parm=\"q\") #>     Estimate   Std. Err. #> q 0.01319375 0.003585777 summary(d1,verbose=TRUE) #> The DeLury method was used. #>        Estimate    Std. Err. #> No 1.098503e+03 1.916049e+02 #> q  1.319375e-02 3.585777e-03 rSquared(d1) #> [1] 0.6285719 cbind(Est=coef(d1),confint(d1)) #>             Est      95% LCI      95% UCI #> No 1.098503e+03 6.566616e+02 1.540345e+03 #> q  1.319375e-02 4.924937e-03 2.146257e-02 summary(d1,parm=\"lm\") #>  #> Call: #> stats::lm(formula = log(cpe) ~ E) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.29314 -0.21203  0.03796  0.16974  0.26238  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  2.673692   0.134000  19.953 4.15e-08 *** #> E           -0.013194   0.003586  -3.679  0.00622 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.228 on 8 degrees of freedom #> Multiple R-squared:  0.6286,\tAdjusted R-squared:  0.5821  #> F-statistic: 13.54 on 1 and 8 DF,  p-value: 0.006224 #>  plot(d1)   # with Ricker modification d2 <- depletion(SMBassLS$catch,SMBassLS$effort,method=\"DeLury\",Ricker.mod=TRUE) summary(d2) #>        Estimate    Std. Err. #> No 1.150420e+03 1.876083e+02 #> q  1.319375e-02 3.585777e-03 cbind(Est=coef(d2),confint(d2)) #>             Est      95% LCI      95% UCI #> No 1.150420e+03 7.177940e+02 1.583045e+03 #> q  1.319375e-02 4.924937e-03 2.146257e-02 cbind(Est=coef(d2,parm=\"q\"),confint(d2,parm=\"q\")) #>          Est     95% LCI    95% UCI #> q 0.01319375 0.004924937 0.02146257 plot(d2)"},{"path":"https://fishr-core-team.github.io/FSA/reference/dunnTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Dunn's Kruskal-Wallis Multiple Comparisons. — dunnTest","title":"Dunn's Kruskal-Wallis Multiple Comparisons. — dunnTest","text":"Performs Dunn's (1964) test multiple comparisons following significant Kruskal-Wallis test, possibly correction control experimentwise error rate. largely wrapper dunn.test function dunn.test. Please see cite package.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/dunnTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dunn's Kruskal-Wallis Multiple Comparisons. — dunnTest","text":"","code":"dunnTest(x, ...)  # S3 method for default dunnTest(   x,   g,   method = dunn.test::p.adjustment.methods[c(4, 2:3, 5:8, 1)],   two.sided = TRUE,   altp = two.sided,   ... )  # S3 method for formula dunnTest(   x,   data = NULL,   method = dunn.test::p.adjustment.methods[c(4, 2:3, 5:8, 1)],   two.sided = TRUE,   altp = two.sided,   ... )  # S3 method for dunnTest print(x, dunn.test.results = FALSE, ...)"},{"path":"https://fishr-core-team.github.io/FSA/reference/dunnTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dunn's Kruskal-Wallis Multiple Comparisons. — dunnTest","text":"x numeric vector data values formula form x~g. ... yet used. g factor vector (non-numeric) vector can coerced factor vector. method single string identifies method used control experimentwise error rate. See list methods p.adjustment.methods (documented dunn.test) dunn.test. two.sided single logical indicates whether two-sided p-value returned (TRUE; default) . See details. altp two.sided. Allows similar code dunn.test function dunn.test. two.sided maintained pre-dates altp. data data.frame minimally contains x g. dunn.test.results single logical indicates whether results printed dunn.test function dunn.test shown.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/dunnTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dunn's Kruskal-Wallis Multiple Comparisons. — dunnTest","text":"list three items -- method long name method used control experimentwise error rate, dtres strings printed dunn.test function dunn.test, res data.frame following variables: Comparison: Labels pairwise comparison. Z: Values Z test statistic comparison. P.unadj: Unadjusted p-values comparison. P.adj: Adjusted p-values comparison.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/dunnTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dunn's Kruskal-Wallis Multiple Comparisons. — dunnTest","text":"function performs “Dunn's” test multiple comparisons following Kruskal-Wallis test. Unadjusted one- two-sided p-values pairwise comparison among groups computed following Dunn's description implemented dunn.test function dunn.test. p-values may adjusted using methods p.adjustment.methods function dunn.test. function largely wrapper dunn.test function dunn.test. Changes possible use formula notation, results printed main function (printed useful format (opinion) print function), p-values adjusted default “holm” method, two-sided p-values returned default. See dunn.test function dunn.test details underlying computations.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/dunnTest.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Dunn's Kruskal-Wallis Multiple Comparisons. — dunnTest","text":"data.frame reduced rows complete cases x g. words, rows missing data either x g removed analysis warning issued. number functions packages similar analyses. results DunnTest match results (different format) dunn.test function dunn.test. pairw.kw function asbio package performs Dunn test Bonferroni correction. pairw.kw also provides confidence interval difference mean ranks pairs groups. p-value results DunnTest match results pairw.kw. posthoc.kruskal.nemenyi.test function PMCMR package uses “Nemenyi” (1963) method multiple comparisons. kruskalmc function pgirmess package uses method described Siegel Castellan (1988). clear method kruskal agricolae package uses. seem output p-values allow wide variety methods control experimentwise error rate.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/dunnTest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dunn's Kruskal-Wallis Multiple Comparisons. — dunnTest","text":"Dunn, O.J. 1964. Multiple comparisons using rank sums. Technometrics 6:241-252.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/dunnTest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dunn's Kruskal-Wallis Multiple Comparisons. — dunnTest","text":"Derek H. Ogle, DerekOgle51@gmail.com, largely wrapper (see details) dunn.test dunn.test written Alexis Dinno.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/dunnTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dunn's Kruskal-Wallis Multiple Comparisons. — dunnTest","text":"","code":"## pH in four ponds data from Zar (2010) ponds <- data.frame(pond=as.factor(rep(1:4,each=8)),                     pH=c(7.68,7.69,7.70,7.70,7.72,7.73,7.73,7.76,                          7.71,7.73,7.74,7.74,7.78,7.78,7.80,7.81,                          7.74,7.75,7.77,7.78,7.80,7.81,7.84,NA,                          7.71,7.71,7.74,7.79,7.81,7.85,7.87,7.91)) ponds2 <- ponds[complete.cases(ponds),]  # non-formula usage (default \"holm\" method) dunnTest(ponds2$pH,ponds2$pond) #> Dunn (1964) Kruskal-Wallis multiple comparison #>   p-values adjusted with the Holm method. #>   Comparison           Z     P.unadj      P.adj #> 1      1 - 2 -2.13700630 0.032597479 0.13038992 #> 2      1 - 3 -2.94934889 0.003184443 0.01592221 #> 3      2 - 3 -0.88480467 0.376261991 1.00000000 #> 4      1 - 4 -2.99180882 0.002773299 0.01663979 #> 5      2 - 4 -0.85480252 0.392660483 0.78532097 #> 6      3 - 4  0.05898698 0.952962480 0.95296248  # formula usage (default \"holm\" method) dunnTest(pH~pond,data=ponds2) #> Dunn (1964) Kruskal-Wallis multiple comparison #>   p-values adjusted with the Holm method. #>   Comparison           Z     P.unadj      P.adj #> 1      1 - 2 -2.13700630 0.032597479 0.13038992 #> 2      1 - 3 -2.94934889 0.003184443 0.01592221 #> 3      2 - 3 -0.88480467 0.376261991 1.00000000 #> 4      1 - 4 -2.99180882 0.002773299 0.01663979 #> 5      2 - 4 -0.85480252 0.392660483 0.78532097 #> 6      3 - 4  0.05898698 0.952962480 0.95296248  # other methods dunnTest(pH~pond,data=ponds2,method=\"bonferroni\") #> Dunn (1964) Kruskal-Wallis multiple comparison #>   p-values adjusted with the Bonferroni method. #>   Comparison           Z     P.unadj      P.adj #> 1      1 - 2 -2.13700630 0.032597479 0.19558488 #> 2      1 - 3 -2.94934889 0.003184443 0.01910666 #> 3      2 - 3 -0.88480467 0.376261991 1.00000000 #> 4      1 - 4 -2.99180882 0.002773299 0.01663979 #> 5      2 - 4 -0.85480252 0.392660483 1.00000000 #> 6      3 - 4  0.05898698 0.952962480 1.00000000 dunnTest(pH~pond,data=ponds2,method=\"bh\") #> Dunn (1964) Kruskal-Wallis multiple comparison #>   p-values adjusted with the Benjamini-Hochberg method. #>   Comparison           Z     P.unadj       P.adj #> 1      1 - 2 -2.13700630 0.032597479 0.065194958 #> 2      1 - 3 -2.94934889 0.003184443 0.009553328 #> 3      2 - 3 -0.88480467 0.376261991 0.564392987 #> 4      1 - 4 -2.99180882 0.002773299 0.016639793 #> 5      2 - 4 -0.85480252 0.392660483 0.471192580 #> 6      3 - 4  0.05898698 0.952962480 0.952962480 dunnTest(pH~pond,data=ponds2,method=\"none\") #> Dunn (1964) Kruskal-Wallis multiple comparison #>   with no adjustment for p-values. #>   Comparison           Z     P.unadj       P.adj #> 1      1 - 2 -2.13700630 0.032597479 0.032597479 #> 2      1 - 3 -2.94934889 0.003184443 0.003184443 #> 3      2 - 3 -0.88480467 0.376261991 0.376261991 #> 4      1 - 4 -2.99180882 0.002773299 0.002773299 #> 5      2 - 4 -0.85480252 0.392660483 0.392660483 #> 6      3 - 4  0.05898698 0.952962480 0.952962480  # one-sided dunnTest(pH~pond,data=ponds2,two.sided=FALSE) #> Dunn (1964) Kruskal-Wallis multiple comparison #>   p-values adjusted with the Holm method. #>   Comparison           Z     P.unadj       P.adj #> 1      1 - 2 -2.13700630 0.016298740 0.065194958 #> 2      1 - 3 -2.94934889 0.001592221 0.007961106 #> 3      2 - 3 -0.88480467 0.188130996 0.564392987 #> 4      1 - 4 -2.99180882 0.001386649 0.008319896 #> 5      2 - 4 -0.85480252 0.196330241 0.392660483 #> 6      3 - 4  0.05898698 0.476481240 0.476481240  # warning message if incomplete cases were removed dunnTest(pH~pond,data=ponds) #> Warning: Some rows deleted from 'x' and 'g' because missing data. #> Dunn (1964) Kruskal-Wallis multiple comparison #>   p-values adjusted with the Holm method. #>   Comparison           Z     P.unadj      P.adj #> 1      1 - 2 -2.13700630 0.032597479 0.13038992 #> 2      1 - 3 -2.94934889 0.003184443 0.01592221 #> 3      2 - 3 -0.88480467 0.376261991 1.00000000 #> 4      1 - 4 -2.99180882 0.002773299 0.01663979 #> 5      2 - 4 -0.85480252 0.392660483 0.78532097 #> 6      3 - 4  0.05898698 0.952962480 0.95296248  # print dunn.test results tmp <- dunnTest(pH~pond,data=ponds2) print(tmp,dunn.test.results=TRUE) #>   Kruskal-Wallis rank sum test  #>    #>  data: x and g  #>  Kruskal-Wallis chi-squared = 11.9435, df = 3, p-value = 0.01  #>    #>    #>                               Comparison of x by g                                #>                                      (Holm)                                       #>  Col Mean-|  #>  Row Mean |          1          2          3  #>  ---------+---------------------------------  #>         2 |  -2.137006  #>           |     0.1304  #>           |  #>         3 |  -2.949348  -0.884804  #>           |    0.0159*     1.0000  #>           |  #>         4 |  -2.991808  -0.854802   0.058986  #>           |    0.0166*     0.7853     0.9530  #>    #>  alpha = 0.05  #>  Reject Ho if p <= alpha"},{"path":"https://fishr-core-team.github.io/FSA/reference/expandCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeat individual fish data (including lengths) from tallied counts. — expandCounts","title":"Repeat individual fish data (including lengths) from tallied counts. — expandCounts","text":"Repeat individual fish data, including lengths, tallied counts , optionally, add random digit length measurements simulate actual length fish bin. useful precursor summaries require information, e.g., lengths, individual fish (e.g., length frequency histograms, means lengths).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/expandCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeat individual fish data (including lengths) from tallied counts. — expandCounts","text":"","code":"expandCounts(   data,   cform,   lform = NULL,   removeCount = TRUE,   lprec = 0.1,   new.name = \"newlen\",   cwid = 0,   verbose = TRUE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/expandCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeat individual fish data (including lengths) from tallied counts. — expandCounts","text":"data data.frame contains variables cform lform. cform formula form ~countvar countvar generically represents variable data contains counts individuals. See details. lform optional formula form ~lowerbin+upperbin lowerbin upperbin generically represent variables data identify lower- upper-values length bins. See details. removeCount single logical indicates variable contains counts individuals (given cform) removed form returned data.frame. default TRUE variable removed returned data.frame contains individuals counts individuals tallied bins relevant individual. lprec single numeric controls precision random lengths recorded. See details. new.name single string contains name new length variable random lengths created. cwid single positive numeric added lower length bin value instances count exceeds one lower (upper) length recorded. See details. verbose logical indicating whether progress message printed . ... yet implemented.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/expandCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeat individual fish data (including lengths) from tallied counts. — expandCounts","text":"data.frame structure data except variable cform may deleted variable new.name may added. returned data.frame rows data potential addition new individuals expanded counts cform.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/expandCounts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Repeat individual fish data (including lengths) from tallied counts. — expandCounts","text":"Fisheries data may recorded tallied counts field. example, field biologists may simply recorded 10 fish one group, 15 another, etc. specifically, biologist may recorded 10 male Bluegill first sampling event 100 124 mm, 15 male Bluegill first sampling event 125 149 mm, . times, may necessary expand counts repeated information appears individual rows new data.frame. specific example, tallied counts repeated male, Bluegill, first sampling event, 100-124 mm information repeated 10 times; male, Bluegill, first sampling event, 125-149 mm information repeated 15 times, . function facilitates type expansion. Length data often collected “binned--tallied” format (e.g., 10 fish 100-124 mm group, 15 125-149 mm group, etc.). type data collection facilitate easy precise calculations summary statistics length (.e., mean standard deviations length). Expanding data described solve problem length data still essentially categorical (.e., group fish belongs rather actual length ). facilitate computation summary statistics, data can expanded described length can randomly selected within recorded length bin serve “measured” length fish. function performs type expansion randomly selecting length uniform distribution within length bin (e.g., value 100 124 mm probability selected). function makes assumptions coding situations. First, assumes lowerbin values actually lower upperbin values. function throw error true. Second, assumes lowerbin upperbin value given lowerbin value exact measurement fish. Third, assumes upperbin lowerbin value given data entry error upperbin value lowerbin value. Fourth, assumes data entry error varcount zero NA lowerbin upperbin contains values (.e., lengths fish captured?).","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/expandCounts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Repeat individual fish data (including lengths) from tallied counts. — expandCounts","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/expandCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeat individual fish data (including lengths) from tallied counts. — expandCounts","text":"","code":"# all need expansion ( d1 <- data.frame(name=c(\"Johnson\",\"Johnson\",\"Jones\",\"Frank\",\"Frank\",\"Max\"),                    lwr.bin=c(15,15.5,16,16,17,17),                    upr.bin=c(15.5,16,16.5,16.5,17.5,17.5),                    freq=c(6,4,2,3,1,1)) ) #>      name lwr.bin upr.bin freq #> 1 Johnson    15.0    15.5    6 #> 2 Johnson    15.5    16.0    4 #> 3   Jones    16.0    16.5    2 #> 4   Frank    16.0    16.5    3 #> 5   Frank    17.0    17.5    1 #> 6     Max    17.0    17.5    1 expandCounts(d1,~freq) #> Results messages from expandCounts(): #>   2 rows had an individual measurement. #>   4 rows with multiple measurements were expanded to 15 rows of individual measurements. #>       name lwr.bin upr.bin #> 1    Frank    17.0    17.5 #> 2      Max    17.0    17.5 #> 3  Johnson    15.0    15.5 #> 4  Johnson    15.0    15.5 #> 5  Johnson    15.0    15.5 #> 6  Johnson    15.0    15.5 #> 7  Johnson    15.0    15.5 #> 8  Johnson    15.0    15.5 #> 9  Johnson    15.5    16.0 #> 10 Johnson    15.5    16.0 #> 11 Johnson    15.5    16.0 #> 12 Johnson    15.5    16.0 #> 13   Jones    16.0    16.5 #> 14   Jones    16.0    16.5 #> 15   Frank    16.0    16.5 #> 16   Frank    16.0    16.5 #> 17   Frank    16.0    16.5 expandCounts(d1,~freq,~lwr.bin+upr.bin) #> Results messages from expandCounts(): #>   2 rows had an individual measurement. #>   4 rows with multiple measurements were expanded to 15 rows of individual measurements. #>       name lwr.bin upr.bin newlen         lennote #> 1    Frank    17.0    17.5   17.5 Expanded length #> 2      Max    17.0    17.5   17.4 Expanded length #> 3  Johnson    15.0    15.5   15.4 Expanded length #> 4  Johnson    15.0    15.5   15.2 Expanded length #> 5  Johnson    15.0    15.5   15.1 Expanded length #> 6  Johnson    15.0    15.5   15.4 Expanded length #> 7  Johnson    15.0    15.5   15.4 Expanded length #> 8  Johnson    15.0    15.5   15.3 Expanded length #> 9  Johnson    15.5    16.0   15.7 Expanded length #> 10 Johnson    15.5    16.0   15.5 Expanded length #> 11 Johnson    15.5    16.0   16.0 Expanded length #> 12 Johnson    15.5    16.0   15.8 Expanded length #> 13   Jones    16.0    16.5   16.2 Expanded length #> 14   Jones    16.0    16.5   16.4 Expanded length #> 15   Frank    16.0    16.5   16.1 Expanded length #> 16   Frank    16.0    16.5   16.2 Expanded length #> 17   Frank    16.0    16.5   16.4 Expanded length  # some need expansion ( d2 <- data.frame(name=c(\"Johnson\",\"Johnson\",\"Jones\",\"Frank\",\"Frank\",\"Max\"),                    lwr.bin=c(15,15.5,16,16,17.1,17.3),                    upr.bin=c(15.5,16,16.5,16.5,17.1,17.3),                    freq=c(6,4,2,3,1,1)) ) #>      name lwr.bin upr.bin freq #> 1 Johnson    15.0    15.5    6 #> 2 Johnson    15.5    16.0    4 #> 3   Jones    16.0    16.5    2 #> 4   Frank    16.0    16.5    3 #> 5   Frank    17.1    17.1    1 #> 6     Max    17.3    17.3    1 expandCounts(d2,~freq) #> Results messages from expandCounts(): #>   2 rows had an individual measurement. #>   4 rows with multiple measurements were expanded to 15 rows of individual measurements. #>       name lwr.bin upr.bin #> 1    Frank    17.1    17.1 #> 2      Max    17.3    17.3 #> 3  Johnson    15.0    15.5 #> 4  Johnson    15.0    15.5 #> 5  Johnson    15.0    15.5 #> 6  Johnson    15.0    15.5 #> 7  Johnson    15.0    15.5 #> 8  Johnson    15.0    15.5 #> 9  Johnson    15.5    16.0 #> 10 Johnson    15.5    16.0 #> 11 Johnson    15.5    16.0 #> 12 Johnson    15.5    16.0 #> 13   Jones    16.0    16.5 #> 14   Jones    16.0    16.5 #> 15   Frank    16.0    16.5 #> 16   Frank    16.0    16.5 #> 17   Frank    16.0    16.5 expandCounts(d2,~freq,~lwr.bin+upr.bin) #> Results messages from expandCounts(): #>   2 rows had an individual measurement. #>   4 rows with multiple measurements were expanded to 15 rows of individual measurements. #>       name lwr.bin upr.bin newlen         lennote #> 1    Frank    17.1    17.1   17.1 Observed length #> 2      Max    17.3    17.3   17.3 Observed length #> 3  Johnson    15.0    15.5   15.1 Expanded length #> 4  Johnson    15.0    15.5   15.2 Expanded length #> 5  Johnson    15.0    15.5   15.1 Expanded length #> 6  Johnson    15.0    15.5   15.4 Expanded length #> 7  Johnson    15.0    15.5   15.3 Expanded length #> 8  Johnson    15.0    15.5   15.5 Expanded length #> 9  Johnson    15.5    16.0   15.9 Expanded length #> 10 Johnson    15.5    16.0   15.6 Expanded length #> 11 Johnson    15.5    16.0   15.8 Expanded length #> 12 Johnson    15.5    16.0   16.0 Expanded length #> 13   Jones    16.0    16.5   16.4 Expanded length #> 14   Jones    16.0    16.5   16.1 Expanded length #> 15   Frank    16.0    16.5   16.2 Expanded length #> 16   Frank    16.0    16.5   16.5 Expanded length #> 17   Frank    16.0    16.5   16.2 Expanded length  # none need expansion ( d3 <- data.frame(name=c(\"Johnson\",\"Johnson\",\"Jones\",\"Frank\",\"Frank\",\"Max\"),                    lwr.bin=c(15,15.5,16,16,17.1,17.3),                    upr.bin=c(15,15.5,16,16,17.1,17.3),                    freq=c(6,4,2,3,1,1)) ) #>      name lwr.bin upr.bin freq #> 1 Johnson    15.0    15.0    6 #> 2 Johnson    15.5    15.5    4 #> 3   Jones    16.0    16.0    2 #> 4   Frank    16.0    16.0    3 #> 5   Frank    17.1    17.1    1 #> 6     Max    17.3    17.3    1 expandCounts(d3,~freq) #> Results messages from expandCounts(): #>   2 rows had an individual measurement. #>   4 rows with multiple measurements were expanded to 15 rows of individual measurements. #>       name lwr.bin upr.bin #> 1    Frank    17.1    17.1 #> 2      Max    17.3    17.3 #> 3  Johnson    15.0    15.0 #> 4  Johnson    15.0    15.0 #> 5  Johnson    15.0    15.0 #> 6  Johnson    15.0    15.0 #> 7  Johnson    15.0    15.0 #> 8  Johnson    15.0    15.0 #> 9  Johnson    15.5    15.5 #> 10 Johnson    15.5    15.5 #> 11 Johnson    15.5    15.5 #> 12 Johnson    15.5    15.5 #> 13   Jones    16.0    16.0 #> 14   Jones    16.0    16.0 #> 15   Frank    16.0    16.0 #> 16   Frank    16.0    16.0 #> 17   Frank    16.0    16.0 expandCounts(d3,~freq,~lwr.bin+upr.bin) #> Results messages from expandCounts(): #>   2 rows had an individual measurement. #>   4 rows with multiple measurements were expanded to 15 rows of individual measurements. #>       name lwr.bin upr.bin newlen         lennote #> 1    Frank    17.1    17.1   17.1 Observed length #> 2      Max    17.3    17.3   17.3 Observed length #> 3  Johnson    15.0    15.0   15.0 Observed length #> 4  Johnson    15.0    15.0   15.0 Observed length #> 5  Johnson    15.0    15.0   15.0 Observed length #> 6  Johnson    15.0    15.0   15.0 Observed length #> 7  Johnson    15.0    15.0   15.0 Observed length #> 8  Johnson    15.0    15.0   15.0 Observed length #> 9  Johnson    15.5    15.5   15.5 Observed length #> 10 Johnson    15.5    15.5   15.5 Observed length #> 11 Johnson    15.5    15.5   15.5 Observed length #> 12 Johnson    15.5    15.5   15.5 Observed length #> 13   Jones    16.0    16.0   16.0 Observed length #> 14   Jones    16.0    16.0   16.0 Observed length #> 15   Frank    16.0    16.0   16.0 Observed length #> 16   Frank    16.0    16.0   16.0 Observed length #> 17   Frank    16.0    16.0   16.0 Observed length  # some need expansion, but different bin widths ( d4 <- data.frame(name=c(\"Johnson\",\"Johnson\",\"Jones\",\"Frank\",\"Frank\",\"Max\"),                    lwr.bin=c(15,  15,  16,  16,  17.1,17.3),                    upr.bin=c(15.5,15.9,16.5,16.9,17.1,17.3),                    freq=c(6,4,2,3,1,1)) ) #>      name lwr.bin upr.bin freq #> 1 Johnson    15.0    15.5    6 #> 2 Johnson    15.0    15.9    4 #> 3   Jones    16.0    16.5    2 #> 4   Frank    16.0    16.9    3 #> 5   Frank    17.1    17.1    1 #> 6     Max    17.3    17.3    1 expandCounts(d4,~freq) #> Results messages from expandCounts(): #>   2 rows had an individual measurement. #>   4 rows with multiple measurements were expanded to 15 rows of individual measurements. #>       name lwr.bin upr.bin #> 1    Frank    17.1    17.1 #> 2      Max    17.3    17.3 #> 3  Johnson    15.0    15.5 #> 4  Johnson    15.0    15.5 #> 5  Johnson    15.0    15.5 #> 6  Johnson    15.0    15.5 #> 7  Johnson    15.0    15.5 #> 8  Johnson    15.0    15.5 #> 9  Johnson    15.0    15.9 #> 10 Johnson    15.0    15.9 #> 11 Johnson    15.0    15.9 #> 12 Johnson    15.0    15.9 #> 13   Jones    16.0    16.5 #> 14   Jones    16.0    16.5 #> 15   Frank    16.0    16.9 #> 16   Frank    16.0    16.9 #> 17   Frank    16.0    16.9 expandCounts(d4,~freq,~lwr.bin+upr.bin) #> Results messages from expandCounts(): #>   2 rows had an individual measurement. #>   4 rows with multiple measurements were expanded to 15 rows of individual measurements. #>       name lwr.bin upr.bin newlen         lennote #> 1    Frank    17.1    17.1   17.1 Observed length #> 2      Max    17.3    17.3   17.3 Observed length #> 3  Johnson    15.0    15.5   15.5 Expanded length #> 4  Johnson    15.0    15.5   15.5 Expanded length #> 5  Johnson    15.0    15.5   15.4 Expanded length #> 6  Johnson    15.0    15.5   15.4 Expanded length #> 7  Johnson    15.0    15.5   15.1 Expanded length #> 8  Johnson    15.0    15.5   15.2 Expanded length #> 9  Johnson    15.0    15.9   15.2 Expanded length #> 10 Johnson    15.0    15.9   15.8 Expanded length #> 11 Johnson    15.0    15.9   15.9 Expanded length #> 12 Johnson    15.0    15.9   15.3 Expanded length #> 13   Jones    16.0    16.5   16.4 Expanded length #> 14   Jones    16.0    16.5   16.5 Expanded length #> 15   Frank    16.0    16.9   16.3 Expanded length #> 16   Frank    16.0    16.9   16.8 Expanded length #> 17   Frank    16.0    16.9   16.3 Expanded length  # some need expansion but include zeros and NAs for counts ( d2a <- data.frame(name=c(\"Johnson\",\"Johnson\",\"Jones\",\"Frank\",\"Frank\",\"Max\",\"Max\",\"Max\",\"Max\"),                     lwr.bin=c(15,  15.5,16  ,16  ,17.1,17.3,NA,NA,NA),                     upr.bin=c(15.5,16  ,16.5,16.5,17.1,17.3,NA,NA,NA),                     freq=c(6,4,2,3,1,1,NA,0,NA)) ) #>      name lwr.bin upr.bin freq #> 1 Johnson    15.0    15.5    6 #> 2 Johnson    15.5    16.0    4 #> 3   Jones    16.0    16.5    2 #> 4   Frank    16.0    16.5    3 #> 5   Frank    17.1    17.1    1 #> 6     Max    17.3    17.3    1 #> 7     Max      NA      NA   NA #> 8     Max      NA      NA    0 #> 9     Max      NA      NA   NA expandCounts(d2a,~freq,~lwr.bin+upr.bin) #> Results messages from expandCounts(): #>   Rows 7, 8, 9 had zero or no counts in freq. #>   2 rows had an individual measurement. #>   4 rows with multiple measurements were expanded to 15 rows of individual measurements. #>       name lwr.bin upr.bin newlen         lennote #> 1      Max      NA      NA     NA Observed length #> 2      Max      NA      NA     NA Observed length #> 3      Max      NA      NA     NA Observed length #> 4    Frank    17.1    17.1   17.1 Observed length #> 5      Max    17.3    17.3   17.3 Observed length #> 6  Johnson    15.0    15.5   15.4 Expanded length #> 7  Johnson    15.0    15.5   15.2 Expanded length #> 8  Johnson    15.0    15.5   15.4 Expanded length #> 9  Johnson    15.0    15.5   15.3 Expanded length #> 10 Johnson    15.0    15.5   15.0 Expanded length #> 11 Johnson    15.0    15.5   15.1 Expanded length #> 12 Johnson    15.5    16.0   15.5 Expanded length #> 13 Johnson    15.5    16.0   16.0 Expanded length #> 14 Johnson    15.5    16.0   15.5 Expanded length #> 15 Johnson    15.5    16.0   15.5 Expanded length #> 16   Jones    16.0    16.5   16.1 Expanded length #> 17   Jones    16.0    16.5   16.1 Expanded length #> 18   Frank    16.0    16.5   16.5 Expanded length #> 19   Frank    16.0    16.5   16.5 Expanded length #> 20   Frank    16.0    16.5   16.4 Expanded length   # some need expansion but include NAs for upper values ( d2b <- data.frame(name=c(\"Johnson\",\"Johnson\",\"Jones\",\"Frank\",\"Frank\",\"Max\"),                     lwr.bin=c(15,  15.5,16  ,16  ,17.1,17.3),                     upr.bin=c(NA  ,NA  ,16.5,16.5,17.1,17.3),                     freq=c(6,4,2,3,1,1)) ) #>      name lwr.bin upr.bin freq #> 1 Johnson    15.0      NA    6 #> 2 Johnson    15.5      NA    4 #> 3   Jones    16.0    16.5    2 #> 4   Frank    16.0    16.5    3 #> 5   Frank    17.1    17.1    1 #> 6     Max    17.3    17.3    1 expandCounts(d2b,~freq,~lwr.bin+upr.bin) #> Results messages from expandCounts(): #>   2 rows had an individual measurement. #>   4 rows with multiple measurements were expanded to 15 rows of individual measurements. #>       name lwr.bin upr.bin newlen         lennote #> 1    Frank    17.1    17.1   17.1 Observed length #> 2      Max    17.3    17.3   17.3 Observed length #> 3  Johnson    15.0    15.0   15.0 Observed length #> 4  Johnson    15.0    15.0   15.0 Observed length #> 5  Johnson    15.0    15.0   15.0 Observed length #> 6  Johnson    15.0    15.0   15.0 Observed length #> 7  Johnson    15.0    15.0   15.0 Observed length #> 8  Johnson    15.0    15.0   15.0 Observed length #> 9  Johnson    15.5    15.5   15.5 Observed length #> 10 Johnson    15.5    15.5   15.5 Observed length #> 11 Johnson    15.5    15.5   15.5 Observed length #> 12 Johnson    15.5    15.5   15.5 Observed length #> 13   Jones    16.0    16.5   16.5 Expanded length #> 14   Jones    16.0    16.5   16.2 Expanded length #> 15   Frank    16.0    16.5   16.0 Expanded length #> 16   Frank    16.0    16.5   16.4 Expanded length #> 17   Frank    16.0    16.5   16.3 Expanded length   # some need expansion but include NAs for upper values ( d2c <- data.frame(name=c(\"Johnson\",\"Johnson\",\"Jones\",\"Frank\",\"Frank\",\"Max\"),                     lwr.bin=c(NA,NA,  16  ,16  ,17.1,17.3),                     upr.bin=c(15,15.5,16.5,16.5,17.1,17.3),                     freq=c(6,4,2,3,1,1)) ) #>      name lwr.bin upr.bin freq #> 1 Johnson      NA    15.0    6 #> 2 Johnson      NA    15.5    4 #> 3   Jones    16.0    16.5    2 #> 4   Frank    16.0    16.5    3 #> 5   Frank    17.1    17.1    1 #> 6     Max    17.3    17.3    1 expandCounts(d2c,~freq,~lwr.bin+upr.bin) #> Results messages from expandCounts(): #>   2 rows had an individual measurement. #>   4 rows with multiple measurements were expanded to 15 rows of individual measurements. #>       name lwr.bin upr.bin newlen         lennote #> 1    Frank    17.1    17.1   17.1 Observed length #> 2      Max    17.3    17.3   17.3 Observed length #> 3  Johnson    15.0    15.0   15.0 Observed length #> 4  Johnson    15.0    15.0   15.0 Observed length #> 5  Johnson    15.0    15.0   15.0 Observed length #> 6  Johnson    15.0    15.0   15.0 Observed length #> 7  Johnson    15.0    15.0   15.0 Observed length #> 8  Johnson    15.0    15.0   15.0 Observed length #> 9  Johnson    15.5    15.5   15.5 Observed length #> 10 Johnson    15.5    15.5   15.5 Observed length #> 11 Johnson    15.5    15.5   15.5 Observed length #> 12 Johnson    15.5    15.5   15.5 Observed length #> 13   Jones    16.0    16.5   16.4 Expanded length #> 14   Jones    16.0    16.5   16.3 Expanded length #> 15   Frank    16.0    16.5   16.0 Expanded length #> 16   Frank    16.0    16.5   16.3 Expanded length #> 17   Frank    16.0    16.5   16.4 Expanded length  if (FALSE) { ##!!##!!## Change path to where example file is and then run to demo  ## Read in datafile (note periods in names) df <- read.csv(\"c:/aaawork/consulting/R_WiDNR/Statewide/Surveysummaries2010.csv\") str(df)  ## narrow variables for simplicity df1 <- df[,c(\"County\",\"Waterbody.Name\",\"Survey.Year\",\"Gear\",\"Species\",              \"Number.of.Fish\",\"Length.or.Lower.Length.IN\",\"Length.Upper.IN\",              \"Weight.Pounds\",\"Gender\")] ## Sum the count to see how many fish there should be after expansion sum(df1$Number.of.Fish)  ## Simple expansion df2 <- expandCounts(df1,~Number.of.Fish)  ## Same expansion but include random component to lengths (thus new variable) ##   also note default lprec=0.1 df3 <- expandCounts(df1,~Number.of.Fish,~Length.or.Lower.Length.IN+Length.Upper.IN)  }"},{"path":"https://fishr-core-team.github.io/FSA/reference/expandLenFreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Expands a length frequency based on a subsample. — expandLenFreq","title":"Expands a length frequency based on a subsample. — expandLenFreq","text":"Creates vector lengths individuals measured based lengths measured subsample individuals.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/expandLenFreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expands a length frequency based on a subsample. — expandLenFreq","text":"","code":"expandLenFreq(   x,   w,   additional,   startcat = NULL,   total = additional + length(x),   decimals = decs$wdec,   show.summary = TRUE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/expandLenFreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expands a length frequency based on a subsample. — expandLenFreq","text":"x numeric vector length measurements. w number indicates width length classes create. additional number individuals measured sample (measurements determined). startcat number indicates beginning first length-class. total total number individuals sample (including measured subsample). decimals number indicates number decimals used output vector estimated lengths. show.summary logical indicates whether summary process shown end. ... Optional arguments passed lencat.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/expandLenFreq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expands a length frequency based on a subsample. — expandLenFreq","text":"Returns vector consists measurements non-measured individuals entire sample.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/expandLenFreq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expands a length frequency based on a subsample. — expandLenFreq","text":"Creates vector lengths individuals measured based lengths measured subsample individuals. Length categories created first begin value startcat (minimum observed value default) continue values w category value greater largest observed length x. Categories different widths allowed. resulting “expanded” lengths created allocating individuals length class based proportion measured individuals subsample length class. Individuals within length class assigned specific length within length class based uniform distribution. expanded number individuals length class rounded based measured number per length class, individuals initially assigned length value. remaining individuals assigned length class randomly according weights based proportion individuals measured length classes. Finally, individuals randomly assigned specific length within respective length class uniform distribution, . resulting length assignments rounded number decimals shown decimal. decimals set user default number decimals shown w value. Care taken make sure rounded result pass given length category (.e., allowed round next length category). Generally speaking, one want use decimals shown w. example, one may want create length categories width 1 inch (.e., w=1) results recorded measured within 0.1 inch (.e., decimals=1).","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/expandLenFreq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expands a length frequency based on a subsample. — expandLenFreq","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/expandLenFreq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expands a length frequency based on a subsample. — expandLenFreq","text":"","code":"## Set the random seed for reproducibility set.seed(15343437)  ## First example # random lengths measured to nearest 0.1 unit -- values in a vector len1 <- round(runif(50,0.1,9.9),1) # assignment of integer lengths to 110 non-measured individuals new.len1a <- expandLenFreq(len1,w=1,total=160) #> Length Frequency Expansion using: #>  Measured length frequency of 50 individuals: #>    0    1    2    3    4    5    6    7    8    9  #> 0.08 0.06 0.04 0.08 0.14 0.10 0.14 0.04 0.16 0.16  #>  #> Non-random allocations of 105 individuals by length category. #>  [1]  8  6  4  8 15 11 15  4 17 17 #>  #> Random allocations of 5 individuals #>  With final length frequency table of: #>  0  1  2  3  4  5  6  7  8  9  #>  8  6  4  8 17 11 15  4 20 17  new.len1a #>   [1] 0 0 0 0 0 0 0 0 1 1 1 1 1 1 2 2 2 2 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 #>  [38] 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 8 #>  [75] 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 # assignment of lengths to 0.1 to 110 non-measured individuals new.len1b <- expandLenFreq(len1,w=1,total=160,decimals=1) #> Length Frequency Expansion using: #>  Measured length frequency of 50 individuals: #>    0    1    2    3    4    5    6    7    8    9  #> 0.08 0.06 0.04 0.08 0.14 0.10 0.14 0.04 0.16 0.16  #>  #> Non-random allocations of 105 individuals by length category. #>  [1]  8  6  4  8 15 11 15  4 17 17 #>  #> Random allocations of 5 individuals #>  With final length frequency table of: #>  0  1  2  3  4  5  6  7  8  9  #>  8  6  5  8 16 11 16  4 19 17  new.len1b #>   [1] 0.1 0.1 0.2 0.3 0.3 0.3 0.5 0.9 1.3 1.4 1.5 1.5 1.6 1.6 2.1 2.1 2.3 2.6 #>  [19] 2.8 3.0 3.1 3.3 3.5 3.5 3.7 3.8 3.9 4.0 4.1 4.2 4.3 4.3 4.4 4.4 4.5 4.6 #>  [37] 4.7 4.8 4.8 4.8 4.8 4.8 4.9 5.0 5.1 5.3 5.4 5.6 5.6 5.8 5.8 5.8 5.8 5.9 #>  [55] 6.0 6.1 6.2 6.4 6.5 6.6 6.6 6.6 6.6 6.6 6.7 6.8 6.8 6.8 6.9 6.9 7.4 7.5 #>  [73] 7.6 7.6 8.0 8.0 8.0 8.0 8.1 8.2 8.3 8.3 8.3 8.3 8.3 8.4 8.4 8.6 8.7 8.7 #>  [91] 8.8 8.8 8.8 9.0 9.2 9.2 9.2 9.2 9.2 9.3 9.3 9.4 9.5 9.6 9.6 9.6 9.8 9.8 #> [109] 9.8 9.8  ## Second example -- if values are in a data.frame # random lengths measured to nearest 0.1 unit len2 <- data.frame(len=round(runif(50,10,117),1)) # assignment of lengths to 0.1 for 140 non-measured indivs new.len2a <- expandLenFreq(len2$len,w=10,total=190,decimals=1) #> Length Frequency Expansion using: #>  Measured length frequency of 50 individuals: #>   10   20   30   40   50   60   70   80   90  100  110  #> 0.06 0.06 0.06 0.14 0.04 0.10 0.12 0.14 0.12 0.04 0.12  #>  #> Non-random allocations of 134 individuals by length category. #>  [1]  8  8  8 19  5 14 16 19 16  5 16 #>  #> Random allocations of 6 individuals #>  With final length frequency table of: #>  10  20  30  40  50  60  70  80  90 100 110  #>   8   8   8  20   6  15  18  20  16   5  16  new.len2a #>   [1]  10.1  10.7  12.2  15.9  16.2  16.3  17.8  18.2  24.2  25.0  25.4  25.6 #>  [13]  27.0  27.5  29.1  29.9  31.2  31.9  31.9  32.9  33.5  36.0  38.0  38.6 #>  [25]  41.0  41.8  42.5  42.7  42.7  42.8  43.1  43.3  43.4  44.0  44.2  44.2 #>  [37]  44.9  45.1  47.3  47.5  49.1  49.1  49.6  49.6  51.9  52.1  55.4  56.6 #>  [49]  58.1  58.7  60.1  61.3  61.6  62.1  64.5  64.6  66.3  66.8  67.7  67.8 #>  [61]  68.0  68.3  68.5  68.5  69.3  70.8  71.2  71.5  72.4  72.5  72.5  72.8 #>  [73]  73.0  74.0  75.8  76.7  76.8  77.3  77.5  78.2  78.7  79.9  79.9  80.4 #>  [85]  80.6  80.7  81.7  82.8  85.1  85.5  85.7  86.4  86.6  87.0  87.1  87.2 #>  [97]  87.7  88.8  88.8  89.0  89.1  89.5  89.5  90.0  90.6  91.8  92.4  92.5 #> [109]  92.5  93.7  93.8  94.6  94.7  95.2  95.3  95.9  96.2  98.6  99.5 103.6 #> [121] 104.6 104.9 106.0 109.5 110.4 111.1 111.4 111.7 112.5 112.6 113.9 114.1 #> [133] 114.1 114.5 115.2 116.8 117.1 118.6 119.3 119.7  ## Third example # hypothetically measured lengths len <- c(6.7,6.9,7.3,7.4,7.5,8.2,8.7,8.9) # find lengths for unmeasured fish assuming a total of 30 newlen1 <- expandLenFreq(len,w=0.5,total=30,decimals=1) #> Length Frequency Expansion using: #>  Measured length frequency of 8 individuals: #>   6.5     7   7.5     8   8.5  #> 0.250 0.250 0.125 0.125 0.250  #>  #> Non-random allocations of 19 individuals by length category. #> [1] 5 5 2 2 5 #>  #> Random allocations of 3 individuals #>  With final length frequency table of: #> 6.5   7 7.5   8 8.5  #>   6   5   2   4   5  newlen1 #>  [1] 6.6 6.7 6.7 6.7 6.8 6.9 7.1 7.1 7.2 7.3 7.3 7.5 7.7 8.0 8.2 8.3 8.3 8.5 8.6 #> [20] 8.7 8.8 8.8 # set a starting length category newlen2 <- expandLenFreq(len,w=0.5,startcat=6.2,total=30,decimals=1) #> Length Frequency Expansion using: #>  Measured length frequency of 8 individuals: #>   6.7   7.2   8.2   8.7  #> 0.250 0.375 0.125 0.250  #>  #> Non-random allocations of 20 individuals by length category. #> [1] 5 8 2 5 #>  #> Random allocations of 2 individuals #>  With final length frequency table of: #> 6.7 7.2 8.2 8.7  #>   6   9   2   5  newlen2 #>  [1] 6.7 6.7 6.9 6.9 6.9 6.9 7.2 7.3 7.3 7.3 7.4 7.4 7.4 7.6 7.6 8.4 8.5 8.7 8.8 #> [20] 9.0 9.0 9.1"},{"path":"https://fishr-core-team.github.io/FSA/reference/extraTests.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood ratio and extra sum-of-squares tests. — extraTests","title":"Likelihood ratio and extra sum-of-squares tests. — extraTests","text":"Likelihood ratio extra sum--squares tests multiple lm nls models nested within one common model. function useful nested functions level; otherwise use anova() lrtest() flexible.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/extraTests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood ratio and extra sum-of-squares tests. — extraTests","text":"","code":"lrt(sim, ..., com, sim.names = sim.name, sim.name = NULL, com.name = NULL)  extraSS(sim, ..., com, sim.names = sim.name, sim.name = NULL, com.name = NULL)  # S3 method for extraTest print(x, ...)"},{"path":"https://fishr-core-team.github.io/FSA/reference/extraTests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood ratio and extra sum-of-squares tests. — extraTests","text":"sim results one lm nls model, example, nested subset model com=. ... model results nested subsets model com=. com results one lm nls model, example, models sim= ... subset . sim.name, sim.names string vector “names” simple model sim= .... sim.names preferred sim.name allowed allow common typing mistake. com.name single “name” string complex model com=. x object lrt() extraSS().","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/extraTests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood ratio and extra sum-of-squares tests. — extraTests","text":"main function returns matrix many rows model comparisons columns following types:  DfO error degrees--freedom subset (simple) model. RSSO, logLikO residual sum--squares (extraSS) log-likelihood (lrt) subset (simple) model. DfA error degrees--freedom com= model. RSSA, logLikA residual sum--squares (extraSS) log-likelihood (lrt) com= model. Df difference error degrees--freedom two models. SS, logLik difference residual sum--squares (extraSS) log-likelihood (lrt) two models. F, Chisq corresponding F- (extraSS) Chi-square (lrt) test statistic. Pr(>F), Pr(>Chisq) corresponding p-value.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/extraTests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Likelihood ratio and extra sum-of-squares tests. — extraTests","text":"anova lrtest (lmtest) provide simple methods conducting extra sum--squares likelihood ratio tests one model nested within another model several layers simple models sequentially nested within . However, compare several models nested level one common complex model, anova() lrtest() must repeated comparison. repetition can eliminated lapply() output voluminous. function designed remove repetitiveness provide output compact easy read.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/extraTests.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Likelihood ratio and extra sum-of-squares tests. — extraTests","text":"function experimental point. seems work fine lm nls models. error thrown extraSS model classes, lrt (thoroughly tests models).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/extraTests.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Likelihood ratio and extra sum-of-squares tests. — extraTests","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/extraTests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood ratio and extra sum-of-squares tests. — extraTests","text":"","code":"## Example data df <- data.frame(x=c(1,2,3,4,5,6,7,8,9,10),                  y=c(4,6,5,7,9,8,7,12,16,22),                  z=as.factor(rep(c(\"A\",\"B\"),each=5)),                  w=as.factor(rep(c(\"A\",\"B\"),times=5))) df$x2 <- df$x^2  ## Linear (lm()) models #  ... regression fit.0 <- lm(y~1,data=df) fit.1 <- lm(y~x,data=df) fit.2 <- lm(y~x2+x,data=df) extraSS(fit.0,fit.1,com=fit.2) #> Model 1: y ~ 1 #> Model 2: y ~ x #> Model A: y ~ x2 + x  #>  #>     DfO    RSSO DfA    RSSA Df      SS      F    Pr(>F)     #> 1vA   9 282.400   7  27.617  2 254.783 32.290 0.0002925 *** #> 2vA   8  67.988   7  27.617  1  40.371 10.233 0.0150891 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 lrt(fit.0,fit.1,com=fit.2) #> Loading required namespace: lmtest #> Model 1: y ~ 1 #> Model 2: y ~ x #> Model A: y ~ x2 + x  #>  #>     DfO  logLikO DfA  logLikA Df   logLik   Chisq Pr(>Chisq)     #> 1vA   9 -30.8931   7 -19.2686  2 -11.6245 23.2491  8.944e-06 *** #> 2vA   8 -23.7731   7 -19.2686  1  -4.5045  9.0091   0.002686 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  # ... show labels for models extraSS(fit.0,fit.1,com=fit.2,     sim.names=c(\"Null Model\",\"Linear\"),com.name=\"Quadratic\") #> Model 1: Null Model #> Model 2: Linear #> Model A: Quadratic  #>  #>     DfO    RSSO DfA    RSSA Df      SS      F    Pr(>F)     #> 1vA   9 282.400   7  27.617  2 254.783 32.290 0.0002925 *** #> 2vA   8  67.988   7  27.617  1  40.371 10.233 0.0150891 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 lrt(fit.0,fit.1,com=fit.2,     sim.names=c(\"Null Model\",\"Linear\"),com.name=\"Quadratic\") #> Model 1: Null Model #> Model 2: Linear #> Model A: Quadratic  #>  #>     DfO  logLikO DfA  logLikA Df   logLik   Chisq Pr(>Chisq)     #> 1vA   9 -30.8931   7 -19.2686  2 -11.6245 23.2491  8.944e-06 *** #> 2vA   8 -23.7731   7 -19.2686  1  -4.5045  9.0091   0.002686 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  #  ... dummy variable regression fit.2b <- lm(y~x*z,data=df) extraSS(fit.0,fit.1,com=fit.2b) #> Model 1: y ~ 1 #> Model 2: y ~ x #> Model A: y ~ x * z  #>  #>     DfO    RSSO DfA    RSSA Df      SS       F    Pr(>F)     #> 1vA   9 282.400   6  17.800  3 264.600 29.7303 0.0005347 *** #> 2vA   8  67.988   6  17.800  2  50.188  8.4586 0.0179459 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 lrt(fit.0,fit.1,com=fit.2b) #> Model 1: y ~ 1 #> Model 2: y ~ x #> Model A: y ~ x * z  #>  #>     DfO  logLikO DfA  logLikA Df   logLik  Chisq Pr(>Chisq)     #> 1vA   9 -30.8931   6 -17.0725  3 -13.8206 27.641  4.319e-06 *** #> 2vA   8 -23.7731   6 -17.0725  2  -6.7007 13.401    0.00123 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  #  ... ANOVAs fit.1 <- lm(y~w,data=df) fit.2 <- lm(y~w*z,data=df) extraSS(fit.0,fit.1,com=fit.2) #> Model 1: y ~ 1 #> Model 2: y ~ w #> Model A: y ~ w * z  #>  #>     DfO  RSSO DfA  RSSA Df    SS      F Pr(>F) #> 1vA   9 282.4   6 159.0  3 123.4 1.5522 0.2955 #> 2vA   8 262.8   6 159.0  2 103.8 1.9585 0.2215 lrt(fit.0,fit.1,com=fit.2) #> Model 1: y ~ 1 #> Model 2: y ~ w #> Model A: y ~ w * z  #>  #>     DfO  logLikO DfA  logLikA Df   logLik  Chisq Pr(>Chisq)   #> 1vA   9 -30.8931   6 -28.0210  3  -2.8721 5.7442    0.12474   #> 2vA   8 -30.5334   6 -28.0210  2  -2.5124 5.0249    0.08107 . #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1   ## Non-linear (nls()) models fit.0 = nls(y~c,data=df,start=list(c=10)) fit.1 = nls(y~a*x+c,data=df,start=list(a=1,c=1)) fit.2 = nls(y~b*x2+a*x+c,data=df,start=list(a=-1,b=0.3,c=10)) extraSS(fit.0,fit.1,com=fit.2) #> Model 1: y ~ c #> Model 2: y ~ a * x + c #> Model A: y ~ b * x2 + a * x + c  #>  #>     DfO    RSSO DfA    RSSA Df      SS      F    Pr(>F)     #> 1vA   9 282.400   7  27.617  2 254.783 32.290 0.0002925 *** #> 2vA   8  67.988   7  27.617  1  40.371 10.233 0.0150891 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 lrt(fit.0,fit.1,com=fit.2) #> Model 1: y ~ c #> Model 2: y ~ a * x + c #> Model A: y ~ b * x2 + a * x + c  #>  #>     DfO  logLikO DfA  logLikA Df   logLik   Chisq Pr(>Chisq)     #> 1vA   9 -30.8931   7 -19.2686  2 -11.6245 23.2491  8.944e-06 *** #> 2vA   8 -23.7731   7 -19.2686  1  -4.5045  9.0091   0.002686 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  ## General least-squares (gls()) models if (FALSE) {   require(nlme)   fit.0 <- gls(y~1,data=df,method=\"ML\")   fit.1 <- gls(y~x,data=df,method=\"ML\")   fit.2 <- gls(y~x2+x,data=df,method=\"ML\")   lrt(fit.0,fit.1, com=fit.2)   ## will return an error ... does not work with gls() models   # extraSS(fit.0,fit.1, com=fit.2) }"},{"path":"https://fishr-core-team.github.io/FSA/reference/fact2num.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts ","title":"Converts ","text":"Converts “numeric” factor levels numeric values.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/fact2num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts ","text":"","code":"fact2num(object)"},{"path":"https://fishr-core-team.github.io/FSA/reference/fact2num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts ","text":"object vector “numeric” factor levels converted numeric values.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/fact2num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts ","text":"numeric vector.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/fact2num.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Converts ","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/fact2num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts ","text":"","code":"junk <- factor(c(1,7,2,4,3,10)) str(junk) #>  Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 1 5 2 4 3 6 junk2 <- fact2num(junk) str(junk2) #>  num [1:6] 1 7 2 4 3 10  ## ONLY RUN IN INTERACTIVE MODE if (interactive()) {  bad <- factor(c(\"A\",\"B\",\"C\")) # This will result in an error -- levels are not 'numeric' bad2 <- fact2num(bad)  }  ## END IF INTERACTIVE MODE"},{"path":"https://fishr-core-team.github.io/FSA/reference/fishR.html","id":null,"dir":"Reference","previous_headings":"","what":"Opens web pages associated with the fishR website. — fishR","title":"Opens web pages associated with the fishR website. — fishR","text":"Opens web pages associated fishR website browser. user can open main page choose specific page open.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/fishR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Opens web pages associated with the fishR website. — fishR","text":"","code":"fishR(   where = c(\"home\", \"posts\", \"books\", \"IFAR\", \"AIFFD\", \"packages\", \"data\"),   open = TRUE )"},{"path":"https://fishr-core-team.github.io/FSA/reference/fishR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Opens web pages associated with the fishR website. — fishR","text":"string indicates particular page fishR website open. open logical indicates whether webpage opened default browser. Defaults TRUE; FALSE used unit testing.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/fishR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Opens web pages associated with the fishR website. — fishR","text":"None, webpage opened default browser.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/fishR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Opens web pages associated with the fishR website. — fishR","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/fishR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Opens web pages associated with the fishR website. — fishR","text":"","code":"if (FALSE) { ## Opens an external webpage ... only run interactively fishR()            # home page fishR(\"posts\")     # blog posts (some examples) page fishR(\"books\")     # examples page fishR(\"IFAR\")      # Introduction to Fisheries Analysis with R page fishR(\"AIFFD\")     # Analysis & Interpretation of Freshw. Fisher. Data page fishR(\"packages\")  # list of r-related fishereis packages fishR(\"data\")      # list of fisheries data sets }"},{"path":"https://fishr-core-team.github.io/FSA/reference/geomean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the geometric mean or geometric standard deviation. — geomean","title":"Calculates the geometric mean or geometric standard deviation. — geomean","text":"Calculates geometric mean standard deviation vector numeric values.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/geomean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the geometric mean or geometric standard deviation. — geomean","text":"","code":"geomean(x, na.rm = FALSE, zneg.rm = FALSE)  geosd(x, na.rm = FALSE, zneg.rm = FALSE)"},{"path":"https://fishr-core-team.github.io/FSA/reference/geomean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the geometric mean or geometric standard deviation. — geomean","text":"x Vector numeric values. na.rm Logical indicating whether remove missing values . zneg.rm Logical indicating whether ignore remove zero negative values found x.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/geomean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the geometric mean or geometric standard deviation. — geomean","text":"numeric value geometric mean geometric standard deviation numeric values x.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/geomean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the geometric mean or geometric standard deviation. — geomean","text":"geometric mean computed log transforming raw data x, computing arithmetic mean transformed data, back-transforming mean geometric mean exponentiating. geometric standard deviation computed log transforming raw data x, computing arithmetic standard deviation transformed data, back-transforming standard deviation geometric standard deviation exponentiating.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/geomean.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculates the geometric mean or geometric standard deviation. — geomean","text":"function largely implementation code suggested Russell Senior R-help November, 1999.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/geomean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the geometric mean or geometric standard deviation. — geomean","text":"","code":"## generate random lognormal data d <- rlnorm(500,meanlog=0,sdlog=1) # d has a mean on log scale of 0; thus, gm should be exp(0)~=1 # d has a sd on log scale of 1; thus, gsd should be exp(1)~=2.7 geomean(d) #> [1] 0.934946 geosd(d) #> [1] 2.663484  if (FALSE) { ## Demonstrate handling of zeros and negative values x <- seq(-1,5) # this will given an error geomean(x) # this will only give a warning, but might not be what you want geomean(x,zneg.rm=TRUE) }"},{"path":"https://fishr-core-team.github.io/FSA/reference/growthModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a function for a specific parameterization of the von Bertalanffy, Gompertz, Richards, and logistic growth functions. — growthModels","title":"Creates a function for a specific parameterization of the von Bertalanffy, Gompertz, Richards, and logistic growth functions. — growthModels","text":"Creates function specific parameterizations von Bertalanffy, Gompertz, Richards, logistic growth functions. Use growthFunShow() see equations growth function.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/growthModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a function for a specific parameterization of the von Bertalanffy, Gompertz, Richards, and logistic growth functions. — growthModels","text":"","code":"vbFuns(   param = c(\"Typical\", \"typical\", \"Traditional\", \"traditional\", \"BevertonHolt\",     \"Original\", \"original\", \"vonBertalanffy\", \"GQ\", \"GallucciQuinn\", \"Mooij\", \"Weisberg\",     \"Ogle\", \"Schnute\", \"Francis\", \"Laslett\", \"Polacheck\", \"Somers\", \"Somers2\", \"Pauly\",     \"Fabens\", \"Fabens2\", \"Wang\", \"Wang2\", \"Wang3\", \"Francis2\", \"Francis3\"),   simple = FALSE,   msg = FALSE )  GompertzFuns(   param = c(\"Ricker1\", \"Ricker2\", \"Ricker3\", \"QuinnDeriso1\", \"QuinnDeriso2\",     \"QuinnDeriso3\", \"QD1\", \"QD2\", \"QD3\", \"Original\", \"original\", \"Troynikov1\",     \"Troynikov2\"),   simple = FALSE,   msg = FALSE )  RichardsFuns(param = 1, simple = FALSE, msg = FALSE)  logisticFuns(   param = c(\"CJ1\", \"CJ2\", \"Karkach\", \"Haddon\", \"CampanaJones1\", \"CampanaJones2\"),   simple = FALSE,   msg = FALSE )  growthFunShow(   type = c(\"vonBertalanffy\", \"Gompertz\", \"Richards\", \"Logistic\", \"Schnute\",     \"SchnuteRichards\"),   param = NULL,   case = param,   plot = FALSE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/growthModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a function for a specific parameterization of the von Bertalanffy, Gompertz, Richards, and logistic growth functions. — growthModels","text":"param string (von Bertalanffy, Gompertz, logistic) numeric (Richards) indicates specific parameterization growth function. See details. simple logical indicates whether function accept parameter values first parameter argument (=FALSE; DEFAULT) whether individual parameters must specified separate arguments (=TRUE). msg logical indicates whether message growth function parameter definitions output (=TRUE) (=FALSE; DEFAULT). type string (growthFunShow) indicates type growth function show. case numeric indicates specific case Schnute function use. See details. plot logical indicates whether growth function expression shown equation simple plot. ... implemented.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/growthModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a function for a specific parameterization of the von Bertalanffy, Gompertz, Richards, and logistic growth functions. — growthModels","text":"functions ending xxxFuns return function can used predict fish size given vector ages values growth function parameters , parameterizations, values constants. result saved object function name. resulting function used, parameters ordered shown definitions parameters printed function called (msg=TRUE). simple=FALSE (DEFAULT), values parameters may included vector first parameter argument (order). Similarly, values constants may included vector first constant argument (.e., t1). simple=TRUE, parameters constants must declared individually. resulting function somewhat easier read simple=TRUE, less general applications. expression equation growth function may created growthFunShow. function type= used select major function type (e.g., von Bertalanffy, Gompertz, Richards, Logistic, Schnute) param= used select specific parameterization growth function. plot=TRUE, simple graphic created equation using plotmath pretty format.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/growthModels.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Creates a function for a specific parameterization of the von Bertalanffy, Gompertz, Richards, and logistic growth functions. — growthModels","text":"Take note following parameterizations (.e., param) growth function: von Bertalanffy ‘Original’ ‘vonBertalanffy’ synonymous ‘Typical’, ‘Traditional’, ‘BevertonHolt’. note ‘Ogle’ parameterization ‘Original’/‘vonBertalanffy’ ‘Typical’/‘Traditional’/‘BevertonHolt’ parameterizations special cases. Gompertz ‘Ricker2’ ‘QuinnDeriso1’ synonymous, ‘Ricker3’ ‘QuinnDeriso2’. parameterizations parameters Gompertz function varied confusing literature. attempted use uniform set parameters functions, makes direct comparison literature difficult. Common sources Gompertz models listed references . make comments aid comparisons literature. Within FSA, L0 mean length age 0, Linf mean asymptotic length, ti age inflection point, gi instantaneous growth rate inflection point, t* dimensionless parameter related time/age, dimensionless parameter related growth. Quinn Deriso (1999) functions (‘QuinnDerisoX’ functions), parameter equal lambda/K gi parameter equal K parameter . Also note Y L . Ricker (1979)[p. 705] functions (‘RickerX’ functions), parameter equal k gi parameter equal g parameter . Also note w L . Ricker (1979) functions presented Campana Jones (1992), parameter equal k parameter gi parameter equal G parameter . Also note X L . function Ricker (1975)[p. 232] ‘Ricker2’ parameter qual G gi parameter equal g parameter . Also note w L . function Quist et al. (2012)[p. 714] ‘Ricker1’ gi parameter equal G parameter ti parameter equal t0 parameter . function Katsanevakis Maravelias (2008) ‘Ricker1’ gi parameter equal k2 parameter ti parameter equal t2 parameter . Richards Within FSA, Linf mean asymptotic length, ti age inflection point, k controls slope inflection point (maximum relative growth rate), b dimensionless related vertical position (.e., size) inflection point, dimensionless related horizontal position (.e., age) inflection point, L0 mean length age-0. parameterizations (1-6) correspond functions/equations 1, 4, 5, 6, 7, 8, respectively, Tjorve Tjorve (2010). Note , S, k, d, B Linf, , k, b, L0, respectively, (FSA). (Tjorve Tjorve 2010) K appear . logistic Within FSA, L0 mean length age 0, Linf mean asymptotic length, ti age inflection point, gninf instantaneous growth rate negative infinity.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/growthModels.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Creates a function for a specific parameterization of the von Bertalanffy, Gompertz, Richards, and logistic growth functions. — growthModels","text":"12-Individual Growth.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/growthModels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Creates a function for a specific parameterization of the von Bertalanffy, Gompertz, Richards, and logistic growth functions. — growthModels","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Campana, S.E. C.M. Jones. 1992. Analysis otolith microstructure data. Pages 73-100 D.K. Stevenson S.E. Campana, editors. Otolith microstructure examination analysis. Canadian Special Publication Fisheries Aquatic Sciences 117. [(?) http://www.dfo-mpo.gc.ca/Library/141734.pdf.] Fabens, . 1965. Properties fitting von Bertalanffy growth curve. Growth 29:265-289. Francis, R..C.C. 1988. growth parameters estimated tagging age-length data comparable?  Canadian Journal Fisheries Aquatic Sciences, 45:936-942. Gallucci, V.F. T.J. Quinn II. 1979. Reparameterizing, fitting, testing simple growth model. Transactions American Fisheries Society, 108:14-25. Garcia-Berthou, E., G. Carmona-Catot, R. Merciai, D.H. Ogle. technical note seasonal growth models. Reviews Fish Biology Fisheries 22:635-640. [(?) https://www.researchgate.net/publication/257658359_A_technical_note_on_seasonal_growth_models.] Gompertz, B. 1825. nature function expressive law human mortality, new method determining value life contingencies. Philosophical Transactions Royal Society London. 115:513-583. Haddon, M., C. Mundy, D. Tarbath. 2008. Using inverse-logistic model describe growth increments Blacklip Abalone (Haliotis rubra) Tasmania. Fishery Bulletin 106:58-71. [(?) http://aquaticcommons.org/8857/1/haddon_Fish_Bull_2008.pdf.] Karkach, . S. 2006. Trajectories models individual growth. Demographic Research 15:347-400. [(?) http://www.demographic-research.org/volumes/vol15/12/15-12.pdf.] Katsanevakis, S. C.D. Maravelias. 2008. Modeling fish growth: multi-model inference better alternative priori using von Bertalanffy equation. Fish Fisheries 9:178-187. Mooij, W.M., J.M. Van Rooij, S. Wijnhoven. 1999. Analysis comparison fish growth small samples length--age data: Detection sexual dimorphism Eurasian Perch example. Transactions American Fisheries Society 128:483-490. Polacheck, T., J.P. Eveson, G.M. Laslett. 2004. Increase growth rates southern Bluefin Tuna (Thunnus maccoyii) four decades: 1960 2000. Canadian Journal Fisheries Aquatic Sciences, 61:307-322. Quinn, T. J. R. B. Deriso. 1999. Quantitative Fish Dynamics. Oxford University Press, New York, New York. 542 pages. Quist, M.C., M.. Pegg, D.R. DeVries. 2012. Age Growth. Chapter 15 .V. Zale, D.L Parrish, T.M. Sutton, Editors  Fisheries Techniques, Third Edition. American Fisheries Society, Bethesda, MD. Richards, F. J. 1959. flexible growth function empirical use. Journal Experimental Biology 10:290-300. Ricker, W.E. 1975. Computation interpretation biological statistics fish populations. Technical Report Bulletin 191, Bulletin Fisheries Research Board Canada. [(?) http://www.dfo-mpo.gc.ca/Library/1485.pdf.] Ricker, W.E. 1979. Growth rates models. Pages 677-743 W.S. Hoar, D.J. Randall, J.R. Brett, editors. Fish Physiology, Vol. 8: Bioenergetics Growth. Academic Press, NY, NY. [(?) https://books.google.com/books?id=CB1qu2VbKwQC&pg=PA705&lpg=PA705&dq=Gompertz+fish&source=bl&ots=y34lhFP4IU&sig=EM_DGEQMPGIn_DlgTcGIi_wbItE&hl=en&sa=X&ei=QmM4VZK6EpDAgwTt24CABw&ved=0CE8Q6AEwBw#v=onepage&q=Gompertz%20fish&f=false.] Schnute, J. 1981. versatile growth model statistically stable parameters. Canadian Journal Fisheries Aquatic Sciences, 38:1128-1140. Somers, . F. 1988. seasonally oscillating growth function. Fishbyte 6(1):8-11. [(?) http://www.worldfishcenter.org/Naga/na_2914.pdf.] Tjorve, E. K. M. C. Tjorve. 2010. unified approach Richards-model family use growth analyses: need two model forms. Journal Theoretical Biology 267:417-425. [(?) https://www.researchgate.net/profile/Even_Tjorve/publication/46218377_A_unified_approach_to_the_Richards-model_family_for_use_in_growth_analyses_why_we_need_only_two_model_forms/links/54ba83b80cf29e0cb04bd24e.pdf.] Troynikov, V. S., R. W. Day, . M. Leorke. Estimation seasonal growth parameters using stochastic Gompertz model tagging data. Journal Shellfish Research 17:833-838. [(?) https://www.researchgate.net/profile/Robert_Day2/publication/249340562_Estimation_of_seasonal_growth_parameters_using_a_stochastic_gompertz_model_for_tagging_data/links/54200fa30cf203f155c2a08a.pdf.] Vaughan, D. S. T. E. Helser. 1990. Status Red Drum stock Atlantic coast: Stock assessment report 1989. NOAA Technical Memorandum NMFS-SEFC-263, 117 p. [(?) http://docs.lib.noaa.gov/noaa_documents/NMFS/SEFSC/TM_NMFS_SEFSC/NMFS_SEFSC_TM_263.pdf.] Wang, Y.-G. 1998. improved Fabens method estimation growth parameters von Bertalanffy model individual asymptotes. Canadian Journal Fisheries Aquatic Sciences 55:397-400. Weisberg, S., G.R. Spangler, L. S. Richmond. 2010. Mixed effects models fish growth. Canadian Journal Fisheries Aquatic Sciences 67:269-277. Winsor, C.P. 1932. Gompertz curve growth curve. Proceedings National Academy Sciences. 18:1-8. [(?) http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1076153/pdf/pnas01729-0009.pdf.]","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/growthModels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a function for a specific parameterization of the von Bertalanffy, Gompertz, Richards, and logistic growth functions. — growthModels","text":"Derek H. Ogle, DerekOgle51@gmail.com, thanks Gabor Grothendieck hint using get().","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/growthModels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a function for a specific parameterization of the von Bertalanffy, Gompertz, Richards, and logistic growth functions. — growthModels","text":"","code":"########################################################### ## Simple Examples -- Von B ( vb1 <- vbFuns() ) #> function (t, Linf, K = NULL, t0 = NULL)  #> { #>     if (length(Linf) == 3) { #>         K <- Linf[[2]] #>         t0 <- Linf[[3]] #>         Linf <- Linf[[1]] #>     } #>     Linf * (1 - exp(-K * (t - t0))) #> } #> <bytecode: 0x556908bb6690> #> <environment: 0x556908bea118> ages <- 0:20 plot(vb1(ages,Linf=20,K=0.3,t0=-0.2)~ages,type=\"b\",pch=19)  ( vb2 <- vbFuns(\"Francis\") ) #> function (t, L1, L2 = NULL, L3 = NULL, t1, t3 = NULL)  #> { #>     if (length(L1) == 3) { #>         L2 <- L1[[2]] #>         L3 <- L1[[3]] #>         L1 <- L1[[1]] #>     } #>     if (length(t1) == 2) { #>         t3 <- t1[[2]] #>         t1 <- t1[[1]] #>     } #>     r <- (L3 - L2)/(L2 - L1) #>     L1 + (L3 - L1) * ((1 - r^(2 * ((t - t1)/(t3 - t1))))/(1 -  #>         r^2)) #> } #> <bytecode: 0x556908bc2738> #> <environment: 0x556908d2bec8> plot(vb2(ages,L1=10,L2=19,L3=20,t1=2,t3=18)~ages,type=\"b\",pch=19)  ( vb2c <- vbFuns(\"Francis\",simple=TRUE) )   # compare to vb2 #> function (t, L1, L2, L3, t1, t3)  #> { #>     r <- (L3 - L2)/(L2 - L1) #>     L1 + (L3 - L1) * ((1 - r^(2 * ((t - t1)/(t3 - t1))))/(1 -  #>         r^2)) #> } #> <bytecode: 0x556908bc45b0> #> <environment: 0x55690905bdf0>  ## Simple Examples -- Gompertz ( gomp1 <- GompertzFuns() ) #> function (t, Linf, gi = NULL, ti = NULL)  #> { #>     if (length(Linf) == 3) { #>         gi <- Linf[[2]] #>         ti <- Linf[[3]] #>         Linf <- Linf[[1]] #>     } #>     Linf * exp(-exp(-gi * (t - ti))) #> } #> <bytecode: 0x55690922e720> #> <environment: 0x5569092368a8> plot(gomp1(ages,Linf=800,gi=0.5,ti=5)~ages,type=\"b\",pch=19)  ( gomp2 <- GompertzFuns(\"Ricker2\") ) #> function (t, L0, a = NULL, gi = NULL)  #> { #>     if (length(L0) == 3) { #>         a <- L0[[2]] #>         gi <- L0[[3]] #>         L0 <- L0[[1]] #>     } #>     L0 * exp(a * (1 - exp(-gi * t))) #> } #> <bytecode: 0x556909231280> #> <environment: 0x55690938a2a0> plot(gomp2(ages,L0=2,a=6,gi=0.5)~ages,type=\"b\",pch=19)  ( gomp2c <- GompertzFuns(\"Ricker2\",simple=TRUE) )   # compare to gomp2 #> function (t, L0, a, gi)  #> { #>     L0 * exp(a * (1 - exp(-gi * t))) #> } #> <bytecode: 0x556909230598> #> <environment: 0x55690947a570> ( gompT <- GompertzFuns(\"Troynikov1\")) #> function (Lm, dt, Linf, gi = NULL)  #> { #>     if (length(Linf) == 2) { #>         gi <- Linf[2] #>         Linf <- Linf[1] #>     } #>     Linf * ((Lm/Linf)^exp(-gi * dt)) - Lm #> } #> <bytecode: 0x5569092353d0> #> <environment: 0x5569094d14e0>  ## Simple Examples -- Richards ( rich1 <- RichardsFuns() ) #> function (t, Linf, k = NULL, a = NULL, b = NULL)  #> { #>     if (length(Linf) == 4) { #>         k <- Linf[[2]] #>         a <- Linf[[3]] #>         b <- Linf[[4]] #>         Linf <- Linf[[1]] #>     } #>     Linf * (1 - a * exp(-k * t))^b #> } #> <bytecode: 0x55690953d1a8> #> <environment: 0x556909549218> plot(rich1(ages,Linf=800,k=0.5,a=1,b=6)~ages,type=\"b\",pch=19)  ( rich2 <- RichardsFuns(2) ) #> function (t, Linf, k = NULL, ti = NULL, b = NULL)  #> { #>     if (length(Linf) == 4) { #>         k <- Linf[[2]] #>         ti <- Linf[[3]] #>         b <- Linf[[4]] #>         Linf <- Linf[[1]] #>     } #>     Linf * (1 - (1/b) * exp(-k * (t - ti)))^b #> } #> <bytecode: 0x55690953bc00> #> <environment: 0x556909639060> plot(rich2(ages,Linf=800,k=0.5,ti=3,b=6)~ages,type=\"b\",pch=19)  ( rich3 <- RichardsFuns(3) ) #> function (t, Linf, k = NULL, ti = NULL, b = NULL)  #> { #>     if (length(Linf) == 4) { #>         k <- Linf[[2]] #>         ti <- Linf[[3]] #>         b <- Linf[[4]] #>         Linf <- Linf[[1]] #>     } #>     Linf/((1 + b * exp(-k * (t - ti)))^(1/b)) #> } #> <bytecode: 0x55690953e060> #> <environment: 0x55690971d480> plot(rich3(ages,Linf=800,k=0.5,ti=3,b=0.15)~ages,type=\"b\",pch=19)  ( rich4 <- RichardsFuns(4) ) #> function (t, Linf, k = NULL, ti = NULL, b = NULL)  #> { #>     if (length(Linf) == 4) { #>         k <- Linf[[2]] #>         ti <- Linf[[3]] #>         b <- Linf[[4]] #>         Linf <- Linf[[1]] #>     } #>     Linf * (1 + (b - 1) * exp(-k * (t - ti)))^(1/(1 - b)) #> } #> <bytecode: 0x5569095403e0> #> <environment: 0x5569097fdbc0> plot(rich4(ages,Linf=800,k=0.5,ti=3,b=0.95)~ages,type=\"b\",pch=19) lines(rich4(ages,Linf=800,k=0.5,ti=3,b=1.5)~ages,type=\"b\",pch=19,col=\"blue\")  ( rich5 <- RichardsFuns(5) ) #> function (t, Linf, k = NULL, L0 = NULL, b = NULL)  #> { #>     if (length(Linf) == 4) { #>         k <- Linf[[2]] #>         L0 <- Linf[[3]] #>         b <- Linf[[4]] #>         Linf <- Linf[[1]] #>     } #>     Linf * (1 + (((L0/Linf)^(1 - b)) - 1) * exp(-k * t))^(1/(1 -  #>         b)) #> } #> <bytecode: 0x5569095423a8> #> <environment: 0x5569099681c0> plot(rich5(ages,Linf=800,k=0.5,L0=50,b=1.5)~ages,type=\"b\",pch=19)  ( rich6 <- RichardsFuns(6) ) #> function (t, Linf, k = NULL, ti = NULL, Lninf = NULL, b = NULL)  #> { #>     if (length(Linf) == 5) { #>         k <- Linf[[2]] #>         ti <- Linf[[3]] #>         Lninf <- Linf[[3]] #>         b <- Linf[[4]] #>         Linf <- Linf[[1]] #>     } #>     Lninf + (Linf - Lninf) * (1 + (b - 1) * exp(-k * (t - ti)))^(1/(1 -  #>         b)) #> } #> <bytecode: 0x556909543ed8> #> <environment: 0x556909aa0858> plot(rich6(ages,Linf=800,k=0.5,ti=3,Lninf=50,b=1.5)~ages,type=\"b\",pch=19)  ( rich2c <- RichardsFuns(2,simple=TRUE) ) # compare to rich2 #> function (t, Linf, k, ti, b)  #> { #>     Linf * (1 - (1/b) * exp(-k * (t - ti)))^b #> } #> <bytecode: 0x55690953e920> #> <environment: 0x556909b95698>  ## Simple Examples -- Logistic ( log1 <- logisticFuns() ) #> function (t, Linf, gninf = NULL, ti = NULL)  #> { #>     if (length(Linf) == 3) { #>         gninf <- Linf[[2]] #>         ti <- Linf[[3]] #>         Linf <- Linf[[1]] #>     } #>     Linf/(1 + exp(-gninf * (t - ti))) #> } #> <bytecode: 0x556909c01258> #> <environment: 0x556909c09108> plot(log1(ages,Linf=800,gninf=0.5,ti=5)~ages,type=\"b\",pch=19)  ( log2 <- logisticFuns(\"CJ2\") ) #> function (t, Linf, gninf = NULL, a = NULL)  #> { #>     if (length(Linf) == 3) { #>         gninf <- Linf[[2]] #>         a <- Linf[[3]] #>         Linf <- Linf[[1]] #>     } #>     Linf/(1 + a * exp(-gninf * t)) #> } #> <bytecode: 0x556909c03d80> #> <environment: 0x556909d11df8> plot(log2(ages,Linf=800,gninf=0.5,a=10)~ages,type=\"b\",pch=19)  ( log2c <- logisticFuns(\"CJ2\",simple=TRUE) ) # compare to log2 #> function (t, Linf, gninf, a)  #> { #>     Linf/(1 + a * exp(-gninf * t)) #> } #> <bytecode: 0x556909c02f10> #> <environment: 0x556909df61a8> ( log3 <- logisticFuns(\"Karkach\") ) #> function (t, Linf, L0 = NULL, gninf = NULL)  #> { #>     if (length(Linf) == 3) { #>         L0 <- Linf[[2]] #>         gninf <- Linf[[3]] #>         Linf <- Linf[[1]] #>     } #>     L0 * Linf/(L0 + (Linf - L0) * exp(-gninf * t)) #> } #> <bytecode: 0x556909c06758> #> <environment: 0x556909e484c8> plot(log3(ages,L0=10,Linf=800,gninf=0.5)~ages,type=\"b\",pch=19)  ( log4 <- logisticFuns(\"Haddon\") ) #> function (Lm, dLmax, L50 = NULL, L95 = NULL)  #> { #>     if (length(dLmax) == 3) { #>         L50 <- dLmax[2] #>         L95 <- dLmax[3] #>         dLmax <- dLmax[1] #>     } #>     dLmax/(1 + exp(log(19) * ((Lm - L50)/(L95 - L50)))) #> } #> <bytecode: 0x556909c05140> #> <environment: 0x556909f284d0>   ########################################################### ## Examples of fitting ##   After the last example a plot is constructed with three ##   or four lines on top of each other illustrating that the ##   parameterizations all produce the same fitted values. ##   However, observe the correlations in the summary() results.  ## Von B plot(tl~age,data=SpotVA1,pch=19)  # Fitting the typical parameterization of the von B function fit1 <- nls(tl~vb1(age,Linf,K,t0),data=SpotVA1,             start=vbStarts(tl~age,data=SpotVA1)) summary(fit1,correlation=TRUE) #>  #> Formula: tl ~ vb1(age, Linf, K, t0) #>  #> Parameters: #>      Estimate Std. Error t value Pr(>|t|)     #> Linf 16.79818    1.93455   8.683  < 2e-16 *** #> K     0.22493    0.06922   3.250  0.00125 **  #> t0   -2.55738    0.47496  -5.384 1.24e-07 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.053 on 400 degrees of freedom #>  #> Correlation of Parameter Estimates: #>    Linf  K     #> K  -0.99       #> t0 -0.94  0.98 #>  #> Number of iterations to convergence: 10  #> Achieved convergence tolerance: 5.566e-06 #>  curve(vb1(x,Linf=coef(fit1)),from=0,to=5,col=\"red\",lwd=10,add=TRUE)  # Fitting the Francis parameterization of the von B function fit2 <- nls(tl~vb2c(age,L1,L2,L3,t1=0,t3=5),data=SpotVA1,             start=vbStarts(tl~age,data=SpotVA1,type=\"Francis\",ages2use=c(0,5))) summary(fit2,correlation=TRUE) #>  #> Formula: tl ~ vb2c(age, L1, L2, L3, t1 = 0, t3 = 5) #>  #> Parameters: #>    Estimate Std. Error t value Pr(>|t|)     #> L1  7.34803    0.18749   39.19   <2e-16 *** #> L2 11.41275    0.08344  136.78   <2e-16 *** #> L3 13.72912    0.32219   42.61   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.053 on 400 degrees of freedom #>  #> Correlation of Parameter Estimates: #>    L1    L2    #> L2 -0.43       #> L3  0.48  0.20 #>  #> Number of iterations to convergence: 7  #> Achieved convergence tolerance: 9.451e-06 #>  curve(vb2c(x,L1=coef(fit2)[1],L2=coef(fit2)[2],L3=coef(fit2)[3],t1=0,t3=5),       from=0,to=5,col=\"blue\",lwd=5,add=TRUE)  # Fitting the Schnute parameterization of the von B function vb3 <- vbFuns(\"Schnute\") fit3 <- nls(tl~vb3(age,L1,L3,K,t1=0,t3=4),data=SpotVA1,             start=vbStarts(tl~age,data=SpotVA1,type=\"Schnute\",ages2use=c(0,4))) summary(fit3,correlation=TRUE) #>  #> Formula: tl ~ vb3(age, L1, L3, K, t1 = 0, t3 = 4) #>  #> Parameters: #>    Estimate Std. Error t value Pr(>|t|)     #> L1  7.34803    0.18749   39.19  < 2e-16 *** #> L3 12.95500    0.18740   69.13  < 2e-16 *** #> K   0.22494    0.06922    3.25  0.00125 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.053 on 400 degrees of freedom #>  #> Correlation of Parameter Estimates: #>    L1    L3    #> L3  0.30       #> K  -0.80 -0.71 #>  #> Number of iterations to convergence: 8  #> Achieved convergence tolerance: 8.185e-06 #>  curve(vb3(x,L1=coef(fit3),t1=c(0,4)),from=0,to=5,col=\"green\",lwd=2,add=TRUE)   ## Gompertz # Make some fake data using the original parameterization gompO <- GompertzFuns(\"original\") # setup ages, sample sizes (general reduction in numbers with # increasing age), and additive SD to model t <- 1:15 n <- c(10,40,35,25,12,10,10,8,6,5,3,3,3,2,2) sd <- 15 # expand ages ages <- rep(t,n) # get lengths from gompertz and a random error for individuals lens <- gompO(ages,Linf=450,a=1,gi=0.3)+rnorm(length(ages),0,sd) # put together as a data.frame df <- data.frame(age=ages,len=round(lens,0))  plot(len~age,data=df,pch=19,col=rgb(0,0,0,1/5))    # Fit first Ricker parameterization fit1 <- nls(len~gomp1(age,Linf,gi,ti),data=df,start=list(Linf=500,gi=0.3,ti=3)) summary(fit1,correlation=TRUE) #>  #> Formula: len ~ gomp1(age, Linf, gi, ti) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Linf 4.563e+02  6.231e+00   73.23   <2e-16 *** #> gi   2.998e-01  9.123e-03   32.86   <2e-16 *** #> ti   3.423e+00  6.060e-02   56.49   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 15.65 on 171 degrees of freedom #>  #> Correlation of Parameter Estimates: #>    Linf  gi    #> gi -0.84       #> ti  0.88 -0.73 #>  #> Number of iterations to convergence: 3  #> Achieved convergence tolerance: 5.562e-07 #>  curve(gomp1(x,Linf=coef(fit1)),from=0,to=15,col=\"red\",lwd=10,add=TRUE)  # Fit third Ricker parameterization fit2 <- nls(len~gomp2(age,L0,a,gi),data=df,start=list(L0=30,a=3,gi=0.3)) summary(fit2,correlation=TRUE) #>  #> Formula: len ~ gomp2(age, L0, a, gi) #>  #> Parameters: #>     Estimate Std. Error t value Pr(>|t|)     #> L0 28.011977   1.912871   14.64   <2e-16 *** #> a   2.790547   0.060744   45.94   <2e-16 *** #> gi  0.299777   0.009123   32.86   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 15.65 on 171 degrees of freedom #>  #> Correlation of Parameter Estimates: #>    L0    a     #> a  -0.98       #> gi -0.90  0.82 #>  #> Number of iterations to convergence: 3  #> Achieved convergence tolerance: 9.416e-06 #>  curve(gomp2(x,L0=coef(fit2)),from=0,to=15,col=\"blue\",lwd=5,add=TRUE)  # Fit third Quinn and Deriso parameterization (using simple=TRUE model) gomp3 <- GompertzFuns(\"QD3\",simple=TRUE) fit3 <- nls(len~gomp3(age,Linf,gi,t0),data=df,start=list(Linf=500,gi=0.3,t0=0)) summary(fit3,correlation=TRUE) #>  #> Formula: len ~ gomp3(age, Linf, gi, t0) #>  #> Parameters: #>        Estimate Std. Error t value Pr(>|t|)     #> Linf 456.313768   6.231062  73.232  < 2e-16 *** #> gi     0.299776   0.009123  32.858  < 2e-16 *** #> t0    -0.595395   0.184092  -3.234  0.00146 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 15.65 on 171 degrees of freedom #>  #> Correlation of Parameter Estimates: #>    Linf  gi    #> gi -0.84       #> t0 -0.74  0.97 #>  #> Number of iterations to convergence: 4  #> Achieved convergence tolerance: 4.942e-07 #>  curve(gomp3(x,Linf=coef(fit3)[1],gi=coef(fit3)[2],t0=coef(fit3)[3]),       from=0,to=15,col=\"green\",lwd=2,add=TRUE)   ## Richards  if (FALSE) { # Fit first Richards parameterization ... DOES NOT CONVERGE fit1 <- nls(len~rich1(age,Linf,k,a,b),data=df,             start=list(Linf=450,k=0.3,a=0.2,b=3)) summary(fit1,correlation=TRUE) curve(rich1(x,Linf=coef(fit1)),from=0,to=15,col=\"red\",lwd=10,add=TRUE)  # Fit second Richards parameterization ... DOES NOT CONVERGE fit2 <- nls(len~rich2(age,Linf,k,ti,b),data=df,             start=list(Linf=450,k=0.25,ti=3,b=3)) summary(fit2,correlation=TRUE) curve(rich2(x,Linf=coef(fit2)),from=0,to=15,col=\"blue\",lwd=7,add=TRUE) }  plot(len~age,data=df,pch=19,col=rgb(0,0,0,1/5))  # Fit third Richards parameterization fit3 <- nls(len~rich3(age,Linf,k,ti,b),data=df,             start=list(Linf=450,k=0.25,ti=3,b=-0.1)) summary(fit3,correlation=TRUE) #>  #> Formula: len ~ rich3(age, Linf, k, ti, b) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Linf 450.93722    8.80978  51.186   <2e-16 *** #> k      0.32411    0.03314   9.781   <2e-16 *** #> ti     3.62654    0.25312  14.328   <2e-16 *** #> b      0.14402    0.18597   0.774     0.44     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 15.66 on 170 degrees of freedom #>  #> Correlation of Parameter Estimates: #>    Linf  k     ti    #> k  -0.87             #> ti -0.58  0.88       #> b  -0.75  0.96  0.97 #>  #> Number of iterations to convergence: 4  #> Achieved convergence tolerance: 8.748e-06 #>  curve(rich3(x,Linf=coef(fit3)),from=0,to=15,col=\"green\",lwd=4,add=TRUE)  # Fit fourth Richards parameterization fit4 <- nls(len~rich4(age,Linf,k,ti,b),data=df,             start=list(Linf=450,k=0.25,ti=3,b=0.7)) summary(fit4,correlation=TRUE) #>  #> Formula: len ~ rich4(age, Linf, k, ti, b) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Linf 450.93725    8.80980  51.186  < 2e-16 *** #> k      0.32411    0.03314   9.781  < 2e-16 *** #> ti     3.62652    0.25312  14.328  < 2e-16 *** #> b      1.14401    0.18597   6.151 5.33e-09 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 15.66 on 170 degrees of freedom #>  #> Correlation of Parameter Estimates: #>    Linf  k     ti    #> k  -0.87             #> ti -0.58  0.88       #> b  -0.75  0.96  0.97 #>  #> Number of iterations to convergence: 4  #> Achieved convergence tolerance: 1.917e-06 #>  curve(rich4(x,Linf=coef(fit4)),from=0,to=15,col=\"black\",lwd=1,add=TRUE)   ## Logistic plot(len~age,data=df,pch=19,col=rgb(0,0,0,1/5))  # Fit first Campana-Jones parameterization fit1 <- nls(len~log1(age,Linf,gninf,ti),data=df,             start=list(Linf=450,gninf=0.45,ti=4)) summary(fit1,correlation=TRUE) #>  #> Formula: len ~ log1(age, Linf, gninf, ti) #>  #> Parameters: #>        Estimate Std. Error t value Pr(>|t|)     #> Linf  430.72662    4.75127   90.66   <2e-16 *** #> gninf   0.47069    0.01228   38.33   <2e-16 *** #> ti      4.48165    0.07048   63.58   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 16.3 on 171 degrees of freedom #>  #> Correlation of Parameter Estimates: #>       Linf  gninf #> gninf -0.71       #> ti     0.88 -0.74 #>  #> Number of iterations to convergence: 4  #> Achieved convergence tolerance: 7.626e-07 #>  curve(log1(x,Linf=coef(fit1)),from=0,to=15,col=\"red\",lwd=10,add=TRUE)  # Fit second Campana-Jones parameterization fit2 <- nls(len~log2(age,Linf,gninf,a),data=df,             start=list(Linf=450,gninf=0.45,a=7)) summary(fit2,correlation=TRUE) #>  #> Formula: len ~ log2(age, Linf, gninf, a) #>  #> Parameters: #>        Estimate Std. Error t value Pr(>|t|)     #> Linf  430.72616    4.75126   90.66   <2e-16 *** #> gninf   0.47069    0.01228   38.33   <2e-16 *** #> a       8.24373    0.31031   26.57   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 16.3 on 171 degrees of freedom #>  #> Correlation of Parameter Estimates: #>       Linf  gninf #> gninf -0.71       #> a     -0.26  0.81 #>  #> Number of iterations to convergence: 4  #> Achieved convergence tolerance: 8.44e-06 #>  curve(log2(x,Linf=coef(fit2)),from=0,to=15,col=\"blue\",lwd=5,add=TRUE)  # Fit Karkach parameterization (using simple=TRUE model) log3 <- logisticFuns(\"Karkach\",simple=TRUE) fit3 <- nls(len~log3(age,Linf,L0,gninf),data=df,             start=list(Linf=450,L0=30,gninf=0.45)) summary(fit3,correlation=TRUE) #>  #> Formula: len ~ log3(age, Linf, L0, gninf) #>  #> Parameters: #>        Estimate Std. Error t value Pr(>|t|)     #> Linf  430.72705    4.75129   90.66   <2e-16 *** #> L0     46.59678    1.76836   26.35   <2e-16 *** #> gninf   0.47068    0.01228   38.33   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 16.3 on 171 degrees of freedom #>  #> Correlation of Parameter Estimates: #>       Linf  L0    #> L0     0.52       #> gninf -0.71 -0.92 #>  #> Number of iterations to convergence: 5  #> Achieved convergence tolerance: 6.74e-06 #>  curve(log3(x,Linf=coef(fit3)[1],L0=coef(fit3)[2],gninf=coef(fit3)[3]),       from=0,to=15,col=\"green\",lwd=2,add=TRUE)    ############################################################################# ## Create expressions of the models ############################################################################# # Typical von Bertalanffy ... Show as a stand-alone plot growthFunShow(\"vonBertalanffy\",\"Typical\",plot=TRUE)  #> expression(E(L[t]) == L[infinity] * bgroup(\"(\", 1 - e^{ #>     -K * (t ~ -~t[0]) #> }, \")\")) # Get and save the expression ( tmp <- growthFunShow(\"vonBertalanffy\",\"Typical\") ) #> expression(E(L[t]) == L[infinity] * bgroup(\"(\", 1 - e^{ #>     -K * (t ~ -~t[0]) #> }, \")\")) # Use expression as title on a plot lens <- vb1(ages,Linf=20,K=0.3,t0=-0.2) plot(lens~ages,type=\"b\",pch=19,main=tmp) # Put expression in the main plot text(10,5,tmp)  # Put multiple expressions on a plot op <- par(mar=c(0.1,0.1,0.1,0.1)) plot(0,type=\"n\",xlab=\"\",ylab=\"\",xlim=c(0,1),ylim=c(0,3),xaxt=\"n\",yaxt=\"n\") text(0,2.5,\"Original:\",pos=4) text(0.5,2.5,growthFunShow(\"vonBertalanffy\",\"Original\")) text(0,1.5,\"Typical:\",pos=4) text(0.5,1.5,growthFunShow(\"vonBertalanffy\",\"Typical\")) text(0,0.5,\"Francis:\",pos=4) text(0.5,0.5,growthFunShow(\"vonBertalanffy\",\"Francis\"))  par(op)"},{"path":"https://fishr-core-team.github.io/FSA/reference/headtail.html","id":null,"dir":"Reference","previous_headings":"","what":"Shows rows from the head and tail of a data frame or matrix. — headtail","title":"Shows rows from the head and tail of a data frame or matrix. — headtail","text":"Shows rows head tail data frame matrix.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/headtail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shows rows from the head and tail of a data frame or matrix. — headtail","text":"","code":"headtail(x, n = 3L, which = NULL, addrownums = TRUE, ...)"},{"path":"https://fishr-core-team.github.io/FSA/reference/headtail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shows rows from the head and tail of a data frame or matrix. — headtail","text":"x data frame matrix. n single numeric indicates number rows display head tail structure. numeric string vector contains column numbers names display. Defaults showing columns. addrownums row names MATRIX, create row numbers. ... Arguments passed methods.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/headtail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shows rows from the head and tail of a data frame or matrix. — headtail","text":"matrix data.frame 2*n rows.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/headtail.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Shows rows from the head and tail of a data frame or matrix. — headtail","text":"n larger number rows x x displayed.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/headtail.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shows rows from the head and tail of a data frame or matrix. — headtail","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/headtail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shows rows from the head and tail of a data frame or matrix. — headtail","text":"","code":"headtail(iris) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species #> 1            5.1         3.5          1.4         0.2    setosa #> 2            4.9         3.0          1.4         0.2    setosa #> 3            4.7         3.2          1.3         0.2    setosa #> 148          6.5         3.0          5.2         2.0 virginica #> 149          6.2         3.4          5.4         2.3 virginica #> 150          5.9         3.0          5.1         1.8 virginica headtail(iris,10) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species #> 1            5.1         3.5          1.4         0.2    setosa #> 2            4.9         3.0          1.4         0.2    setosa #> 3            4.7         3.2          1.3         0.2    setosa #> 4            4.6         3.1          1.5         0.2    setosa #> 5            5.0         3.6          1.4         0.2    setosa #> 6            5.4         3.9          1.7         0.4    setosa #> 7            4.6         3.4          1.4         0.3    setosa #> 8            5.0         3.4          1.5         0.2    setosa #> 9            4.4         2.9          1.4         0.2    setosa #> 10           4.9         3.1          1.5         0.1    setosa #> 141          6.7         3.1          5.6         2.4 virginica #> 142          6.9         3.1          5.1         2.3 virginica #> 143          5.8         2.7          5.1         1.9 virginica #> 144          6.8         3.2          5.9         2.3 virginica #> 145          6.7         3.3          5.7         2.5 virginica #> 146          6.7         3.0          5.2         2.3 virginica #> 147          6.3         2.5          5.0         1.9 virginica #> 148          6.5         3.0          5.2         2.0 virginica #> 149          6.2         3.4          5.4         2.3 virginica #> 150          5.9         3.0          5.1         1.8 virginica headtail(iris,which=c(\"Sepal.Length\",\"Sepal.Width\",\"Species\")) #>     Sepal.Length Sepal.Width   Species #> 1            5.1         3.5    setosa #> 2            4.9         3.0    setosa #> 3            4.7         3.2    setosa #> 148          6.5         3.0 virginica #> 149          6.2         3.4 virginica #> 150          5.9         3.0 virginica headtail(iris,which=grep(\"Sepal\",names(iris))) #>     Sepal.Length Sepal.Width #> 1            5.1         3.5 #> 2            4.9         3.0 #> 3            4.7         3.2 #> 148          6.5         3.0 #> 149          6.2         3.4 #> 150          5.9         3.0 headtail(iris,n=200) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            5.1         3.5          1.4         0.2     setosa #> 2            4.9         3.0          1.4         0.2     setosa #> 3            4.7         3.2          1.3         0.2     setosa #> 4            4.6         3.1          1.5         0.2     setosa #> 5            5.0         3.6          1.4         0.2     setosa #> 6            5.4         3.9          1.7         0.4     setosa #> 7            4.6         3.4          1.4         0.3     setosa #> 8            5.0         3.4          1.5         0.2     setosa #> 9            4.4         2.9          1.4         0.2     setosa #> 10           4.9         3.1          1.5         0.1     setosa #> 11           5.4         3.7          1.5         0.2     setosa #> 12           4.8         3.4          1.6         0.2     setosa #> 13           4.8         3.0          1.4         0.1     setosa #> 14           4.3         3.0          1.1         0.1     setosa #> 15           5.8         4.0          1.2         0.2     setosa #> 16           5.7         4.4          1.5         0.4     setosa #> 17           5.4         3.9          1.3         0.4     setosa #> 18           5.1         3.5          1.4         0.3     setosa #> 19           5.7         3.8          1.7         0.3     setosa #> 20           5.1         3.8          1.5         0.3     setosa #> 21           5.4         3.4          1.7         0.2     setosa #> 22           5.1         3.7          1.5         0.4     setosa #> 23           4.6         3.6          1.0         0.2     setosa #> 24           5.1         3.3          1.7         0.5     setosa #> 25           4.8         3.4          1.9         0.2     setosa #> 26           5.0         3.0          1.6         0.2     setosa #> 27           5.0         3.4          1.6         0.4     setosa #> 28           5.2         3.5          1.5         0.2     setosa #> 29           5.2         3.4          1.4         0.2     setosa #> 30           4.7         3.2          1.6         0.2     setosa #> 31           4.8         3.1          1.6         0.2     setosa #> 32           5.4         3.4          1.5         0.4     setosa #> 33           5.2         4.1          1.5         0.1     setosa #> 34           5.5         4.2          1.4         0.2     setosa #> 35           4.9         3.1          1.5         0.2     setosa #> 36           5.0         3.2          1.2         0.2     setosa #> 37           5.5         3.5          1.3         0.2     setosa #> 38           4.9         3.6          1.4         0.1     setosa #> 39           4.4         3.0          1.3         0.2     setosa #> 40           5.1         3.4          1.5         0.2     setosa #> 41           5.0         3.5          1.3         0.3     setosa #> 42           4.5         2.3          1.3         0.3     setosa #> 43           4.4         3.2          1.3         0.2     setosa #> 44           5.0         3.5          1.6         0.6     setosa #> 45           5.1         3.8          1.9         0.4     setosa #> 46           4.8         3.0          1.4         0.3     setosa #> 47           5.1         3.8          1.6         0.2     setosa #> 48           4.6         3.2          1.4         0.2     setosa #> 49           5.3         3.7          1.5         0.2     setosa #> 50           5.0         3.3          1.4         0.2     setosa #> 51           7.0         3.2          4.7         1.4 versicolor #> 52           6.4         3.2          4.5         1.5 versicolor #> 53           6.9         3.1          4.9         1.5 versicolor #> 54           5.5         2.3          4.0         1.3 versicolor #> 55           6.5         2.8          4.6         1.5 versicolor #> 56           5.7         2.8          4.5         1.3 versicolor #> 57           6.3         3.3          4.7         1.6 versicolor #> 58           4.9         2.4          3.3         1.0 versicolor #> 59           6.6         2.9          4.6         1.3 versicolor #> 60           5.2         2.7          3.9         1.4 versicolor #> 61           5.0         2.0          3.5         1.0 versicolor #> 62           5.9         3.0          4.2         1.5 versicolor #> 63           6.0         2.2          4.0         1.0 versicolor #> 64           6.1         2.9          4.7         1.4 versicolor #> 65           5.6         2.9          3.6         1.3 versicolor #> 66           6.7         3.1          4.4         1.4 versicolor #> 67           5.6         3.0          4.5         1.5 versicolor #> 68           5.8         2.7          4.1         1.0 versicolor #> 69           6.2         2.2          4.5         1.5 versicolor #> 70           5.6         2.5          3.9         1.1 versicolor #> 71           5.9         3.2          4.8         1.8 versicolor #> 72           6.1         2.8          4.0         1.3 versicolor #> 73           6.3         2.5          4.9         1.5 versicolor #> 74           6.1         2.8          4.7         1.2 versicolor #> 75           6.4         2.9          4.3         1.3 versicolor #> 76           6.6         3.0          4.4         1.4 versicolor #> 77           6.8         2.8          4.8         1.4 versicolor #> 78           6.7         3.0          5.0         1.7 versicolor #> 79           6.0         2.9          4.5         1.5 versicolor #> 80           5.7         2.6          3.5         1.0 versicolor #> 81           5.5         2.4          3.8         1.1 versicolor #> 82           5.5         2.4          3.7         1.0 versicolor #> 83           5.8         2.7          3.9         1.2 versicolor #> 84           6.0         2.7          5.1         1.6 versicolor #> 85           5.4         3.0          4.5         1.5 versicolor #> 86           6.0         3.4          4.5         1.6 versicolor #> 87           6.7         3.1          4.7         1.5 versicolor #> 88           6.3         2.3          4.4         1.3 versicolor #> 89           5.6         3.0          4.1         1.3 versicolor #> 90           5.5         2.5          4.0         1.3 versicolor #> 91           5.5         2.6          4.4         1.2 versicolor #> 92           6.1         3.0          4.6         1.4 versicolor #> 93           5.8         2.6          4.0         1.2 versicolor #> 94           5.0         2.3          3.3         1.0 versicolor #> 95           5.6         2.7          4.2         1.3 versicolor #> 96           5.7         3.0          4.2         1.2 versicolor #> 97           5.7         2.9          4.2         1.3 versicolor #> 98           6.2         2.9          4.3         1.3 versicolor #> 99           5.1         2.5          3.0         1.1 versicolor #> 100          5.7         2.8          4.1         1.3 versicolor #> 101          6.3         3.3          6.0         2.5  virginica #> 102          5.8         2.7          5.1         1.9  virginica #> 103          7.1         3.0          5.9         2.1  virginica #> 104          6.3         2.9          5.6         1.8  virginica #> 105          6.5         3.0          5.8         2.2  virginica #> 106          7.6         3.0          6.6         2.1  virginica #> 107          4.9         2.5          4.5         1.7  virginica #> 108          7.3         2.9          6.3         1.8  virginica #> 109          6.7         2.5          5.8         1.8  virginica #> 110          7.2         3.6          6.1         2.5  virginica #> 111          6.5         3.2          5.1         2.0  virginica #> 112          6.4         2.7          5.3         1.9  virginica #> 113          6.8         3.0          5.5         2.1  virginica #> 114          5.7         2.5          5.0         2.0  virginica #> 115          5.8         2.8          5.1         2.4  virginica #> 116          6.4         3.2          5.3         2.3  virginica #> 117          6.5         3.0          5.5         1.8  virginica #> 118          7.7         3.8          6.7         2.2  virginica #> 119          7.7         2.6          6.9         2.3  virginica #> 120          6.0         2.2          5.0         1.5  virginica #> 121          6.9         3.2          5.7         2.3  virginica #> 122          5.6         2.8          4.9         2.0  virginica #> 123          7.7         2.8          6.7         2.0  virginica #> 124          6.3         2.7          4.9         1.8  virginica #> 125          6.7         3.3          5.7         2.1  virginica #> 126          7.2         3.2          6.0         1.8  virginica #> 127          6.2         2.8          4.8         1.8  virginica #> 128          6.1         3.0          4.9         1.8  virginica #> 129          6.4         2.8          5.6         2.1  virginica #> 130          7.2         3.0          5.8         1.6  virginica #> 131          7.4         2.8          6.1         1.9  virginica #> 132          7.9         3.8          6.4         2.0  virginica #> 133          6.4         2.8          5.6         2.2  virginica #> 134          6.3         2.8          5.1         1.5  virginica #> 135          6.1         2.6          5.6         1.4  virginica #> 136          7.7         3.0          6.1         2.3  virginica #> 137          6.3         3.4          5.6         2.4  virginica #> 138          6.4         3.1          5.5         1.8  virginica #> 139          6.0         3.0          4.8         1.8  virginica #> 140          6.9         3.1          5.4         2.1  virginica #> 141          6.7         3.1          5.6         2.4  virginica #> 142          6.9         3.1          5.1         2.3  virginica #> 143          5.8         2.7          5.1         1.9  virginica #> 144          6.8         3.2          5.9         2.3  virginica #> 145          6.7         3.3          5.7         2.5  virginica #> 146          6.7         3.0          5.2         2.3  virginica #> 147          6.3         2.5          5.0         1.9  virginica #> 148          6.5         3.0          5.2         2.0  virginica #> 149          6.2         3.4          5.4         2.3  virginica #> 150          5.9         3.0          5.1         1.8  virginica  ## Make a matrix for demonstration purposes only miris <- as.matrix(iris[,1:4]) headtail(miris) #>        Sepal.Length Sepal.Width Petal.Length Petal.Width #> [1,]            5.1         3.5          1.4         0.2 #> [2,]            4.9         3.0          1.4         0.2 #> [3,]            4.7         3.2          1.3         0.2 #> [148,]          6.5         3.0          5.2         2.0 #> [149,]          6.2         3.4          5.4         2.3 #> [150,]          5.9         3.0          5.1         1.8 headtail(miris,10) #>        Sepal.Length Sepal.Width Petal.Length Petal.Width #> [1,]            5.1         3.5          1.4         0.2 #> [2,]            4.9         3.0          1.4         0.2 #> [3,]            4.7         3.2          1.3         0.2 #> [4,]            4.6         3.1          1.5         0.2 #> [5,]            5.0         3.6          1.4         0.2 #> [6,]            5.4         3.9          1.7         0.4 #> [7,]            4.6         3.4          1.4         0.3 #> [8,]            5.0         3.4          1.5         0.2 #> [9,]            4.4         2.9          1.4         0.2 #> [10,]           4.9         3.1          1.5         0.1 #> [141,]          6.7         3.1          5.6         2.4 #> [142,]          6.9         3.1          5.1         2.3 #> [143,]          5.8         2.7          5.1         1.9 #> [144,]          6.8         3.2          5.9         2.3 #> [145,]          6.7         3.3          5.7         2.5 #> [146,]          6.7         3.0          5.2         2.3 #> [147,]          6.3         2.5          5.0         1.9 #> [148,]          6.5         3.0          5.2         2.0 #> [149,]          6.2         3.4          5.4         2.3 #> [150,]          5.9         3.0          5.1         1.8 headtail(miris,addrownums=FALSE) #>      Sepal.Length Sepal.Width Petal.Length Petal.Width #> [1,]          5.1         3.5          1.4         0.2 #> [2,]          4.9         3.0          1.4         0.2 #> [3,]          4.7         3.2          1.3         0.2 #> [4,]          6.5         3.0          5.2         2.0 #> [5,]          6.2         3.4          5.4         2.3 #> [6,]          5.9         3.0          5.1         1.8 headtail(miris,10,which=2:4) #>        Sepal.Width Petal.Length Petal.Width #> [1,]           3.5          1.4         0.2 #> [2,]           3.0          1.4         0.2 #> [3,]           3.2          1.3         0.2 #> [4,]           3.1          1.5         0.2 #> [5,]           3.6          1.4         0.2 #> [6,]           3.9          1.7         0.4 #> [7,]           3.4          1.4         0.3 #> [8,]           3.4          1.5         0.2 #> [9,]           2.9          1.4         0.2 #> [10,]          3.1          1.5         0.1 #> [141,]         3.1          5.6         2.4 #> [142,]         3.1          5.1         2.3 #> [143,]         2.7          5.1         1.9 #> [144,]         3.2          5.9         2.3 #> [145,]         3.3          5.7         2.5 #> [146,]         3.0          5.2         2.3 #> [147,]         2.5          5.0         1.9 #> [148,]         3.0          5.2         2.0 #> [149,]         3.4          5.4         2.3 #> [150,]         3.0          5.1         1.8  ## Make a tbl_df type from tibble ... note how headtail() ## is not limited by the tbl_df restriction on number of ## rows to show (but head() is). if (require(tibble)) {   iris2 <- as_tibble(iris)   class(iris2)   headtail(iris2,n=15)   head(iris2,n=15) } #> Loading required package: tibble #> # A tibble: 15 × 5 #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species #>           <dbl>       <dbl>        <dbl>       <dbl> <fct>   #>  1          5.1         3.5          1.4         0.2 setosa  #>  2          4.9         3            1.4         0.2 setosa  #>  3          4.7         3.2          1.3         0.2 setosa  #>  4          4.6         3.1          1.5         0.2 setosa  #>  5          5           3.6          1.4         0.2 setosa  #>  6          5.4         3.9          1.7         0.4 setosa  #>  7          4.6         3.4          1.4         0.3 setosa  #>  8          5           3.4          1.5         0.2 setosa  #>  9          4.4         2.9          1.4         0.2 setosa  #> 10          4.9         3.1          1.5         0.1 setosa  #> 11          5.4         3.7          1.5         0.2 setosa  #> 12          4.8         3.4          1.6         0.2 setosa  #> 13          4.8         3            1.4         0.1 setosa  #> 14          4.3         3            1.1         0.1 setosa  #> 15          5.8         4            1.2         0.2 setosa"},{"path":"https://fishr-core-team.github.io/FSA/reference/hist.formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates separate histograms by levels. — hist.formula","title":"Creates separate histograms by levels. — hist.formula","text":"Creates separate histograms quantitative variable levels factor variable.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hist.formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates separate histograms by levels. — hist.formula","text":"","code":"# S3 method for formula hist(   formula,   data = NULL,   main = \"\",   right = FALSE,   pre.main = \"\",   xlab = NULL,   ylab = \"Frequency\",   same.breaks = TRUE,   breaks = \"Sturges\",   w = NULL,   same.ylim = TRUE,   ymax = NULL,   col = \"gray90\",   nrow = round(sqrt(num)),   ncol = ceiling(sqrt(num)),   byrow = TRUE,   iaxs = TRUE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/hist.formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates separate histograms by levels. — hist.formula","text":"formula formula. See details. data optional data frame contains variables model. main character string used main title SINGLE histogram produced. right logical indicates histogram bins right-closed (left open) intervals (=TRUE) (=FALSE; default). pre.main character string used prefix main title multiple histograms produced. See details. xlab character label x-axis. Defaults name quantitative variable formula. ylab character label y-axis. Defaults “Frequency”. .breaks logical indicates whether break values (.e., bins) used histogram. Ignored breaks w provided user. Defaults TRUE. breaks single numeric indicates number bins breaks vector contains lower values breaks. Ignored w NULL. See hist details. w single numeric indicates width bins use. bins start “rounded” values depending value w. See lencat details. .ylim logical indicates whether limits y-axis used histogram. Defaults TRUE. ymax single value sets maximum y-axis limit histogram vector length equal number groups sets maximum y-axis limit histogram separately. NULL (default), value found. col string indicates color bars histogram. Defaults light shade gray (.e., \"gray90\"). nrow single numeric contains number rows use graphic. ncol single numeric contains number columns use graphic. byrow single logical indicates histograms fill rows first (=TRUE columns first (=FALSE). iaxs single logical indicates whether axes plotted using xaxs=\"\" yaxs=\"\" (default) xaxs=\"r\" yaxs=\"r\" (R typically ). ... arguments pass default hist().","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hist.formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates separate histograms by levels. — hist.formula","text":"graphic produced nothing returned unless formula results one histogram. case, object class \"histogram\" returned, described hist.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hist.formula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates separate histograms by levels. — hist.formula","text":"formula must form ~quantitative, quantitative~1, quantitative~factor, quantitative~factor*factor2 quantitative quantitative variable construct histograms factor factor2 factor variables contain levels separate histograms constructed. formula form ~quantitative quantitative~1 single histogram quantitative variable produced. allows hist.formula() used similarly hist() data= argument. function produces single (see ) graphic consists grid separate histograms printed. rows columns grid determined construct plot square possible. However, rows columns can set user nrow= ncol= arguments. product number rows number columns set user less total number histograms constructed multiple pages histograms produced (requiring user click graph go next graph). x-axis separate histogram labeled identically. default x-axis label name quantitative variable. can changed user xlab= argument. default right= used hist() graphics. Thus, right-open (left-closed) bins default. iaxs= argument defaults TRUE xaxs=\"\" yaxs=\"\" used axes, eliminates “floating” x-axis R typically plots histograms.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hist.formula.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Creates separate histograms by levels. — hist.formula","text":"Students often need look distribution quantitative variable separated different levels categorical variable. One method examining distributions boxplot(quantitative~factor). methods use functions Lattice ggplots2 packages learning ‘overhead’ newbie students. formula notation, however, common way R tell R separate quantitative variable levels factor. Thus, function adds code formulas generic hist function. allows newbie students use common notation (.e., formula) easily create multiple histograms quantitative variable separated levels factor.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hist.formula.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Creates separate histograms by levels. — hist.formula","text":"3-Plotting Fundamentals.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hist.formula.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Creates separate histograms by levels. — hist.formula","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/hist.formula.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates separate histograms by levels. — hist.formula","text":"Derek H. Ogle, DerekOgle51@gmail.com, implementation largely modification code provided Marc Schwartz R-help mailing list 1Jun07.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hist.formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates separate histograms by levels. — hist.formula","text":"","code":"## Using the defaults hist(Sepal.Length~Species,data=iris)   ## Add x-labels and use a pre-fix on the main labels hist(Sepal.Length~Species,data=iris,xlab=\"Sepal Length (cm)\",      pre.main=\"Species==\")   ## Use different breaks and different y-axis limits for each graph hist(Sepal.Length~Species,data=iris,xlab=\"Sepal Length (cm)\",      same.breaks=FALSE,same.ylim=FALSE)   ## Single histogram without grouping using formula notation hist(~Sepal.Length,data=iris,xlab=\"Sepal Length (cm)\")   ## Using the bin width argument hist(~Sepal.Length,data=iris,xlab=\"Sepal Length (cm)\",w=1)  hist(Sepal.Length~Species,data=iris,xlab=\"Sepal Length (cm)\",w=0.25)"},{"path":"https://fishr-core-team.github.io/FSA/reference/histFromSum.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a histogram from a frequency table. — histFromSum","title":"Create a histogram from a frequency table. — histFromSum","text":"Creates histogram values frequency table. Primarily used already summarized length frequency data.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/histFromSum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a histogram from a frequency table. — histFromSum","text":"","code":"histFromSum(x, ...)  # S3 method for default histFromSum(x, y, ...)  # S3 method for table histFromSum(x, ...)  # S3 method for formula histFromSum(x, data = NULL, ...)"},{"path":"https://fishr-core-team.github.io/FSA/reference/histFromSum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a histogram from a frequency table. — histFromSum","text":"x numeric vector bin/category values, formula form freq~cat freq contains count/frequency values cat contains bin/category values, object class table table() xtabs(). ... Additional arguments hist. y numeric vector count/frequency values. data data.frame contains freq cat variables formula given x.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/histFromSum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a histogram from a frequency table. — histFromSum","text":"None, graphic created.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/histFromSum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a histogram from a frequency table. — histFromSum","text":"Creates histogram fro values frequency table. frequency table may constructed xtabs, table, form matrix data.frame (read external data file).","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/histFromSum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a histogram from a frequency table. — histFromSum","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/histFromSum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a histogram from a frequency table. — histFromSum","text":"","code":"## Make some dummy data with a length category variable set.seed(634434789) df <- data.frame(tl=round(rnorm(100,100,20))) df$lcat10 <- lencat(df$tl,w=10)  ## Summarize as tables ( tbl1 <- xtabs(~lcat10,data=df) ) #> lcat10 #>  20  50  60  70  80  90 100 110 120 130 140 150  #>   1   1   5   7  10  24  19  19   7   3   3   1  ( tbl2 <- table(df$lcat10) ) #>  #>  20  50  60  70  80  90 100 110 120 130 140 150  #>   1   1   5   7  10  24  19  19   7   3   3   1   ## Turn the tables into a data.frame for testing (convert ## the categories variables to numeric with fact2num()) df2 <- data.frame(tbl1) df2$lcat10 <- fact2num(df2$lcat10)  ## Turn the table into a matrix for testing ( mat1 <- cbind(lcat10=as.numeric(rownames(tbl1)),freq=tbl1) ) #>     lcat10 freq #> 20      20    1 #> 50      50    1 #> 60      60    5 #> 70      70    7 #> 80      80   10 #> 90      90   24 #> 100    100   19 #> 110    110   19 #> 120    120    7 #> 130    130    3 #> 140    140    3 #> 150    150    1  ## Histogram of the raw data ... set breaks and x-axis label brks <- seq(20,160,10) xlbl <- \"Total Length (mm)\" hist(~tl,data=df,breaks=brks,xlab=xlbl)   ## Use this function with various inputs ... changed colors ## on each plot so that it was obvious that a new plot was made. # table from xtabs() histFromSum(tbl1,breaks=brks,xlab=xlbl,col=\"gray75\")  # table from table() histFromSum(tbl2,breaks=brks,xlab=xlbl,col=\"gray70\")  # vectors from data.frame histFromSum(df2$lcat10,df2$Freq,breaks=brks,xlab=xlbl,col=\"gray65\")  # vectors from matrix histFromSum(mat1[,\"lcat10\"],mat1[,\"freq\"],breaks=brks,xlab=xlbl,col=\"gray60\")  # formula from a data.frame histFromSum(Freq~lcat10,data=df2,breaks=brks,xlab=xlbl,col=\"gray55\")"},{"path":"https://fishr-core-team.github.io/FSA/reference/hyperCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence interval for population size (N) in hypergeometric distribution. — hyperCI","title":"Confidence interval for population size (N) in hypergeometric distribution. — hyperCI","text":"Computes confidence interval population size (N) hypergeometric distribution.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hyperCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence interval for population size (N) in hypergeometric distribution. — hyperCI","text":"","code":"hyperCI(M, n, m, conf.level = 0.95)"},{"path":"https://fishr-core-team.github.io/FSA/reference/hyperCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence interval for population size (N) in hypergeometric distribution. — hyperCI","text":"M Number successes population. n Number observations sample. m Number observed successes sample. conf.level Level confidence use constructing confidence intervals (default 0.95).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hyperCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence interval for population size (N) in hypergeometric distribution. — hyperCI","text":"1x2 matrix contains lower upper confidence interval bounds.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hyperCI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence interval for population size (N) in hypergeometric distribution. — hyperCI","text":"inefficient brute-force algorithm. algorithm computes conf.level range possible values m, unknown, large range values N. finds possible values N m conf.level range. smallest largest values N m conf.level range CI endpoints.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hyperCI.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Confidence interval for population size (N) in hypergeometric distribution. — hyperCI","text":"algorithm experimental point.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hyperCI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence interval for population size (N) in hypergeometric distribution. — hyperCI","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/hyperCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence interval for population size (N) in hypergeometric distribution. — hyperCI","text":"","code":"hyperCI(50,25,10) #>      95% LCI 95% UCI #> [1,]      86     228"},{"path":"https://fishr-core-team.github.io/FSA/reference/is.odd.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a number is odd or even. — is.odd","title":"Determine if a number is odd or even. — is.odd","text":"Determine number odd even.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/is.odd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a number is odd or even. — is.odd","text":"","code":"is.odd(x)  is.even(x)"},{"path":"https://fishr-core-team.github.io/FSA/reference/is.odd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a number is odd or even. — is.odd","text":"x numeric vector.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/is.odd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if a number is odd or even. — is.odd","text":"logical vector length x.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/is.odd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine if a number is odd or even. — is.odd","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/is.odd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine if a number is odd or even. — is.odd","text":"","code":"## Individual values is.odd(1) #> [1] TRUE is.odd(2) #> [1] FALSE is.even(3) #> [1] FALSE is.even(4) #> [1] TRUE  ## Vector of values d <- 1:8 data.frame(d,odd=is.odd(d),even=is.even(d)) #>   d   odd  even #> 1 1  TRUE FALSE #> 2 2 FALSE  TRUE #> 3 3  TRUE FALSE #> 4 4 FALSE  TRUE #> 5 5  TRUE FALSE #> 6 6 FALSE  TRUE #> 7 7  TRUE FALSE #> 8 8 FALSE  TRUE"},{"path":"https://fishr-core-team.github.io/FSA/reference/knitUtil.html","id":null,"dir":"Reference","previous_headings":"","what":"Specific utilities for use in a knitr document. — kCounts","title":"Specific utilities for use in a knitr document. — kCounts","text":"Specific utilities pretty printing various items knitr document.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/knitUtil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specific utilities for use in a knitr document. — kCounts","text":"","code":"kCounts(value, capitalize = FALSE)  kPvalue(value, digits = 4, include.p = TRUE, latex = TRUE)  purl2(   file,   out.dir = NULL,   newname = NULL,   topnotes = NULL,   moreItems = NULL,   blanks = c(\"extra\", \"all\", \"none\"),   delHeader = NULL,   timestamp = TRUE,   ... )  reproInfo(   out = c(\"r\", \"markdown\", \"latex\"),   rqrdPkgs = NULL,   elapsed = NULL,   width = 0.95 * getOption(\"width\"),   addTOC = TRUE,   newpage = FALSE,   links = NULL,   closeGraphics = TRUE,   ind = 1 )"},{"path":"https://fishr-core-team.github.io/FSA/reference/knitUtil.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specific utilities for use in a knitr document. — kCounts","text":"value single numeric count p-value. capitalize logical indicates returned words capitalized (default). digits Number decimal places round values . include.p logical indicates whether result character string “p=” appended numerical result. latex logical indicates whether resultant p-value string contained within dollar signs form latex formula. file string contains root name .RNW file. also name resultant purled file .R appended. .dir string indicates directory structure purled file located. forward slash end. newname string output filename (without extension) purl2. topnotes character vector lines added top output file. value vector placed single line top output file. moreItems string contains additional words found purled file result entire line words deleted. blanks string indicates blank lines removed. blanks=\"\" blank lines removed. blanks=\"extra\" “extra” blanks lines removed (.e., one blank line left originally one blank line). delHeader single character denotes top bottom block lines deleted script created purl2. timestamp logical indicates whether timestamp comment appended bottom script created purl2. ... Additional arguments original purl. string indicates type output reproInfo -- Markdown, LaTeX, simple R code. rqrdPkgs string vector contains packages required vignette dependencies found. elapsed numeric, usually proc.time, time required run vignette. NULL output used. See note . width numeric indicates width use wrapping reproducibility information =\"r\". addTOC logical indicates whether table contents entry reproducibility section added LaTeX output. Used Rout=\"latex\" newpage logical indicates whether reproducibility information begin new page. Used Rout=\"latex\" links named character vector add links bullet reproducibility information. names shown values links. Used Rout=\"markdown. closeGraphics logical indicates whether graphics device closed . ind integer indicates CRAN mirror use. Defaults 1.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/knitUtil.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specific utilities for use in a knitr document. — kCounts","text":"kCounts returns numeric value count less zero greater ten returns character string number ‘name’. See examples. kPvalue returns character string supplied p-value rounded requested number digits character string indicates p-value less value ‘5’ digits+1 place. See examples. purl2 modification purl knitr creates file name file lines removed contain certain words (found ItemsToRemove moreItems). reproInfo returns Markdown, LaTeX, R code prints “reproducibility information” bottom knitted document.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/knitUtil.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specific utilities for use in a knitr document. — kCounts","text":"kCounts used convert numeric numbers ‘word’ numbers sentence. kPvalue used print ‘pretty’ p-values. purl2 used create modified (see ) Stangled purled script. reproInfo used print ‘reproducibility information’ document.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/knitUtil.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Specific utilities for use in a knitr document. — kCounts","text":"reproInfo, elapsed can used print time took process document sending elapsed time processing argument. simplest way get approximate elapsed time put  st <- proc.time() early (first line?) knitr code, put et <- proc.time()-st late knitr code (.e., just prior reproInfo), used elapsed=et[\"user.self\"]+et[\"sys.self\"] reproInfo.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/knitUtil.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Specific utilities for use in a knitr document. — kCounts","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/knitUtil.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specific utilities for use in a knitr document. — kCounts","text":"","code":"kCounts(7) #> [1] \"seven\" kCounts(17) #> [1] 17 kCounts(0) #> [1] \"zero\" kCounts(-6) #> [1] -6 kCounts(3,capitalize=TRUE) #> [1] \"Three\"  kPvalue(0.123456789) #> [1] \"$p=0.1235$\" kPvalue(0.000123456) #> [1] \"$p=0.0001$\" kPvalue(0.000012345) #> [1] \"$p<0.00005$\" kPvalue(0.000012345,include.p=FALSE) #> [1] \"$<0.00005$\" kPvalue(0.000012345,include.p=FALSE,latex=FALSE) #> [1] \"<0.00005\""},{"path":"https://fishr-core-team.github.io/FSA/reference/ksTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Kolmogorov-Smirnov Tests. — ksTest","title":"Kolmogorov-Smirnov Tests. — ksTest","text":"Performs one- two-sample Kolmogorov-Smirnov test. Includes option perform two-sample test using formula notation.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ksTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kolmogorov-Smirnov Tests. — ksTest","text":"","code":"ksTest(x, ...)  # S3 method for default ksTest(   x,   y,   ...,   alternative = c(\"two.sided\", \"less\", \"greater\"),   exact = NULL )  # S3 method for formula ksTest(   x,   data = NULL,   ...,   alternative = c(\"two.sided\", \"less\", \"greater\"),   exact = NULL )"},{"path":"https://fishr-core-team.github.io/FSA/reference/ksTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kolmogorov-Smirnov Tests. — ksTest","text":"x numeric vector data values formula (see details). ... Parameters distribution specified (character string) y. y numeric vector data values, character string naming cumulative distribution function, actual cumulative distribution function. See ks.test. alternative string indicates alternative hypothesis. See ks.test. exact NULL logical indicates whether exact p-value computed. See ks.test. available ties present, one-sided two-sample case. data data frame contains variables formula x.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ksTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kolmogorov-Smirnov Tests. — ksTest","text":"See ks.test.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ksTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kolmogorov-Smirnov Tests. — ksTest","text":"exactly ks.test except formula may used two-sample situation. default version simply pass ks.test. See ks.test details.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/ksTest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Kolmogorov-Smirnov Tests. — ksTest","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/ksTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kolmogorov-Smirnov Tests. — ksTest","text":"","code":"## see ks.test for other examples x <- rnorm(50) y <- runif(30) df <- data.frame(dat=c(x,y),                  grp=factor(rep(c(\"x\",\"y\"),c(50,30))),                  stringsAsFactors=FALSE)  ## one-sample (from ks.test) still works ksTest(x+2, \"pgamma\", 3, 2) #>  #> \tExact one-sample Kolmogorov-Smirnov test #>  #> data:  x #> D = 0.21652, p-value = 0.01546 #> alternative hypothesis: two-sided #>  ks.test(x+2, \"pgamma\", 3, 2) #>  #> \tExact one-sample Kolmogorov-Smirnov test #>  #> data:  x + 2 #> D = 0.21652, p-value = 0.01546 #> alternative hypothesis: two-sided #>   ## first two-sample example in ?ks.test ksTest(x,y) #>  #> \tExact two-sample Kolmogorov-Smirnov test #>  #> data:  x and y #> D = 0.6, p-value = 8.598e-07 #> alternative hypothesis: two-sided #>  ks.test(x,y) #>  #> \tExact two-sample Kolmogorov-Smirnov test #>  #> data:  x and y #> D = 0.6, p-value = 8.598e-07 #> alternative hypothesis: two-sided #>   ## same as above but using data.frame and formula ksTest(dat~grp,data=df) #>  #> \tExact two-sample Kolmogorov-Smirnov test #>  #> data:  x and y #> D = 0.6, p-value = 8.598e-07 #> alternative hypothesis: two-sided #>"},{"path":"https://fishr-core-team.github.io/FSA/reference/lagratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Ratio of lagged observations. — lagratio","title":"Ratio of lagged observations. — lagratio","text":"Computes ratio lagged observations vector.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lagratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ratio of lagged observations. — lagratio","text":"","code":"lagratio(   x,   lag = 1L,   recursion = 1L,   differences = recursion,   direction = c(\"backward\", \"forward\"),   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/lagratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ratio of lagged observations. — lagratio","text":"x numeric vector matrix. lag integer representing lag ‘distance’. recursion integer indicates level recursion calculations. 1 simply compute ratios. 2, example, compute ratios, save result, compute ratios results using lag. See examples. differences recursion. Used symmetry diff. direction string indicates direction calculation. \"backward\" indicates ‘latter’ values divided ‘former’ values. \"forward\" indicates ‘former’ values divided ‘latter’ values. See examples. ... Additional arguments diff().","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lagratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ratio of lagged observations. — lagratio","text":"vector matrix lagged ratios.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lagratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ratio of lagged observations. — lagratio","text":"function behaves similarly diff() except returns vector matrix ratios rather differences.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/lagratio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ratio of lagged observations. — lagratio","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lagratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ratio of lagged observations. — lagratio","text":"","code":"## Backward lagged ratios # no recursion lagratio(1:10,1) #> [1] 2.000000 1.500000 1.333333 1.250000 1.200000 1.166667 1.142857 1.125000 #> [9] 1.111111 lagratio(1:10,2) #> [1] 3.000000 2.000000 1.666667 1.500000 1.400000 1.333333 1.285714 1.250000 # with recursion lagratio(1:10,1,2) #> [1] 0.7500000 0.8888889 0.9375000 0.9600000 0.9722222 0.9795918 0.9843750 #> [8] 0.9876543 lagratio(1:10,2,2) #> [1] 0.5555556 0.7500000 0.8400000 0.8888889 0.9183673 0.9375000  ## Forward lagged ratios # no recursion lagratio(10:1,1,direction=\"forward\") #> [1] 1.111111 1.125000 1.142857 1.166667 1.200000 1.250000 1.333333 1.500000 #> [9] 2.000000 lagratio(10:1,2,direction=\"forward\") #> [1] 1.250000 1.285714 1.333333 1.400000 1.500000 1.666667 2.000000 3.000000 # with recursion lagratio(10:1,1,2,direction=\"forward\") #> [1] 0.9876543 0.9843750 0.9795918 0.9722222 0.9600000 0.9375000 0.8888889 #> [8] 0.7500000 lagratio(10:1,2,2,direction=\"forward\") #> [1] 0.9375000 0.9183673 0.8888889 0.8400000 0.7500000 0.5555556"},{"path":"https://fishr-core-team.github.io/FSA/reference/lencat.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs length class/category variable. — lencat","title":"Constructs length class/category variable. — lencat","text":"Constructs vector contains length class category individual belongs. Optionally, vector can appended original data frame.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lencat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs length class/category variable. — lencat","text":"","code":"lencat(x, ...)  # S3 method for default lencat(   x,   w = 1,   startcat = NULL,   breaks = NULL,   right = FALSE,   use.names = FALSE,   as.fact = use.names,   droplevels = drop.levels,   drop.levels = FALSE,   ... )  # S3 method for formula lencat(   x,   data,   w = 1,   startcat = NULL,   breaks = NULL,   right = FALSE,   use.names = FALSE,   as.fact = use.names,   droplevels = drop.levels,   drop.levels = FALSE,   vname = NULL,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/lencat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs length class/category variable. — lencat","text":"x numeric vector contains length measurements formula form ~x “x” generically represents variable data contains length measurements. formula can contain one variable. ... implemented. w single numeric indicates width length categories create. Ignored breaks NULL. startcat single numeric indicates beginning first length category. used w. See details handled NULL. breaks numeric vector lower values break points length categories. right logical indicates intervals closed right (open left) vice versa. use.names logical indicates whether names values breaks used levels new variable. throw warning use default levels TRUE names(breaks) NULL. .fact logical indicates new variable returned factor (=TRUE) (=FALSE; default). droplevels, drop.levels logical indicates new variable retain levels indicated breaks (=FALSE; default) . Ignored .fact=FALSE. data data.frame minimally contains length measurements given variable formula. vname string contains name new length class variable.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lencat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs length class/category variable. — lencat","text":"formula version function used, data.frame returned new variable, named vname (defaults LCat), appended original data.frame. default version function used, single vector returned. returned values numeric unless breaks named use.names=TRUE .fact=TRUE.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lencat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Constructs length class/category variable. — lencat","text":"breaks non-NULL, w startcat ignored. vector values breaks begin value smaller minimum observed value end value larger maximum observed value. lowest break value larger minimum observed value, error occur. largest break value smaller maximum observed value, additional break value larger maximum observed value added breaks (warning sent). values breaks equally spaced. breaks=NULL (default), value w used create equally spaced categories. startcat=NULL (default), length categories begin first value less minimum observed value “rounded” w. example, minimum observed value 67, first length category 65 w=5, 60 w=10, 50 w=25, 50 w=50. length categories continue starting value values w value greater largest observed value x. length categories left-inclusive right-exclusive default (.e., right=FALSE). start length categories may also set startcat. number startcat argument less smallest value x. Additionally, number decimals startcat number decimals w (e.g., startcat=0.4 w=1 result error). One may want convert apparent numeric values factor values length categories missing (e.g., factor values used, example, tables length category values values length categories; .e., zeros length categories missing). numeric values can converted factors including .fact. See “real data” example. observed values x rounded appropriate number decimals avoid misplacement individuals incorrect length categories due issues machine-precision (see discussion .equal.)","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lencat.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Constructs length class/category variable. — lencat","text":"2-Data Manipulation.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lencat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Constructs length class/category variable. — lencat","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lencat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Constructs length class/category variable. — lencat","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lencat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs length class/category variable. — lencat","text":"","code":"# Create random lengths measured to nearest 0.1 unit df1 <- data.frame(len=round(runif(50,0.1,9.9),1))  # Create length categories by 0.1 unit df1$LCat1 <- lencat(df1$len,w=0.1) xtabs(~LCat1,data=df1) #> LCat1 #> 0.2 0.9 1.3 1.5 1.6 1.7 2.1 2.8 2.9   3 3.3 3.8 4.1 4.2 4.4 4.5 4.6 4.9 5.1 5.7  #>   1   1   2   1   1   2   1   1   2   2   1   1   1   1   1   2   1   1   2   1  #> 6.2 6.3 6.4 7.1 7.2 7.3 7.6 7.7 7.9 8.3 8.6 8.7 9.3 9.8  #>   1   2   1   2   1   2   1   1   1   5   2   2   1   2   # length categories by 0.2 units df1$LCat2 <- lencat(df1$len,w=0.2) xtabs(~LCat2,data=df1) #> LCat2 #> 0.2 0.8 1.2 1.4 1.6   2 2.8   3 3.2 3.8   4 4.2 4.4 4.6 4.8   5 5.6 6.2 6.4   7  #>   1   1   2   1   3   1   3   2   1   1   1   1   3   1   1   2   1   3   1   2  #> 7.2 7.6 7.8 8.2 8.6 9.2 9.8  #>   3   2   1   5   4   1   2   # length categories by 0.2 units starting at 0.1 df1$LCat3 <- lencat(df1$len,w=0.2,startcat=0.1) xtabs(~LCat3,data=df1) #> LCat3 #> 0.1 0.9 1.3 1.5 1.7 2.1 2.7 2.9 3.3 3.7 4.1 4.3 4.5 4.9 5.1 5.7 6.1 6.3 7.1 7.3  #>   1   1   2   2   2   1   1   4   1   1   2   1   3   1   2   1   1   3   3   2  #> 7.5 7.7 7.9 8.3 8.5 8.7 9.3 9.7  #>   1   1   1   5   2   2   1   2   # length categories as set by breaks df1$LCat4 <- lencat(df1$len,breaks=c(0,2,4,7,10)) xtabs(~LCat4,data=df1) #> LCat4 #>  0  2  4  7  #>  8  8 14 20   ## A Second example # random lengths measured to nearest unit df2 <- data.frame(len=round(runif(50,10,117),0))      # length categories by 5 units df2$LCat1 <- lencat(df2$len,w=5) xtabs(~LCat1,data=df2) #> LCat1 #>  10  15  20  25  30  35  40  45  50  65  70  75  80  85  90  95 100 105 110 115  #>   3   4   3   2   1   1   2   2   4   3   2   1   2   2   3   4   2   4   4   1   # length categories by 5 units starting at 7 df2$LCat2 <- lencat(df2$len,w=5,startcat=7) xtabs(~LCat2,data=df2) #> LCat2 #>   7  12  17  22  27  32  37  42  47  52  62  67  72  77  82  87  92  97 102 107  #>   2   2   5   1   2   1   1   3   3   2   2   1   2   1   3   1   5   2   3   6  #> 112  #>   2   # length categories by 10 units df2$LCat3 <- lencat(df2$len,w=10) xtabs(~LCat3,data=df2) #> LCat3 #>  10  20  30  40  50  60  70  80  90 100 110  #>   7   5   2   4   4   3   3   4   7   6   5   # length categories by 10 units starting at 5 df2$LCat4 <- lencat(df2$len,w=10,startcat=5) xtabs(~LCat4,data=df2) #> LCat4 #>   5  15  25  35  45  65  75  85  95 105 115  #>   3   7   3   3   6   5   3   5   6   8   1   # length categories as set by breaks df2$LCat5 <- lencat(df2$len,breaks=c(5,50,75,150)) xtabs(~LCat5,data=df2) #> LCat5 #>  5 50 75  #> 18  9 23   ## A Third example # random lengths measured to nearest 0.1 unit df3 <- data.frame(len=round(runif(50,10,117),1))  # length categories by 5 units df3$LCat1 <- lencat(df3$len,w=5) xtabs(~LCat1,data=df3) #> LCat1 #>  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95 100 105  #>   1   1   1   1   1   2   6   3   1   1   7   3   3   2   2   5   1   5   1   3   ## A Fourth example # random lengths measured to nearest 0.01 unit df4 <- data.frame(len=round(runif(50,0.1,9.9),2))  # length categories by 0.1 unit df4$LCat1 <- lencat(df4$len,w=0.1) xtabs(~LCat1,data=df4) #> LCat1 #> 0.1 0.7 1.2 1.8   2 2.2 2.3 2.7 2.9   3 3.1 3.2 3.3 3.4 3.6 3.9   4 4.2 4.3 4.4  #>   1   1   2   1   1   1   1   2   1   1   1   1   1   2   1   3   1   1   2   1  #> 4.5 4.7 4.8   5 5.1 5.3 5.6 6.1 6.4 6.6 6.7 6.8 7.4 7.7 8.2 8.4 8.8 8.9  #>   2   2   1   1   1   1   3   1   1   1   2   1   1   1   1   1   2   1   # length categories by 0.1 unit, but without missing categories df4$LCat2 <- lencat(df4$len,w=0.1,as.fact=TRUE) xtabs(~LCat2,data=df4) #> LCat2 #> 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9   1 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9   2  #>   1   0   0   0   0   0   1   0   0   0   0   2   0   0   0   0   0   1   0   1  #> 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9   3 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9   4  #>   0   1   1   0   0   0   2   0   1   1   1   1   1   2   0   1   0   0   3   1  #> 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9   5 5.1 5.2 5.3 5.4 5.5 5.6 5.7 5.8 5.9   6  #>   0   1   2   1   2   0   2   1   0   1   1   0   1   0   0   3   0   0   0   0  #> 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 6.9   7 7.1 7.2 7.3 7.4 7.5 7.6 7.7 7.8 7.9   8  #>   1   0   0   1   0   1   2   1   0   0   0   0   0   1   0   0   1   0   0   0  #> 8.1 8.2 8.3 8.4 8.5 8.6 8.7 8.8 8.9  #>   0   1   0   1   0   0   0   2   1   # length categories by 2 unit df4$LCat3 <- lencat(df4$len,w=2) xtabs(~LCat3,data=df4) #> LCat3 #>  0  2  4  6  8  #>  5 16 16  8  5   ## A Fifth example -- with real data # remove variables with \"anu\" and \"radcap\" just for simplicity smb1 <- smb2 <- SMBassWB[,-c(8:20)]  # 10 mm length classes - in default LCat variable smb1$LCat10 <- lencat(smb1$lencap,w=10) head(smb1) #>   species lake gear yearcap fish agecap lencap LCat10 #> 1     SMB   WB    E    1988    5      1     71     70 #> 2     SMB   WB    E    1988    3      1     64     60 #> 3     SMB   WB    E    1988    2      1     57     50 #> 4     SMB   WB    E    1988    4      1     68     60 #> 5     SMB   WB    E    1988    6      1     72     70 #> 6     SMB   WB    E    1988    7      1     80     80 xtabs(~LCat10,data=smb1) #> LCat10 #>  50  60  70  80  90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240  #>   3   4   7   5   7  20  21  23  23  23  35  22   7  12  21  21  23  15  19  18  #> 250 260 270 280 290 300 310 320 330 340 360 440  #>  19  23  17  22  17   4   4   4   2   1   2   1   # Same as previous but returned as factor so levels with no fish still seen smb1$LCat10A <- lencat(smb1$lencap,w=10,as.fact=TRUE) head(smb1) #>   species lake gear yearcap fish agecap lencap LCat10 LCat10A #> 1     SMB   WB    E    1988    5      1     71     70      70 #> 2     SMB   WB    E    1988    3      1     64     60      60 #> 3     SMB   WB    E    1988    2      1     57     50      50 #> 4     SMB   WB    E    1988    4      1     68     60      60 #> 5     SMB   WB    E    1988    6      1     72     70      70 #> 6     SMB   WB    E    1988    7      1     80     80      80 xtabs(~LCat10A,data=smb1) #> LCat10A #>  50  60  70  80  90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240  #>   3   4   7   5   7  20  21  23  23  23  35  22   7  12  21  21  23  15  19  18  #> 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440  #>  19  23  17  22  17   4   4   4   2   1   0   2   0   0   0   0   0   0   0   1   # Same as previous but returned as a factor with unused levels dropped smb1$LCat10B <- lencat(smb1$lencap,w=10,as.fact=TRUE,droplevels=TRUE) head(smb1) #>   species lake gear yearcap fish agecap lencap LCat10 LCat10A LCat10B #> 1     SMB   WB    E    1988    5      1     71     70      70      70 #> 2     SMB   WB    E    1988    3      1     64     60      60      60 #> 3     SMB   WB    E    1988    2      1     57     50      50      50 #> 4     SMB   WB    E    1988    4      1     68     60      60      60 #> 5     SMB   WB    E    1988    6      1     72     70      70      70 #> 6     SMB   WB    E    1988    7      1     80     80      80      80 xtabs(~LCat10B,data=smb1) #> LCat10B #>  50  60  70  80  90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240  #>   3   4   7   5   7  20  21  23  23  23  35  22   7  12  21  21  23  15  19  18  #> 250 260 270 280 290 300 310 320 330 340 360 440  #>  19  23  17  22  17   4   4   4   2   1   2   1   # 25 mm length classes - in custom variable name smb1$LCat25 <- lencat(smb1$lencap,w=25) head(smb1) #>   species lake gear yearcap fish agecap lencap LCat10 LCat10A LCat10B LCat25 #> 1     SMB   WB    E    1988    5      1     71     70      70      70     50 #> 2     SMB   WB    E    1988    3      1     64     60      60      60     50 #> 3     SMB   WB    E    1988    2      1     57     50      50      50     50 #> 4     SMB   WB    E    1988    4      1     68     60      60      60     50 #> 5     SMB   WB    E    1988    6      1     72     70      70      70     50 #> 6     SMB   WB    E    1988    7      1     80     80      80      80     75 xtabs(~LCat25,data=smb1) #> LCat25 #>  50  75 100 125 150 175 200 225 250 275 300 325 350 425  #>  12  14  52  58  60  37  51  45  48  50   9   6   2   1   # using values from psdVal for Smallmouth Bass smb1$PSDCat1 <- lencat(smb1$lencap,breaks=psdVal(\"Smallmouth Bass\")) head(smb1) #>   species lake gear yearcap fish agecap lencap LCat10 LCat10A LCat10B LCat25 #> 1     SMB   WB    E    1988    5      1     71     70      70      70     50 #> 2     SMB   WB    E    1988    3      1     64     60      60      60     50 #> 3     SMB   WB    E    1988    2      1     57     50      50      50     50 #> 4     SMB   WB    E    1988    4      1     68     60      60      60     50 #> 5     SMB   WB    E    1988    6      1     72     70      70      70     50 #> 6     SMB   WB    E    1988    7      1     80     80      80      80     75 #>   PSDCat1 #> 1       0 #> 2       0 #> 3       0 #> 4       0 #> 5       0 #> 6       0 xtabs(~PSDCat1,data=smb1) #> PSDCat1 #>   0 180 280 350 430  #> 200 188  54   2   1   # add category names smb1$PSDCat2 <- lencat(smb1$lencap,breaks=psdVal(\"Smallmouth Bass\"),use.names=TRUE) head(smb1) #>   species lake gear yearcap fish agecap lencap LCat10 LCat10A LCat10B LCat25 #> 1     SMB   WB    E    1988    5      1     71     70      70      70     50 #> 2     SMB   WB    E    1988    3      1     64     60      60      60     50 #> 3     SMB   WB    E    1988    2      1     57     50      50      50     50 #> 4     SMB   WB    E    1988    4      1     68     60      60      60     50 #> 5     SMB   WB    E    1988    6      1     72     70      70      70     50 #> 6     SMB   WB    E    1988    7      1     80     80      80      80     75 #>   PSDCat1  PSDCat2 #> 1       0 substock #> 2       0 substock #> 3       0 substock #> 4       0 substock #> 5       0 substock #> 6       0 substock xtabs(~PSDCat2,data=smb1) #> PSDCat2 #>  substock     stock   quality preferred memorable    trophy  #>       200       188        54         2         1         0   # same as above but drop the unused levels smb1$PSDCat2A <- lencat(smb1$lencap,breaks=psdVal(\"Smallmouth Bass\"),                         use.names=TRUE,droplevels=TRUE) head(smb1) #>   species lake gear yearcap fish agecap lencap LCat10 LCat10A LCat10B LCat25 #> 1     SMB   WB    E    1988    5      1     71     70      70      70     50 #> 2     SMB   WB    E    1988    3      1     64     60      60      60     50 #> 3     SMB   WB    E    1988    2      1     57     50      50      50     50 #> 4     SMB   WB    E    1988    4      1     68     60      60      60     50 #> 5     SMB   WB    E    1988    6      1     72     70      70      70     50 #> 6     SMB   WB    E    1988    7      1     80     80      80      80     75 #>   PSDCat1  PSDCat2 PSDCat2A #> 1       0 substock substock #> 2       0 substock substock #> 3       0 substock substock #> 4       0 substock substock #> 5       0 substock substock #> 6       0 substock substock xtabs(~PSDCat2A,data=smb1) #> PSDCat2A #>  substock     stock   quality preferred memorable  #>       200       188        54         2         1  str(smb1) #> 'data.frame':\t445 obs. of  14 variables: #>  $ species : Factor w/ 1 level \"SMB\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ lake    : Factor w/ 1 level \"WB\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ gear    : Factor w/ 2 levels \"E\",\"T\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ yearcap : int  1988 1988 1988 1988 1988 1988 1989 1990 1990 1990 ... #>  $ fish    : num  5 3 2 4 6 7 50 482 768 428 ... #>  $ agecap  : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ lencap  : int  71 64 57 68 72 80 55 75 75 71 ... #>  $ LCat10  : num  70 60 50 60 70 80 50 70 70 70 ... #>  $ LCat10A : Factor w/ 40 levels \"50\",\"60\",\"70\",..: 3 2 1 2 3 4 1 3 3 3 ... #>  $ LCat10B : Factor w/ 32 levels \"50\",\"60\",\"70\",..: 3 2 1 2 3 4 1 3 3 3 ... #>  $ LCat25  : num  50 50 50 50 50 75 50 75 75 50 ... #>  $ PSDCat1 : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ PSDCat2 : Factor w/ 6 levels \"substock\",\"stock\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ PSDCat2A: Factor w/ 5 levels \"substock\",\"stock\",..: 1 1 1 1 1 1 1 1 1 1 ...  # same as above but not returned as a factor (returned as a character) smb1$PSDcat2B <- lencat(smb1$lencap,breaks=psdVal(\"Smallmouth Bass\"),                         use.names=TRUE,as.fact=FALSE) str(smb1) #> 'data.frame':\t445 obs. of  15 variables: #>  $ species : Factor w/ 1 level \"SMB\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ lake    : Factor w/ 1 level \"WB\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ gear    : Factor w/ 2 levels \"E\",\"T\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ yearcap : int  1988 1988 1988 1988 1988 1988 1989 1990 1990 1990 ... #>  $ fish    : num  5 3 2 4 6 7 50 482 768 428 ... #>  $ agecap  : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ lencap  : int  71 64 57 68 72 80 55 75 75 71 ... #>  $ LCat10  : num  70 60 50 60 70 80 50 70 70 70 ... #>  $ LCat10A : Factor w/ 40 levels \"50\",\"60\",\"70\",..: 3 2 1 2 3 4 1 3 3 3 ... #>  $ LCat10B : Factor w/ 32 levels \"50\",\"60\",\"70\",..: 3 2 1 2 3 4 1 3 3 3 ... #>  $ LCat25  : num  50 50 50 50 50 75 50 75 75 50 ... #>  $ PSDCat1 : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ PSDCat2 : Factor w/ 6 levels \"substock\",\"stock\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ PSDCat2A: Factor w/ 5 levels \"substock\",\"stock\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ PSDcat2B: chr  \"substock\" \"substock\" \"substock\" \"substock\" ...  ## A Sixth example -- similar to fifth example but using the formula notation # 10 mm length classes - in default LCat variable smb2 <- lencat(~lencap,data=smb2,w=10) head(smb2) #>   species lake gear yearcap fish agecap lencap LCat #> 1     SMB   WB    E    1988    5      1     71   70 #> 2     SMB   WB    E    1988    3      1     64   60 #> 3     SMB   WB    E    1988    2      1     57   50 #> 4     SMB   WB    E    1988    4      1     68   60 #> 5     SMB   WB    E    1988    6      1     72   70 #> 6     SMB   WB    E    1988    7      1     80   80  # 25 mm length classes - in custom variable name smb2 <- lencat(~lencap,data=smb2,w=25,vname=\"LenCat25\") head(smb2) #>   species lake gear yearcap fish agecap lencap LCat LenCat25 #> 1     SMB   WB    E    1988    5      1     71   70       50 #> 2     SMB   WB    E    1988    3      1     64   60       50 #> 3     SMB   WB    E    1988    2      1     57   50       50 #> 4     SMB   WB    E    1988    4      1     68   60       50 #> 5     SMB   WB    E    1988    6      1     72   70       50 #> 6     SMB   WB    E    1988    7      1     80   80       75  # using values from psdVal for Smallmouth Bass smb2 <- lencat(~lencap,data=smb2,breaks=psdVal(\"Smallmouth Bass\"),vname=\"LenPsd\") head(smb2) #>   species lake gear yearcap fish agecap lencap LCat LenCat25 LenPsd #> 1     SMB   WB    E    1988    5      1     71   70       50      0 #> 2     SMB   WB    E    1988    3      1     64   60       50      0 #> 3     SMB   WB    E    1988    2      1     57   50       50      0 #> 4     SMB   WB    E    1988    4      1     68   60       50      0 #> 5     SMB   WB    E    1988    6      1     72   70       50      0 #> 6     SMB   WB    E    1988    7      1     80   80       75      0  # add category names smb2 <- lencat(~lencap,data=smb2,breaks=psdVal(\"Smallmouth Bass\"),vname=\"LenPsd2\",                use.names=TRUE,droplevels=TRUE) head(smb2) #>   species lake gear yearcap fish agecap lencap LCat LenCat25 LenPsd  LenPsd2 #> 1     SMB   WB    E    1988    5      1     71   70       50      0 substock #> 2     SMB   WB    E    1988    3      1     64   60       50      0 substock #> 3     SMB   WB    E    1988    2      1     57   50       50      0 substock #> 4     SMB   WB    E    1988    4      1     68   60       50      0 substock #> 5     SMB   WB    E    1988    6      1     72   70       50      0 substock #> 6     SMB   WB    E    1988    7      1     80   80       75      0 substock str(smb2) #> 'data.frame':\t445 obs. of  11 variables: #>  $ species : Factor w/ 1 level \"SMB\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ lake    : Factor w/ 1 level \"WB\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ gear    : Factor w/ 2 levels \"E\",\"T\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ yearcap : int  1988 1988 1988 1988 1988 1988 1989 1990 1990 1990 ... #>  $ fish    : num  5 3 2 4 6 7 50 482 768 428 ... #>  $ agecap  : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ lencap  : int  71 64 57 68 72 80 55 75 75 71 ... #>  $ LCat    : num  70 60 50 60 70 80 50 70 70 70 ... #>  $ LenCat25: num  50 50 50 50 50 75 50 75 75 50 ... #>  $ LenPsd  : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ LenPsd2 : Factor w/ 5 levels \"substock\",\"stock\",..: 1 1 1 1 1 1 1 1 1 1 ..."},{"path":"https://fishr-core-team.github.io/FSA/reference/logbtcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs the correction-factor used when back-transforming log-transformed values. — logbtcf","title":"Constructs the correction-factor used when back-transforming log-transformed values. — logbtcf","text":"Constructs correction-factor used back-transforming log-transformed values according Sprugel (1983). Sprugel's main formula -- exp((syx^2)/2) -- used syx estimated natural log transformed data. correction base obtained multiplying syx term log_e(base) give exp(((log_e(base)*syx)^2)/2). general formula implemented (, course, base exp(1) general formula reduces original specific formula).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/logbtcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs the correction-factor used when back-transforming log-transformed values. — logbtcf","text":"","code":"logbtcf(obj, base = exp(1))"},{"path":"https://fishr-core-team.github.io/FSA/reference/logbtcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs the correction-factor used when back-transforming log-transformed values. — logbtcf","text":"obj object lm. base single numeric indicates base logarithm used.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/logbtcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs the correction-factor used when back-transforming log-transformed values. — logbtcf","text":"numeric value correction factor according Sprugel (1983).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/logbtcf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Constructs the correction-factor used when back-transforming log-transformed values. — logbtcf","text":"Sprugel, D.G. 1983. Correcting bias log-transformed allometric equations. Ecology 64:209-210.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/logbtcf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Constructs the correction-factor used when back-transforming log-transformed values. — logbtcf","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/logbtcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs the correction-factor used when back-transforming log-transformed values. — logbtcf","text":"","code":"# toy data df <- data.frame(y=rlnorm(10),x=rlnorm(10)) df$logey <- log(df$y) df$log10y <- log10(df$y) df$logex <- log(df$x) df$log10x <- log10(df$x)  # model and predictions on loge scale lme <- lm(logey~logex,data=df) ( ploge <- predict(lme,data.frame(logex=log(10))) ) #>        1  #> 1.691612  ( pe <- exp(ploge) ) #>        1  #> 5.428224  ( cfe <- logbtcf(lme) ) #> [1] 1.381993 ( cpe <- cfe*pe ) #>        1  #> 7.501769   # model and predictions on log10 scale lm10 <- lm(log10y~log10x,data=df) plog10 <- predict(lm10,data.frame(log10x=log10(10))) p10 <- 10^(plog10) ( cf10 <- logbtcf(lm10,10) ) #> [1] 1.381993 ( cp10 <- cf10*p10 ) #>        1  #> 7.501769   # cfe and cf10, cpe and cp10 should be equal all.equal(cfe,cf10) #> [1] TRUE all.equal(cpe,cp10) #> [1] TRUE"},{"path":"https://fishr-core-team.github.io/FSA/reference/lwCompPreds.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs plots of predicted weights at given lengths among different groups. — lwCompPreds","title":"Constructs plots of predicted weights at given lengths among different groups. — lwCompPreds","text":"Constructs plots predicted weights given lengths among different groups. plots allow user explore differences predicted weights variety lengths weight-length relationship across variety groups.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lwCompPreds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs plots of predicted weights at given lengths among different groups. — lwCompPreds","text":"","code":"lwCompPreds(   object,   lens = NULL,   qlens = c(0.05, 0.25, 0.5, 0.75, 0.95),   qlens.dec = 1,   base = exp(1),   interval = c(\"confidence\", \"prediction\", \"both\"),   center.value = 0,   lwd = 1,   connect.preds = TRUE,   show.preds = FALSE,   col.connect = \"gray70\",   ylim = NULL,   main.pre = \"Length==\",   cex.main = 0.8,   xlab = \"Groups\",   ylab = \"Predicted Weight\",   yaxs = \"r\",   rows = round(sqrt(num)),   cols = ceiling(sqrt(num)) )"},{"path":"https://fishr-core-team.github.io/FSA/reference/lwCompPreds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs plots of predicted weights at given lengths among different groups. — lwCompPreds","text":"object lm object (.e., returned fitting model lm). model log(weight) response log(length) explanatory covariate explanatory factor variable describes different groups. lens numeric vector indicates lengths weights predicted. qlens numeric vector indicates quantiles lengths weights predicted. ignored lens non-null. qlens.dec single numeric identifies decimal place lengths derived qlens rounded (Default 1). base single positive numeric value indicates base logarithm used lm object object. default exp(1), value e. interval single string indicates whether plot confidence (=\"confidence\"), prediction (=\"prediction\"), (=\"\") intervals. center.value single numeric value indicates log length used log length data centered constructing object. lwd single numeric indicates line width used confidence prediction interval lines (interval=\"\") prediction connections line. interval=\"\" width prediction interval one less value CI PI appear different. connect.preds logical indicates whether predicted values connected line across groups . show.preds logical indicates whether predicted values plotted point group . col.connect color use line connects predicted values (connect.preds=TRUE). ylim numeric vector length two indicates limits y-axis used plot. null limits chosen graph individually. main.pre character string used prefix main title. See details. cex.main numeric value character expansion main title. See details. xlab single string labeling x-axis. ylab single string labeling y-axis. yaxs single string indicates y-axis formed. See par details. rows single numeric contains number rows use graphic. cols single numeric contains number columns use graphic.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lwCompPreds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs plots of predicted weights at given lengths among different groups. — lwCompPreds","text":"None. However, plot produced.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lwCompPreds.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Constructs plots of predicted weights at given lengths among different groups. — lwCompPreds","text":"7-Weight-Length.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lwCompPreds.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Constructs plots of predicted weights at given lengths among different groups. — lwCompPreds","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lwCompPreds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Constructs plots of predicted weights at given lengths among different groups. — lwCompPreds","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/lwCompPreds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs plots of predicted weights at given lengths among different groups. — lwCompPreds","text":"","code":"# add log length and weight data to ChinookArg data ChinookArg$logtl <- log(ChinookArg$tl) ChinookArg$logwt <- log(ChinookArg$w) # fit model to assess equality of slopes lm1 <- lm(logwt~logtl*loc,data=ChinookArg) anova(lm1) #> Analysis of Variance Table #>  #> Response: logwt #>            Df Sum Sq Mean Sq  F value    Pr(>F)     #> logtl       1 92.083  92.083 898.4819 < 2.2e-16 *** #> loc         2  2.634   1.317  12.8526 1.005e-05 *** #> logtl:loc   2  0.101   0.051   0.4932     0.612     #> Residuals 106 10.864   0.102                        #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  # set graphing parameters so that the plots will look decent op <- par(mar=c(3.5,3.5,1,1),mgp=c(1.8,0.4,0),tcl=-0.2) # show predicted weights (w/ CI) at the default quantile lengths lwCompPreds(lm1,xlab=\"Location\")  # show predicted weights (w/ CI) at the quartile lengths lwCompPreds(lm1,xlab=\"Location\",qlens=c(0.25,0.5,0.75))  # show predicted weights (w/ CI) at certain lengths lwCompPreds(lm1,xlab=\"Location\",lens=c(60,90,120,150))  # show predicted weights (w/ just PI) at certain lengths lwCompPreds(lm1,xlab=\"Location\",lens=c(60,90,120,150),interval=\"prediction\")  lwCompPreds(lm1,xlab=\"Location\",lens=c(60,90,120,150),connect.preds=FALSE,show.preds=TRUE)   # fit model with a different base (plot should be the same as the first example) ChinookArg$logtl <- log10(ChinookArg$tl) ChinookArg$logwt <- log10(ChinookArg$w) lm1 <- lm(logwt~logtl*loc,data=ChinookArg) lwCompPreds(lm1,base=10,xlab=\"Location\")  ## return graphing parameters to original state par(op)"},{"path":"https://fishr-core-team.github.io/FSA/reference/metaM.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate natural mortality from a variety of empirical methods. — Mmethods","title":"Estimate natural mortality from a variety of empirical methods. — Mmethods","text":"Several methods can used estimated natural mortality (M) types data, including parameters von Bertalanffy growth equation, maximum age, temperature. relationships developed meta-analyses large number populations. Several methods implemented function.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/metaM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate natural mortality from a variety of empirical methods. — Mmethods","text":"","code":"Mmethods(what = c(\"all\", \"tmax\", \"K\", \"Hoenig\", \"Pauly\"))  metaM(   method = Mmethods(),   justM = TRUE,   tmax = NULL,   K = NULL,   Linf = NULL,   t0 = NULL,   b = NULL,   L = NULL,   Temp = NULL,   t50 = NULL,   Winf = NULL )  # S3 method for metaM print(x, digits = 4, ...)"},{"path":"https://fishr-core-team.github.io/FSA/reference/metaM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate natural mortality from a variety of empirical methods. — Mmethods","text":"string indicates grouping methods return. Defaults returning methods. method string indicates method equation use. See details. justM logical indicates whether just estimate M (TRUE; Default) descriptive list returned. tmax maximum age population fish. K Brody growth coefficient fit von Bertalanffy growth function. Linf asymptotic mean length (cm) fit von Bertalanffy growth function. t0 x-intercept fit von Bertalanffy growth function. b exponent weight-length relationship (slope logW-logL relationship). L body length fish (cm). Temp temperature experienced fish (C). t50 age (time) half fish population mature. Winf asymptotic mean weight (g) fit von Bertalanffy growth function. x metaM object returned metaM justM=FALSE. digits numeric controls number digits printed estimate M. ... Additional arguments methods. implemented.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/metaM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate natural mortality from a variety of empirical methods. — Mmethods","text":"Mmethods returns character vector list methods. one method chosen metaM returns single numeric justM=TRUE , otherwise, metaM object list following items: method: name method within function (given method). name: descriptive name method. givens: vector values required method estimate M. M: estimated natural mortality rate. multiple methods chosen data.frame returned method name abbreviation method variable associated estimated M M variable.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/metaM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate natural mortality from a variety of empirical methods. — Mmethods","text":"One several methods chosen method. available methods can seen Mmethods() listed brief description equation came . sources (listed ) consulted specific information. method=\"HoenigNLS\":  “modified Hoenig equation derived non-linear model” described et al. (2015) third line Table 3. method preferred method suggested et al. (2015). Requires tmax. method=\"PaulyLNoT\": “modified Pauly length equation” described sixth line Table 3 et al. (2015). et al. (2015) suggested preferred model maximum age (tmax) information available. Requires K Linf. method=\"PaulyL\": “Pauly (1980) equation using fish lengths” equation 11. commonly used method literature. Note Pauly used common logarithms used model often presented sources natural logarithms. Requires K, Linf, T. method=\"PaulyW\": “Pauly (1980) equation weights” equation 10. Requires K, Winf, T. method=\"HoeingO\", method=\"HoeingOF\", method=\"HoeingOM\", method=\"HoeingOC\": original “Hoenig (1983) composite”, “fish”, “mollusc”, “cetacean” (fit OLS) equations second column page 899 Hoenig (1983). Requires tmax. method=\"HoeingO2\", method=\"HoeingO2F\", method=\"HoeingO2M\", method=\"HoeingO2C\": original “Hoenig (1983) composite”, “fish”, “mollusc”, “cetacean” (fit Geometric Mean Regression) equations second column page 537 Kenchington (2014). Requires tmax. method=\"HoenigLM\": “modified Hoenig equation derived linear model” described et al. (2015) second line Table 3. Requires tmax. method=\"HewittHoenig\": “Hewitt Hoenig (2005) equation” equation 8. Requires tmax. method=\"tmax1\": “one-parameter tmax equation” first line Table 3 et al. (2015). Requires tmax. method=\"K1\":  “one-parameter K equation” fourth line Table 3 et al. (2015). Requires K. method=\"K2\": “two-parameter K equation” fifth line Table 3 et al. (2015). Requires K. method=\"JensenK1\": “Jensen (1996) one-parameter K equation”. Requires K. method=\"JensenK2\": “Jensen (2001) two-parameter K equation” equation 8. Requires K. method=\"Gislason\": “Gislason et al. (2010) equation” equation 2. Requires K, Linf, L. method=\"AlversonCarney\": “Alverson Carney (1975) equation” given equation 10 Zhang Megrey (2006). Requires tmax K. method=\"Charnov\": “Charnov et al. (2013) equation” given second column page 545 Kenchington (2014). Requires K, Linf, L. method=\"ZhangMegreyD\", method=\"ZhangMegreyP\": “Zhang Megrey (2006) equation” given equation 8 modified demersal pelagic fish. Thus, user must choose fish type group. Requires tmax, K, t0, t50, b. method=\"RikhterEfanov1\": “Rikhter Efanov (1976) equation (#2)” given second column page 541 Kenchington (2014) Table 6.4 Miranda Bettoli (2007). Requires t50. method=\"RikhterEfanov2\": “Rikhter Efanov (1976) equation (#1)” given first column page 541 Kenchington (2014). Requires t50, K, t0, b.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/metaM.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Estimate natural mortality from a variety of empirical methods. — Mmethods","text":"Kenchington (2014) provided life history parameters several stocks used many models estimate M. checked calculations PaulyL, PaulyW, HoenigO Hgroup=\"\" Hgroup=\"fish\", HoenigO2 Hgroup=\"\" Hgroup=\"fish\", \"JensenK1\", \"Gislason\", \"AlversonCarney\", \"Charnov\", \"ZhangMegrey\", \"RikhterEfanov1\", \"RikhterEfanov2\" methods three stocks. results perfectly matched Kenchington's results Chesapeake Bay Anchovy Rio Formosa Seahorse. Norwegian Fjord Lanternfish, results perfectly matched Kenchington's results except Hgroup=\"fish\" HoenigO HoenigO2. Results Rio Formosa Seahorse data also tested results M.empirical fishmethods PaulyL, PaulyW, HoenigO Hgroup=\"\" Hgroup=\"fish\", \"Gislason\", \"AlversonCarney\" methods (methods common two packages). results matched perfectly.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/metaM.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Estimate natural mortality from a variety of empirical methods. — Mmethods","text":"11-Mortality.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/metaM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate natural mortality from a variety of empirical methods. — Mmethods","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Alverson, D.L. M.J. Carney. 1975. graphic review growth decay population cohorts. Journal du Conseil International pour l'Exploration de la Mer. 36:133-143. Charnov, E.L., H. Gislason, J.G. Pope. 2013. Evolutionary assembly rules fish life histories. Fish Fisheries. 14:213-224. Gislason, H., N. Daan, J.C. Rice, J.G. Pope. 2010. Size, growth, temperature natural mortality marine fish. Fish Fisheries 11:149-158. Hewitt, D.. J.M. Hoenig. 2005. Comparison two approaches estimating natural mortality based longevity. Fishery Bulletin. 103:433-437. [(?) http://fishbull.noaa.gov/1032/hewitt.pdf.] Hoenig, J.M. 1983. Empirical use longevity data estimate mortality rates. Fishery Bulletin. 82:898-903. [(?) http://www.afsc.noaa.gov/REFM/age/Docs/Hoenig_EmpiricalUseOfLongevityData.pdf.] Jensen, .L. 1996. Beverton Holt life history invariants result optimal trade-reproduction survival. Canadian Journal Fisheries Aquatic Sciences. 53:820-822. [(?) .] Jensen, .L. 2001. Comparison theoretical derivations, simple linear regressions, multiple linear regression principal components analysis fish mortality, growth environmental temperature data. Environometrics. 12:591-598. [(?) http://deepblue.lib.umich.edu/bitstream/handle/2027.42/35236/487_ftp.pdf.] Kenchington, T.J. 2014. Natural mortality estimators information-limited fisheries. Fish Fisheries. 14:533-562. Pauly, D. 1980. interrelationships natural mortality, growth parameters, mean environmental temperature 175 fish stocks. Journal du Conseil International pour l'Exploration de la Mer. 39:175-192. [(?) http://innri.unuftp./pauly/%20the%20interrelationships%20betwe.pdf.] Rikhter, V.., V.N. Efanov. 1976. one approaches estimating natural mortality fish populations (Russian). ICNAF Research Document 76/IV/8, 12pp. , .Y., J.M. Hoenig, N.G. Hall, D.. Hewitt. 2015. Evaluating predictive performance empirical estimators natural mortality rate using information 200 fish species. ICES Journal Marine Science. 72:82-92. Zhang, C-B.. Megrey. 2006. revised Alverson Carney model estimating instantaneous rate natural mortality. Transactions American Fisheries Society. 135-620-633. [(?) http://www.pmel.noaa.gov/foci/publications/2006/zhan0531.pdf.]","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/metaM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate natural mortality from a variety of empirical methods. — Mmethods","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/metaM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate natural mortality from a variety of empirical methods. — Mmethods","text":"","code":"## List names for available methods Mmethods() #>  [1] \"HoenigNLS\"      \"HoenigO\"        \"HoenigOF\"       \"HoenigOM\"       #>  [5] \"HoenigOC\"       \"HoenigO2\"       \"HoenigO2F\"      \"HoenigO2M\"      #>  [9] \"HoenigO2C\"      \"HoenigLM\"       \"HewittHoenig\"   \"tmax1\"          #> [13] \"PaulyLNoT\"      \"PaulyL\"         \"PaulyW\"         \"K1\"             #> [17] \"K2\"             \"JensenK1\"       \"JensenK2\"       \"Gislason\"       #> [21] \"AlversonCarney\" \"Charnov\"        \"ZhangMegreyD\"   \"ZhangMegreyP\"   #> [25] \"RikhterEfanov1\" \"RikhterEfanov2\" Mmethods(\"tmax\") #>  [1] \"tmax1\"        \"HoenigNLS\"    \"HoenigO\"      \"HoenigOF\"     \"HoenigOM\"     #>  [6] \"HoenigOC\"     \"HoenigO2\"     \"HoenigO2F\"    \"HoenigO2M\"    \"HoenigO2C\"    #> [11] \"HoenigLM\"     \"HewittHoenig\"  ## Simple Examples metaM(\"tmax\",tmax=20) #> [1] 0.25545 metaM(\"tmax\",tmax=20,justM=FALSE) #> M=0.2554 as estimated with Then et al. (2015) tmax equation #>   with givens: tmax=20 metaM(\"HoenigNLS\",tmax=20) #> [1] 0.3150387 metaM(\"HoenigNLS\",tmax=20,justM=FALSE) #> M=0.315 as estimated with Then et al. (2015) Hoenig (NLS) equation #>   with givens: tmax=20   ## Example Patagonian Sprat ... from Table 2 in Cerna et al. (2014) ## http://www.scielo.cl/pdf/lajar/v42n3/art15.pdf Temp <- 11 Linf <- 17.71 K <- 0.78 t0 <- -0.46 tmax <- t0+3/K t50 <- t0-(1/K)*log(1-13.5/Linf) metaM(\"RikhterEfanov1\",t50=t50) #> [1] 1.050009 metaM(\"PaulyL\",K=K,Linf=Linf,Temp=Temp) #> [1] 1.14058 metaM(\"PaulyL\",K=K,Linf=Linf,Temp=Temp,justM=FALSE) #> M=1.1406 as estimated with Pauly (1980) length equation #>   with givens: K=0.78, Linf=17.71, Temp=11 metaM(\"HoenigNLS\",tmax=tmax) #> [1] 1.602862 metaM(\"HoenigO\",tmax=tmax) #> [1] 1.274125 metaM(\"HewittHoenig\",tmax=tmax) #> [1] 1.246252 metaM(\"AlversonCarney\",K=K,tmax=tmax) #> [1] 1.35398  ## Example of multiple calculations metaM(c(\"RikhterEfanov1\",\"PaulyL\",\"HoenigO\",\"HewittHoenig\",\"AlversonCarney\"),      K=K,Linf=Linf,Temp=Temp,tmax=tmax,t50=t50) #>           method        M #> 1 RikhterEfanov1 1.050009 #> 2         PaulyL 1.140580 #> 3        HoenigO 1.274125 #> 4   HewittHoenig 1.246252 #> 5 AlversonCarney 1.353980  ## Example of multiple methods using Mmethods # select some methods metaM(Mmethods()[-c(15,20,22:24,26)],K=K,Linf=Linf,Temp=Temp,tmax=tmax,t50=t50) #>            method         M #> 1       HoenigNLS 1.6028619 #> 2         HoenigO 1.2741252 #> 3        HoenigOF 1.2562214 #> 4        HoenigOM 1.2401272 #> 5        HoenigOC 0.8835623 #> 6        HoenigO2 1.4786176 #> 7       HoenigO2F 1.5784652 #> 8       HoenigO2M 1.4266652 #> 9       HoenigO2C 1.4625421 #> 10       HoenigLM 1.6243510 #> 11   HewittHoenig 1.2462517 #> 12          tmax1 1.5087915 #> 13      PaulyLNoT 1.3304645 #> 14         PaulyL 1.1405804 #> 15             K1 1.3197600 #> 16             K2 1.3070000 #> 17       JensenK1 1.1700000 #> 18       JensenK2 1.3566000 #> 19 AlversonCarney 1.3539801 #> 20 RikhterEfanov1 1.0500095 # select just the Hoenig methods metaM(Mmethods(\"Hoenig\"),K=K,Linf=Linf,Temp=Temp,tmax=tmax,t50=t50) #>          method         M #> 1     HoenigNLS 1.6028619 #> 2       HoenigO 1.2741252 #> 3      HoenigOF 1.2562214 #> 4      HoenigOM 1.2401272 #> 5      HoenigOC 0.8835623 #> 6      HoenigO2 1.4786176 #> 7     HoenigO2F 1.5784652 #> 8     HoenigO2M 1.4266652 #> 9     HoenigO2C 1.4625421 #> 10     HoenigLM 1.6243510 #> 11 HewittHoenig 1.2462517"},{"path":"https://fishr-core-team.github.io/FSA/reference/mrClosed.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate initial population size for single or multiple census mark-recapture data. — mrClosed","title":"Estimate initial population size for single or multiple census mark-recapture data. — mrClosed","text":"Estimates initial population size, along associated confidence intervals, constructed single multiple census mark-recapture data using variety methods. single census data, initial population size (N) estimated number marked animals first sample (M), number captured animals second sample (n), number recaptured marked animals second sample (m) using either ‘naive’ Petersen method Chapman, Ricker, Bailey modifications Petersen method. Single census data can also separated group (e.g., size class) estimate initial population size class overall population size. multiple census data, initial population size estimated number captured animals (n), number recaptured marked animals (m), number marked animals marked returned population (R), number extant marked animals prior sample (M) several samples using either Schnabel (1938) Schumacher-Eschmeyer (1943) method.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrClosed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate initial population size for single or multiple census mark-recapture data. — mrClosed","text":"","code":"mrClosed(   M = NULL,   n = NULL,   m = NULL,   R = NULL,   method = c(\"Petersen\", \"Chapman\", \"Ricker\", \"Bailey\", \"Schnabel\",     \"SchumacherEschmeyer\"),   labels = NULL,   chapman.mod = TRUE )  # S3 method for mrClosed1 summary(   object,   digits = 0,   incl.SE = FALSE,   incl.all = TRUE,   verbose = FALSE,   ... )  # S3 method for mrClosed1 confint(   object,   parm = NULL,   level = conf.level,   conf.level = 0.95,   digits = 0,   type = c(\"suggested\", \"binomial\", \"hypergeometric\", \"normal\", \"Poisson\"),   bin.type = c(\"wilson\", \"exact\", \"asymptotic\"),   poi.type = c(\"exact\", \"daly\", \"byar\", \"asymptotic\"),   incl.all = TRUE,   verbose = FALSE,   ... )  # S3 method for mrClosed2 summary(object, digits = 0, verbose = FALSE, ...)  # S3 method for mrClosed2 confint(   object,   parm = NULL,   level = conf.level,   conf.level = 0.95,   digits = 0,   type = c(\"suggested\", \"normal\", \"Poisson\"),   poi.type = c(\"exact\", \"daly\", \"byar\", \"asymptotic\"),   verbose = FALSE,   ... )  # S3 method for mrClosed2 plot(   x,   pch = 19,   col.pt = \"black\",   xlab = \"Marked in Population\",   ylab = \"Prop. Recaptures in Sample\",   loess = FALSE,   lty.loess = 2,   lwd.loess = 1,   col.loess = \"gray20\",   trans.loess = 10,   span = 0.9,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/mrClosed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate initial population size for single or multiple census mark-recapture data. — mrClosed","text":"M numeric representing number marked fish first sample (single-census), object capHistSum() (single- multiple-census), numeric vector marked fish prior ith samples (multiple-census). n numeric representing number captured fish second sample (single-census) numeric vector captured fish ith sample (multiple-census). m numeric representing number recaptured (marked) fish second sample (single-census) numeric vector recaptured (marked) fish ith sample (multiple-census). R numeric vector representing number marked fish returned population (multiple-census). Note several references use number “new” marks returned population rather “total” number marks returned population used . method single string identifies type calculation method use main function. labels character character vector used label rows resulting output matrix using single census method separated groups. Must length M, n, m. Defaults upper-case letters values given. chapman.mod logical represents whether Chapman modification used (=TRUE, default) (=FALSE) performing Schnabel multiple census method. object, x mrClosed1 mrClosed2 object. digits number decimal digits round population estimates . incl.SE=TRUE SE rounded one decimal place given digits. incl.SE logical indicates whether results include calculated SE value. See details. incl.logical indicates whether overall population estimate computed using single census method separated sub-groups. See details. verbose logical indicates whether reminder inputted values type method used printed summary confidence interval results. ... Additional arguments methods. parm used (included confint generic). level conf.level used compatibility confint generic. conf.level numeric representing level confidence use confidence intervals. type single string identifies distribution use constructing confidence intervals confint. See details. bin.type string identifies method used construct binomial confidence intervals (default \"wilson\"). used type=\"binomial\" confint. See details binCI. poi.type string identifies method used construct Poisson confidence intervals (default \"exact\"). used type=\"Poisson\" confint. See details poiCI. pch numeric used indicate type plotting character. col.pt string used indicate color plotted points. xlab label x-axis. ylab label y-axis. loess logical indicates loess smoother line (approximate 95% confidence band) fit shown plot. lty.loess single numeric used indicate type line used loess line. lwd.loess single numeric used indicate line width loess line. col.loess single string used indicate color loess line. trans.loess single numeric indicates transparent loess band (larger numbers transparent). span single numeric controls degree smoothing. Values closer 1 smooth.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrClosed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate initial population size for single or multiple census mark-recapture data. — mrClosed","text":"list following items  M number marked fish first sample provided. n number captured fish second sample provided. m number recaptured (marked) fish second sample provided. M1 adjusted (depending type) number marked fish first sample. n1 adjusted (depending type) number captured fish second sample. m1 adjusted (depending type) number recaptured (marked) fish second sample. cf correction factor population estimate depends type. method type method used (provided user). methodLbl label type method used. N estimated initial population size. labels Labels rows summary matrix.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrClosed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate initial population size for single or multiple census mark-recapture data. — mrClosed","text":"single census data, following methods can used: method=\"Petersen\". ‘naive’ Petersen computed using equation 2.1 Krebs (1989). method=\"Chapman\". Chapman (1951) modification Petersen method computed using equation 2.2 Krebs (1989). method=\"Ricker\". Ricker (1975) modification Petersen computed using equation 3.7 Ricker (1975). basically method=\"Chapman\" except Ricker (1975) subtract 1 answer final step. Thus, estimate method=\"Chapman\" always one less estimate method=\"Ricker\". method=\"Bailey\". Bailey (1951, 1952) modification Petersen computed using equation 2.3 Krebs (1989). M contains object capHistSum one Petersen, Chapman, Ricker, Bailey methods selected method= n= m= can left missing ignored needed data extracted sum portion CapHist class object. data summarized capHistSum M=, n=, m= must supplied user. population estimate (computed formulas noted table ) extracted summary. addition, standard error population estimate (SE) can extracted including incl.SE=TRUE. SE equation 3.6 (p. 78) Ricker (1975) Petersen method, p. 60 (near bottom) Seber (2002) Chapman method, p. 61 (middle) Seber (2002) (noted p. 79 Ricker (1975)) Bailey method, equation 3.8 (p. 78) Ricker (1975) Ricker method. Confidence intervals initial population size single census methods can constructed using four different distributions chosen type= confint. type=\"suggested\" type confidence interval suggested rules p. 18 Krebs (1989) used. general methods constructing confidence intervals N described type=\"hypergeometric\". Uses hyperCI. experimental point. type=\"binomial\". Use binCI construct confidence interval m/n (Petersen method) (m+1)/(n+1) (Chapman, Bailey, Ricker methods), divides M (M+1) CI endpoints, subtract 1 (Chapman method). type=\"Poisson\". Use poiCI construct confidence interval m (Petersen method) (m+1) (Chapman, Bailey, Ricker methods), substitute CI endpoints appropriate equation estimating N, subtract 1 (Chapman method). type=\"normal\". Used equation 2.4 (p.20) Krebs (2002) Petersen method. methods, used N+/- Z(0.975)*SE, SE computed noted . incl.=TRUE summary population estimates constructed multiple sub-groups overall population estimate included summing population estimates multiple sub-groups. incl.SE=TRUE, overall SE computed taking square root summed VARIANCES multiple sub-groups. multiple census data, following methods can declared use method= argument: method=\"Schnabel\". Schnabel (1938) method computed equation 3.15 Ricker (1975). method=\"SchumacherEschmeyer\". Schumacher Eschmeyer (1943) method computed equation 3.12 Ricker (1975) eqn 3.12. M contains object capHistSum Schnabel Schumacher-Eschmeyer methods chosen n, m R can left missing ignored. case, needed data extracted sum portion CapHist class object. Otherwise, user must supply vectors results n, m, R M. population estimate method extracted summary. Standard errors population estimate can computed Schnabel Schumacher-Eschmeyer methods (warning produced incl.SE=TRUE used). Confidence intervals initial population size using multiple census methods can constructed using normal Poisson distributions Schnabel method normal distribution Schumacher-Eschmeyer method chosen type=. type=\"suggested\" type confidence interval suggested rule p. 32 Krebs (1989) used (Schnabel method). type=\"Poisson\" Schnabel method confidence interval sum m computed poiCI end points substituted Schnabel equation produce CI population size. type=\"normal\" Schnabel method standard error inverse population estimate computed square root equation 2.11 Krebs (1989) equation 3.16 Ricker (1975). standard error Schumacher-Eschmeyer method inverse population estimate computed equation 2.14 Krebs (1989) [Note divisor Krebs (1989) different divisor equation 3.12 Ricker (1975), consistent equation 4.17 Seber (2002).]  confidence interval inverse population estimate constructed inverse population estimate plus/minus t critical value times standard error inverse population estimate. t critical value uses number samples minus 1 Schnabel method number samples minus 2 Schumacher-Eschmeyer method according p. 32 Krebs (1989) (note different Ricker (1975) ). Finally, confidence interval population estimate obtained inverting confidence interval inverse population estimate. Note confidence intervals population size type=\"normal\" may contain negative values (upper value) population estimate relatively large number samples small (say, three) intervals originally constructed inverted population estimate use t-distribution. plot can used identify assumption violations Schnabel Schumacher-Eschmeyer methods (error returned used methods). assumptions met plot proportion marked fish sample versus cumulative number marked fish look linear. loess line (approximate 95% confidence bands) can added aid interpretation loess=TRUE. Note, however, adding loess line may return number warning produce non-informative number samples small (<8).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrClosed.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Estimate initial population size for single or multiple census mark-recapture data. — mrClosed","text":"results single census methods following checks. population estimates methods match reputable sources. SE Chapman Bailey methods match results mrN.single fishmethods,  CI Petersen, Chapman, Bailey methods partially match (within 1 results multiple census methods following checks. population estimates methods match reputable sources. intermediate calculations methods match Krebs (1989). confidence interval Schnabel method using Poisson distribution match Krebs (1989). appears difference use poiCI versus distributional tables Krebs (.e., difference appears completely critical values Poisson distribution). confidence interval Schnabel method using normal Poisson distribution match Ricker (1975), enough information Ricker determine (likely due numerical differences inverse scale). confidence interval Schumacher-Eschmeyer method match Krebs (1989) Ricker (1975). Ricker result may due different df noted .","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrClosed.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Estimate initial population size for single or multiple census mark-recapture data. — mrClosed","text":"9-Abundance Capture-Recapture Data.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrClosed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate initial population size for single or multiple census mark-recapture data. — mrClosed","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Krebs, C.J. 1989. Ecological Methodology. Addison-Welsey Educational Publishing. Ricker, W.E. 1975. Computation interpretation biological statistics fish populations. Technical Report Bulletin 191, Bulletin Fisheries Research Board Canada. [(?) http://www.dfo-mpo.gc.ca/Library/1485.pdf.] Seber, G..F. 2002. Estimation Animal Abundance Related Parameters. Edward Arnold, second edition. Schnabel, Z.E. 1938. estimation total fish population lake. American Mathematician Monthly, 45:348-352. Schumacher, F.X. R.W. Eschmeyer. 1943. estimation fish populations lakes ponds. Journal Tennessee Academy Sciences, 18:228-249.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/mrClosed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate initial population size for single or multiple census mark-recapture data. — mrClosed","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrClosed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate initial population size for single or multiple census mark-recapture data. — mrClosed","text":"","code":"### Single census with no sub-groups ## Petersen estimate -- the default mr1 <- mrClosed(346,184,49) summary(mr1) #>         N #> [1,] 1299 summary(mr1,verbose=TRUE) #> Used the 'naive' Petersen method with M=346, n=184, and m=49. #>         N #> [1,] 1299 summary(mr1,incl.SE=TRUE) #>         N  SE #> [1,] 1299 159 summary(mr1,incl.SE=TRUE,digits=1) #>           N     SE #> [1,] 1299.3 158.99 confint(mr1) #>      95% LCI 95% UCI #> [1,]    1034    1666 confint(mr1,verbose=TRUE) #> The binomial (wilson method) distribution was used. #>      95% LCI 95% UCI #> [1,]    1034    1666 confint(mr1,type=\"hypergeometric\") #>      95% LCI 95% UCI #> [1,]    1049    1670  ## Chapman modification of the Petersen estimate mr2 <- mrClosed(346,184,49,method=\"Chapman\") summary(mr2,incl.SE=TRUE) #>         N    SE #> [1,] 1283 142.1 summary(mr2,incl.SE=TRUE,verbose=TRUE) #> Used Chapman's modification of the Petersen method with M=346, n=184, and m=49. #>         N    SE #> [1,] 1283 142.1  ### Single census, using capHistSum() results ## data in capture history format str(BluegillJL) #> 'data.frame':\t277 obs. of  2 variables: #>  $ first : int  1 0 1 0 1 1 1 1 1 1 ... #>  $ second: int  0 1 0 1 0 0 0 0 0 0 ... ch1 <- capHistSum(BluegillJL) mr3 <- mrClosed(ch1) summary(mr3,verbose=TRUE) #> Used the 'naive' Petersen method with M=196, n=90, and m=9. #>         N #> [1,] 1960 confint(mr3,verbose=TRUE) #> The Poisson (exact method) distribution was used. #>      95% LCI 95% UCI #> [1,]    1032    4286  ### Single census with sub-groups marked <- c(93,35,72,16,46,20) captured <- c(103,30,73,17,39,18) recaps <- c(20,23,52,15,35,16) lbls <- c(\"YOY\",\"Juvenile\",\"Stock\",\"Quality\",\"Preferred\",\"Memorable\") mr4 <- mrClosed(marked,captured,recaps,method=\"Ricker\",labels=lbls) summary(mr4) #>             N #> YOY       466 #> Juvenile   46 #> Stock     102 #> Quality    19 #> Preferred  52 #> Memorable  23 #> All       708 summary(mr4,incl.SE=TRUE) #>             N   SE #> YOY       466 88.7 #> Juvenile   46  4.4 #> Stock     102  7.4 #> Quality    19  1.5 #> Preferred  52  2.7 #> Memorable  23  1.8 #> All       708 89.2 summary(mr4,incl.SE=TRUE,verbose=TRUE) #> Used Ricker's modification of the Petersen method with observed inputs (by group) of: #>   YOY: M=93, n=103, and m=20 #>   Juvenile: M=35, n=30, and m=23 #>   Stock: M=72, n=73, and m=52 #>   Quality: M=16, n=17, and m=15 #>   Preferred: M=46, n=39, and m=35 #>   Memorable: M=20, n=18, and m=16 #>             N   SE #> YOY       466 88.7 #> Juvenile   46  4.4 #> Stock     102  7.4 #> Quality    19  1.5 #> Preferred  52  2.7 #> Memorable  23  1.8 #> All       708 89.2 summary(mr4,incl.SE=TRUE,incl.all=FALSE,verbose=TRUE) #> Used Ricker's modification of the Petersen method with observed inputs (by group) of: #>   YOY: M=93, n=103, and m=20 #>   Juvenile: M=35, n=30, and m=23 #>   Stock: M=72, n=73, and m=52 #>   Quality: M=16, n=17, and m=15 #>   Preferred: M=46, n=39, and m=35 #>   Memorable: M=20, n=18, and m=16 #>             N   SE #> YOY       466 88.7 #> Juvenile   46  4.4 #> Stock     102  7.4 #> Quality    19  1.5 #> Preferred  52  2.7 #> Memorable  23  1.8 confint(mr4) #>           95% LCI 95% UCI #> YOY           325     691 #> Juvenile       41      60 #> Stock          91     121 #> Quality        18      25 #> Preferred      49      61 #> Memorable      22      31 #> All           533     883 confint(mr4,verbose=TRUE) #> YOY - The binomial (wilson method) distribution was used. #> Juvenile - The binomial (wilson method) distribution was used. #> Stock - The binomial (wilson method) distribution was used. #> Quality - The binomial (wilson method) distribution was used. #> Preferred - The binomial (wilson method) distribution was used. #> Memorable - The binomial (wilson method) distribution was used. #> All - The normal distribution was used. #>           95% LCI 95% UCI #> YOY           325     691 #> Juvenile       41      60 #> Stock          91     121 #> Quality        18      25 #> Preferred      49      61 #> Memorable      22      31 #> All           533     883 confint(mr4,incl.all=FALSE,verbose=TRUE) #> YOY - The binomial (wilson method) distribution was used. #> Juvenile - The binomial (wilson method) distribution was used. #> Stock - The binomial (wilson method) distribution was used. #> Quality - The binomial (wilson method) distribution was used. #> Preferred - The binomial (wilson method) distribution was used. #> Memorable - The binomial (wilson method) distribution was used. #>           95% LCI 95% UCI #> YOY           325     691 #> Juvenile       41      60 #> Stock          91     121 #> Quality        18      25 #> Preferred      49      61 #> Memorable      22      31  ### Multiple Census ## Data in summarized form ... Schnabel method mr5 <- with(PikeNY,mrClosed(n=n,m=m,R=R,method=\"Schnabel\")) plot(mr5) plot(mr5,loess=TRUE)  summary(mr5) #>       N #> [1,] 87 summary(mr5,verbose=TRUE) #> Used the Schnabel method with Chapman modification. #>       N #> [1,] 87 confint(mr5) #>      95% LCI 95% UCI #> [1,]      71     113 confint(mr5,verbose=TRUE) #> The normal distribution was used. #>      95% LCI 95% UCI #> [1,]      71     113  ## Schumacher-Eschmeyer method mr6 <- with(PikeNY,mrClosed(n=n,m=m,R=R,method=\"Schumacher\")) summary(mr6) #>       N #> [1,] 85 confint(mr6) #>      95% LCI 95% UCI #> [1,]      76      96  ### Capture history data summarized by capHistSum() # ignore first column of ID numbers ch2 <- capHistSum(PikeNYPartial1,cols2ignore=\"id\")  ## Schnabel method mr7 <- mrClosed(ch2,method=\"Schnabel\") plot(mr7)  summary(mr7) #>        N #> [1,] 128 confint(mr7) #>      95% LCI 95% UCI #> [1,]      75     238"},{"path":"https://fishr-core-team.github.io/FSA/reference/mrOpen.html","id":null,"dir":"Reference","previous_headings":"","what":"Jolly-Seber analysis from multiple mark-recapture events from an open population. — jolly","title":"Jolly-Seber analysis from multiple mark-recapture events from an open population. — jolly","text":"function takes two parts Method B table uses Jolly-Seber method estimate population size possible sample period apparent survival rate number additional individuals added population possible sample periods. method assumes population open.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrOpen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jolly-Seber analysis from multiple mark-recapture events from an open population. — jolly","text":"","code":"jolly(...)  mrOpen(   mb.top,   mb.bot = NULL,   type = c(\"Jolly\", \"Manly\"),   conf.level = 0.95,   phi.full = TRUE )  # S3 method for mrOpen summary(object, parm = c(\"N\", \"phi\", \"B\", \"M\"), verbose = FALSE, ...)  # S3 method for mrOpen confint(   object,   parm = c(\"N\", \"phi\", \"B\"),   level = NULL,   conf.level = NULL,   verbose = FALSE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/mrOpen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jolly-Seber analysis from multiple mark-recapture events from an open population. — jolly","text":"... Additional arguments methods. mb.top matrix contains “top” Method B table (.e., contingency table capture sample (columns) last seen sample (rows)) object class CapHist capHistSum. See details. mb.bot data frame contains “bottom” Method B table (.e., number marked fish sample (m), number unmarked fish sample (u), total number fish sample (n), number marked fish returned population following sample (R)). type string indicates whether large sample (normal theory) method Jolly (type=\"Jolly\") “arbitrary” method Manly (type=\"Manly\") used construct confidence intervals. conf.level single numeric indicates level confidence use constructing confidence intervals (default 0.95). See details. phi.full logical indicates whether standard error phi include sampling variability (phi.full=FALSE) sampling individual variability (phi.full=TRUE,default). object object mrOpen (.e., class mrOpen). parm string identifies model parameters return summaries confidence intervals. default, parameters returned. verbose logical indicates observables notes printed summary type confidence interval used printed confint. See details. level conf.level used compatibility generic confint function.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrOpen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jolly-Seber analysis from multiple mark-recapture events from an open population. — jolly","text":"list following items:  df data frame contains observable summaries data estimates number extant marked fish  (M), population size possible sample period (N), apparent survival rate possible pair sample periods (phi), number additional individuals added population possible pair sample periods (B). addition estimates, values standard errors lower upper confidence interval bounds parameter provided (however, see details ). type provided type confidence intervals used. phi.full provided logical indicates type standard error phi used. conf.level provided level confidence used.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrOpen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jolly-Seber analysis from multiple mark-recapture events from an open population. — jolly","text":"jolly just convenience wrapper produces exact results mrOpen. mb.top contains object capHistSum function mb.bot can left missing. case, function extract needed data methodB.top methodB.bot portions CapHist class object. mb.top matrix must square, must non-negative NA values upper triangle, NA values lower triangle diagonal. mb.bot matrix must four rows named m, u, n, R (see capHistSum definitions), values must non-NA, first value m must 0. last value R can either 0 positive number (ultimately ignored calculations). parameter estimates performed using equations 4.6-4.9 Pollock et al. (1990) page 204 Seber 2002. type=\"Jolly\" standard errors (square root variances) equations 4.11, 4.12, 4.14 Pollock et al. (1990) (different Seber (2002) ... see Pollock et al.'s note page 21). type=\"Jolly\" phi.full=TRUE full variance phi parameter given eqn 4.18 Pollock et al. (1990), otherwise eqn 4.13 Pollock et al. (1990) used. type=\"Jolly\" confidence interval produced using normal theory (.e., estimate +/- z*SE). type=\"Manly\" confidence intervals N phi (none produced B) constructed using methods Manly (1984) described 2.24-2.33 Krebs (1989). standard errors returned type=\"Manly\". summary function returns estimates M, N, phi, B, associated standard errors , verbose=TRUE intermediate calculations “observables” data -- n, m, R, r, z. level confidence set confint function, contrast confint functions. Rather confidence level set main mrOpen function.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrOpen.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Jolly-Seber analysis from multiple mark-recapture events from an open population. — jolly","text":"formulas triple-checked formulas Pollock et al. (1990), Manly (1984), Seber (2002). results CutthroatAL data file (analyzed example) compared results JOLLY program available http://www.mbr-pwrc.usgs.gov/software/jolly.html. r z values matched, M N estimates match one decimal place, phi within 0.001, B within 0.7. SE match M except two estimates within 0.1, match N except one estimate within 0.1, within 0.001 phi, within 1.3 B (except first estimate dramatically ). results mrOpen related Table 4.4 Pollock et al. (1990) match (one decimal place) except three estimates within 0.1% N, match (two decimal places) phi except Pollock set phi>1 phi=1, match B except Pollock set B<0 B=0. SE match (two decimal places) N except N15 (within 0.5, <5%), match (three decimal places) phi except phi15 (within 0.001, <0.5%), match (two decimal places) B except B17 B20 within 0.2 (<0.2%) point estimates M, N, phi, B SE phi match results Table 2.3 Krebs (1989) (within minimal rounding error small number results). SE N results close Krebs (1989) (provide formula SE discrepancy explored). SE B results match Krebs (1989) 5 8 values within 5% 2 3 values (last estimate 27%). comparing Jolly's data presented Tables 5.1 5.2 Seber (2002), M within 4 (less 1.5%), N within 3% (except N2 within 9%), phi within 0.01 (less 1.5","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrOpen.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Jolly-Seber analysis from multiple mark-recapture events from an open population. — jolly","text":"9-Abundance Capture-Recapture Data 11-Mortality.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrOpen.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Jolly-Seber analysis from multiple mark-recapture events from an open population. — jolly","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Jolly, G.M. 1965. Explicit estimates capture-recapture data death immigration -- stochastic model. Biometrika, 52:225-247. Krebs, C.J. 1989. Ecological Methodology. Harper & Row Publishers, New York. Leslie, P.H. D. Chitty. 1951. estimation population parameters data obtained means capture-recapture method. . maximum likelihood equations estimating death-rate. Biometrika, 38:269-292. Manly, B.F.J. 1984. Obtaining confidence limits parameters Jolly-Seber model capture-recapture data. Biometrics, 40:749-758. Pollock, K.H., J.D. Nichols, C. Brownie, J.E. Hines. 1991. Statistical inference capture-recapture experiments. Wildlife Monographs, 107:1-97. Seber, G..F. 1965. note multiple recapture census. Biometrika 52:249-259. Seber, G..F. 2002. Estimation Animal Abundance. Edward Arnold, second edition (reprinted).","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/mrOpen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Jolly-Seber analysis from multiple mark-recapture events from an open population. — jolly","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/mrOpen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jolly-Seber analysis from multiple mark-recapture events from an open population. — jolly","text":"","code":"## First example -- capture histories summarized with capHistSum() ch1 <- capHistSum(CutthroatAL,cols2use=-1)  # ignore first column of fish ID ex1 <- mrOpen(ch1) summary(ex1) #>         M M.se     N  N.se   phi phi.se     B  B.se #> i=1    NA   NA    NA    NA 0.411  0.088    NA    NA #> i=2  36.6  6.4 561.1 117.9 0.349  0.045 198.6  48.2 #> i=3 127.8 13.4 394.2  44.2 0.370  0.071 526.3 119.7 #> i=4 120.7 20.8 672.2 138.8 0.218  0.031 154.1  30.2 #> i=5  68.3  4.1 301.0  21.8 0.437  0.041 304.7  25.4 #> i=6 117.6  7.3 436.1  30.3 0.451  0.069 357.2  61.2 #> i=7 175.1 24.6 553.7  84.3 0.268  0.072 106.9  36.2 #> i=8 100.2 24.7 255.3  65.4    NA     NA    NA    NA #> i=9    NA   NA    NA    NA    NA     NA    NA    NA summary(ex1,verbose=TRUE) #> Observables: #>      m   n   R   r  z #> i=1  0  89  89  26 NA #> i=2 22 352 352  96  4 #> i=3 94 292 292  51  6 #> i=4 41 233 233  46 16 #> i=5 58 259 259 100  4 #> i=6 99 370 370  99  5 #> i=7 91 290 290  44 13 #> i=8 52 134 134  13  5 #> i=9 18 140   0  NA NA #>  #> Estimates (phi.se includes sampling and individual variability): #>         M M.se     N  N.se   phi phi.se     B  B.se #> i=1    NA   NA    NA    NA 0.411  0.088    NA    NA #> i=2  36.6  6.4 561.1 117.9 0.349  0.045 198.6  48.2 #> i=3 127.8 13.4 394.2  44.2 0.370  0.071 526.3 119.7 #> i=4 120.7 20.8 672.2 138.8 0.218  0.031 154.1  30.2 #> i=5  68.3  4.1 301.0  21.8 0.437  0.041 304.7  25.4 #> i=6 117.6  7.3 436.1  30.3 0.451  0.069 357.2  61.2 #> i=7 175.1 24.6 553.7  84.3 0.268  0.072 106.9  36.2 #> i=8 100.2 24.7 255.3  65.4    NA     NA    NA    NA #> i=9    NA   NA    NA    NA    NA     NA    NA    NA summary(ex1,parm=\"N\") #>         N  N.se #> i=1    NA    NA #> i=2 561.1 117.9 #> i=3 394.2  44.2 #> i=4 672.2 138.8 #> i=5 301.0  21.8 #> i=6 436.1  30.3 #> i=7 553.7  84.3 #> i=8 255.3  65.4 #> i=9    NA    NA summary(ex1,parm=c(\"N\",\"phi\")) #>         N  N.se   phi phi.se #> i=1    NA    NA 0.411  0.088 #> i=2 561.1 117.9 0.349  0.045 #> i=3 394.2  44.2 0.370  0.071 #> i=4 672.2 138.8 0.218  0.031 #> i=5 301.0  21.8 0.437  0.041 #> i=6 436.1  30.3 0.451  0.069 #> i=7 553.7  84.3 0.268  0.072 #> i=8 255.3  65.4    NA     NA #> i=9    NA    NA    NA     NA confint(ex1) #>     N.lci N.uci phi.lci phi.uci B.lci B.uci #> i=1    NA    NA   0.237   0.584    NA    NA #> i=2 330.0 792.1   0.261   0.436 104.0 293.1 #> i=3 307.6 480.8   0.231   0.509 291.7 760.8 #> i=4 400.2 944.2   0.159   0.278  95.0 213.2 #> i=5 258.3 343.6   0.356   0.517 254.9 354.6 #> i=6 376.7 495.5   0.316   0.585 237.2 477.3 #> i=7 388.4 719.1   0.127   0.409  36.0 177.8 #> i=8 127.2 383.4      NA      NA    NA    NA #> i=9    NA    NA      NA      NA    NA    NA confint(ex1,parm=\"N\") #>     N.lci N.uci #> i=1    NA    NA #> i=2 330.0 792.1 #> i=3 307.6 480.8 #> i=4 400.2 944.2 #> i=5 258.3 343.6 #> i=6 376.7 495.5 #> i=7 388.4 719.1 #> i=8 127.2 383.4 #> i=9    NA    NA confint(ex1,parm=c(\"N\",\"phi\")) #>     N.lci N.uci phi.lci phi.uci #> i=1    NA    NA   0.237   0.584 #> i=2 330.0 792.1   0.261   0.436 #> i=3 307.6 480.8   0.231   0.509 #> i=4 400.2 944.2   0.159   0.278 #> i=5 258.3 343.6   0.356   0.517 #> i=6 376.7 495.5   0.316   0.585 #> i=7 388.4 719.1   0.127   0.409 #> i=8 127.2 383.4      NA      NA #> i=9    NA    NA      NA      NA confint(ex1,verbose=TRUE) #> The Jolly method was used to construct confidence intervals. #>     N.lci N.uci phi.lci phi.uci B.lci B.uci #> i=1    NA    NA   0.237   0.584    NA    NA #> i=2 330.0 792.1   0.261   0.436 104.0 293.1 #> i=3 307.6 480.8   0.231   0.509 291.7 760.8 #> i=4 400.2 944.2   0.159   0.278  95.0 213.2 #> i=5 258.3 343.6   0.356   0.517 254.9 354.6 #> i=6 376.7 495.5   0.316   0.585 237.2 477.3 #> i=7 388.4 719.1   0.127   0.409  36.0 177.8 #> i=8 127.2 383.4      NA      NA    NA    NA #> i=9    NA    NA      NA      NA    NA    NA  ## Second example - Jolly's data -- summarized data entered \"by hand\" s1 <- rep(NA,13) s2 <- c(10,rep(NA,12)) s3 <- c(3,34,rep(NA,11)) s4 <- c(5,18,33,rep(NA,10)) s5 <- c(2,8,13,30,rep(NA,9)) s6 <- c(2,4,8,20,43,rep(NA,8)) s7 <- c(1,6,5,10,34,56,rep(NA,7)) s8 <- c(0,4,0,3,14,19,46,rep(NA,6)) s9 <- c(0,2,4,2,11,12,28,51,rep(NA,5)) s10 <- c(0,0,1,2,3,5,17,22,34,rep(NA,4)) s11 <- c(1,2,3,1,0,4,8,12,16,30,rep(NA,3)) s12 <- c(0,1,3,1,1,2,7,4,11,16,26,NA,NA) s13 <- c(0,1,0,2,3,3,2,10,9,12,18,35,NA) jolly.top <- cbind(s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13)  n <- c(54,146,169,209,220,209,250,176,172,127,123,120,142) R <- c(54,143,164,202,214,207,243,175,169,126,120,120,0) m <- c(0,10,37,56,53,77,112,86,110,84,77,72,95) u <- n-m jolly.bot <- rbind(m,u,n,R)  ex2 <- mrOpen(jolly.top,jolly.bot) summary(ex2,verbose=TRUE) #> Observables: #>      m   n   R   r   z #> 1    0  54  54  24  NA #> 2   10 146 143  80  14 #> 3   37 169 164  70  57 #> 4   56 209 202  71  71 #> 5   53 220 214 109  89 #> 6   77 209 207 101 121 #> 7  112 250 243 108 110 #> 8   86 176 175  99 132 #> 9  110 172 169  70 121 #> 10  84 127 126  58 107 #> 11  77 123 120  44  88 #> 12  72 120 120  35  60 #> 13  95 142   0  NA  NA #>  #> Estimates (phi.se includes sampling and individual variability): #>        M M.se     N  N.se   phi phi.se     B  B.se #> 1     NA   NA    NA    NA 0.646  0.110    NA    NA #> 2   34.9  4.8 466.2 133.3 1.009  0.110 290.5 164.3 #> 3  169.5 17.9 758.1 125.6 0.864  0.107 293.0 134.2 #> 4  256.2 27.1 943.8 137.7 0.564  0.063 400.2 118.1 #> 5  227.0 17.4 928.8 120.2 0.834  0.074 101.5 110.0 #> 6  323.7 23.8 871.6  93.9 0.790  0.071 109.2  74.0 #> 7  358.2 24.9 795.7  72.0 0.651  0.057 134.4  54.7 #> 8  318.3 20.4 647.6  59.3 0.981  0.096 -11.6  52.4 #> 9  399.7 33.3 623.0  60.1 0.685  0.081  48.5  34.2 #> 10 314.3 27.6 473.3  48.8 0.880  0.121  82.8  39.1 #> 11 313.6 34.9 498.6  63.0 0.767  0.128  73.3  39.0 #> 12 273.7 36.2 453.6  66.6    NA     NA    NA    NA #> 13    NA   NA    NA    NA    NA     NA    NA    NA confint(ex2,verbose=TRUE) #> The Jolly method was used to construct confidence intervals. #>    N.lci  N.uci phi.lci phi.uci  B.lci B.uci #> 1     NA     NA   0.430   0.862     NA    NA #> 2  205.0  727.5   0.793   1.226  -31.4 612.5 #> 3  512.0 1004.3   0.654   1.074   30.0 556.0 #> 4  673.9 1213.8   0.441   0.687  168.8 631.6 #> 5  693.2 1164.5   0.689   0.980 -114.1 317.1 #> 6  687.6 1055.7   0.650   0.929  -35.8 254.1 #> 7  654.6  936.8   0.538   0.763   27.3 241.6 #> 8  531.3  763.9   0.794   1.169 -114.2  91.1 #> 9  505.2  740.8   0.526   0.844  -18.6 115.6 #> 10 377.6  569.0   0.644   1.116    6.2 159.5 #> 11 375.1  622.0   0.516   1.019   -3.2 149.8 #> 12 323.1  584.1      NA      NA     NA    NA #> 13    NA     NA      NA      NA     NA    NA  ex3 <- mrOpen(jolly.top,jolly.bot,type=\"Manly\") summary(ex3,verbose=TRUE) #> Observables: #>      m   n   R   r   z #> 1    0  54  54  24  NA #> 2   10 146 143  80  14 #> 3   37 169 164  70  57 #> 4   56 209 202  71  71 #> 5   53 220 214 109  89 #> 6   77 209 207 101 121 #> 7  112 250 243 108 110 #> 8   86 176 175  99 132 #> 9  110 172 169  70 121 #> 10  84 127 126  58 107 #> 11  77 123 120  44  88 #> 12  72 120 120  35  60 #> 13  95 142   0  NA  NA #>  #> Estimates (phi.se includes sampling and individual variability): #>        M     N   phi     B #> 1     NA    NA 0.646    NA #> 2   34.9 466.2 1.009 290.5 #> 3  169.5 758.1 0.864 293.0 #> 4  256.2 943.8 0.564 400.2 #> 5  227.0 928.8 0.834 101.5 #> 6  323.7 871.6 0.790 109.2 #> 7  358.2 795.7 0.651 134.4 #> 8  318.3 647.6 0.981 -11.6 #> 9  399.7 623.0 0.685  48.5 #> 10 314.3 473.3 0.880  82.8 #> 11 313.6 498.6 0.767  73.3 #> 12 273.7 453.6    NA    NA #> 13    NA    NA    NA    NA confint(ex3,verbose=TRUE) #> Manly did not provide a method for constructing confidence intervals for B. #> The Manly method was used to construct confidence intervals. #>    N.lci  N.uci phi.lci phi.uci #> 1     NA     NA   0.389   0.783 #> 2  301.3  979.4   0.705   1.100 #> 3  564.0 1210.0   0.627   1.028 #> 4  725.2 1427.8   0.422   0.658 #> 5  731.0 1353.0   0.629   0.901 #> 6  703.2 1219.3   0.602   0.866 #> 7  663.3 1060.8   0.499   0.712 #> 8  529.5  888.6   0.741   1.094 #> 9  506.4  863.4   0.513   0.821 #> 10 375.7  681.9   0.638   1.096 #> 11 384.5  751.9   0.535   1.034 #> 12 342.0  712.0      NA      NA #> 13    NA     NA      NA      NA  ## demonstrate use of jolly() ex3a <- jolly(jolly.top,jolly.bot)"},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsBoot.html","id":null,"dir":"Reference","previous_headings":"","what":"Associated S3 methods for nlsBoot from nlstools. — nlsBoot","title":"Associated S3 methods for nlsBoot from nlstools. — nlsBoot","text":"Provides S3 methods construct non-parametric bootstrap confidence intervals hypothesis tests parameter values predicted values response variable nlsBoot object nlstools package.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsBoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Associated S3 methods for nlsBoot from nlstools. — nlsBoot","text":"","code":"# S3 method for nlsBoot confint(   object,   parm = NULL,   level = conf.level,   conf.level = 0.95,   plot = FALSE,   err.col = \"black\",   err.lwd = 2,   rows = NULL,   cols = NULL,   ... )  # S3 method for nlsBoot predict(object, FUN, conf.level = 0.95, digits = NULL, ...)  htest(object, ...)  # S3 method for nlsBoot htest(   object,   parm = NULL,   bo = 0,   alt = c(\"two.sided\", \"less\", \"greater\"),   plot = FALSE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsBoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Associated S3 methods for nlsBoot from nlstools. — nlsBoot","text":"object object saved nlsBoot(). parm integer indicates parameter compute confidence interval hypothesis test . confidence interval computed parameters NULL. level conf.level. Used compatibility main confint. conf.level level confidence proportion. plot logical indicates whether plot constructed. confint, histogram parm parameters bootstrap samples error bars illustrate bootstrapped confidence intervals constructed. codehtest, histogram parm parameters vertical lines illustrating bovalue constructed. err.col single numeric character identifies color error bars plot. err.lwd single numeric identifies line width error bars plot. rows numeric contains number rows use graphic. cols numeric contains number columns use graphic. ... Additional arguments functions. FUN function applied prediction. See examples. digits single numeric indicates number digits result. bo null hypothesized parameter value. alt string identifies “direction” alternative hypothesis. See details.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsBoot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Associated S3 methods for nlsBoot from nlstools. — nlsBoot","text":"confint returns matrix many rows columns (.e., parameter estimates) object$coefboot data frame two columns quantiles correspond approximate confidence interval. htest returns matrix two columns. first column contains hypothesized value sent function second column corresponding p-value. predict returns matrix one row three columns, first column holding predicted value (.e., median prediction) last two columns holding approximate confidence interval.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsBoot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Associated S3 methods for nlsBoot from nlstools. — nlsBoot","text":"confint finds two quantiles proportion (1-conf.level)/2 bootstrapped parameter estimates . approximate 100conf.level% confidence interval. htest “direction” alternative hypothesis identified string alt= argument. strings may \"less\" “less ” alternative, \"greater\" “greater ” alternative, \"two.sided\" “equals” alternative (DEFAULT). one-tailed alternatives p-value proportion bootstrapped parameter estimates object$coefboot extreme null hypothesized parameter value bo. two-tailed alternative p-value twice smallest proportion bootstrapped parameter estimates null hypothesized parameter value bo. predict, user-supplied function applied row coefBoot object nlsBoot object finds median two quantiles proportion (1-conf.level)/2 bootstrapped predictions . median returned predicted value quantiles returned approximate 100conf.level% confidence interval prediction.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsBoot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Associated S3 methods for nlsBoot from nlstools. — nlsBoot","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsBoot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Associated S3 methods for nlsBoot from nlstools. — nlsBoot","text":"","code":"fnx <- function(days,B1,B2,B3) {   if (length(B1) > 1) {     B2 <- B1[2]     B3 <- B1[3]     B1 <- B1[1]   }   B1/(1+exp(B2+B3*days)) } nl1 <- nls(cells~fnx(days,B1,B2,B3),data=Ecoli,            start=list(B1=6,B2=7.2,B3=-1.45)) if (require(nlstools)) {   nl1.bootn <-  nlstools::nlsBoot(nl1,niter=99) # too few to be useful   confint(nl1.bootn,\"B1\")   confint(nl1.bootn,c(2,3))   confint(nl1.bootn,conf.level=0.90)   confint(nl1.bootn,plot=TRUE)   predict(nl1.bootn,fnx,days=3)   predict(nl1.bootn,fnx,days=1:3)   htest(nl1.bootn,1,bo=6,alt=\"less\") } #> Loading required package: nlstools #>  #> 'nlstools' has been loaded. #> IMPORTANT NOTICE: Most nonlinear regression models and data set examples #> related to predictive microbiolgy have been moved to the package 'nlsMicrobio' #> Error in nlstools::nlsBoot(nl1, niter = 99): Procedure aborted: the fit only converged in 1 % during bootstrapping"},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsTracePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds model fits from nls iterations to active plot. — nlsTracePlot","title":"Adds model fits from nls iterations to active plot. — nlsTracePlot","text":"Adds model fits iterations nls algorithm returned trace=TRUE. Useful diagnosing model fitting problems issues associated starting values.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsTracePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds model fits from nls iterations to active plot. — nlsTracePlot","text":"","code":"nlsTracePlot(   object,   fun,   from = NULL,   to = NULL,   n = 199,   lwd = 2,   col = NULL,   rev.col = FALSE,   legend = \"topright\",   cex.leg = 0.9,   box.lty.leg = 0,   add = TRUE )"},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsTracePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds model fits from nls iterations to active plot. — nlsTracePlot","text":"object object saved nls capture.output using try nls. See details. fun function represents model fit nls. must take x-axis variable first argument model parameters vector second argument. See details. , range function plotted. Defaults range x-axis active plot. n number value evaluate function plotting (.e., number values ). Larger values make smoother lines. lwd numeric used indicate line width fitted line. col single character string palette hcl.pals vector character strings containing colors fitted lines trace. rev.col logical indicates order colors plotting lines reversed. legend Controls use placement legend. See details. cex.leg single numeric value represents character expansion value legend. Ignored legend=FALSE. box.lty.leg single numeric values indicates type line use box around legend. default plot box. add logical indicating whether lines added existing plot (defaults =TRUE).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsTracePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds model fits from nls iterations to active plot. — nlsTracePlot","text":"matrix residual sum--squares first column parameter estimates remaining columns iteration (rows) nls provided trace=TRUE.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsTracePlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds model fits from nls iterations to active plot. — nlsTracePlot","text":"Nonlinear models fit nls function start starting values model parameters iteratively search model parameters continuously reduce residual sum--squares (RSS) pre-determined criterion suggest RSS (substantially) reduced. good starting values well-behaved data, minimum RSS may found (<10) iterations. However, poor starting values poorly behaved data may lead prolonged possibly failed search. understanding iterations prolonged failed search may help identify failure lead choices may result successful search. trace=TRUE argument nls allows one see values iterative step. function documented plots “trace” results iteration previously existing plot data. creates visual iterative process. object argument may object saved successful run nls. See examples SpotVA1 CodNorwegion. However, nls fails converge solution useful object returned. case, trace=TRUE must added failed nls call. call wrapped try work-around failed convergence error. also wrapped capture.output capture “trace” results. saved object can object function documented . process illustrated example using BSkateGB. function fun used make predictions given model parameter values step iteration. function must accept explanatory/independent variable first argument values model parameters vector second argument. types functions returned vbFuns, GompertzFuns, logisticFuns, RichardsFuns common growth models srFuns common stock-recruitment models. See examples.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsTracePlot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Adds model fits from nls iterations to active plot. — nlsTracePlot","text":"position “legend” can controlled three ways. First, legend=TRUE, R console suspended user places legend plot clicking point upper-left corner legend appear. Second, legend= can set one \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\", \"top\", \"topright\", \"right\" \"center\". case, legend placed inside plot frame given location. Finally, legend= can set vector length two identifies plot coordinates upper-left corner legend placed. legend drawn legend=FALSE legend=NULL.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsTracePlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adds model fits from nls iterations to active plot. — nlsTracePlot","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/nlsTracePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds model fits from nls iterations to active plot. — nlsTracePlot","text":"","code":"## Examples following a successful fit vb1 <- vbFuns() fit1 <- nls(tl~vb1(age,Linf,K,t0),data=SpotVA1,start=list(Linf=12,K=0.3,t0=0)) plot(tl~age,data=SpotVA1,pch=21,bg=\"gray40\") nlsTracePlot(fit1,vb1,legend=\"bottomright\")   r1 <- srFuns(\"Ricker\") fitSR1 <- nls(log(recruits)~log(r1(stock,a,b)),data=CodNorwegian,start=list(a=3,b=0.03)) plot(recruits~stock,data=CodNorwegian,pch=21,bg=\"gray40\",xlim=c(0,200)) nlsTracePlot(fitSR1,r1)   # no plot, but returns trace results as a matrix ( tmp <- nlsTracePlot(fitSR1,r1,add=FALSE) ) #>          [,1]       [,2] #> [1,] 3.000000 0.03000000 #> [2,] 5.038795 0.01836117 #> [3,] 5.850261 0.01836117 #> [4,] 5.918852 0.01836117 #> [5,] 5.919256 0.01836117  if (FALSE) { if (require(FSAdata)) {   data(BSkateGB,package=\"FSAdata\")   wtr <- droplevels(subset(BSkateGB,season==\"winter\"))   bh1 <- srFuns()   trc <- capture.output(try(   fitSR1 <- nls(recruits~bh1(spawners,a,b),wtr,                 start=srStarts(recruits~spawners,data=wtr),trace=TRUE)   ))   plot(recruits~spawners,data=wtr,pch=21,bg=\"gray40\")   nlsTracePlot(trc,bh1)   # zoom in on y-axis   plot(recruits~spawners,data=wtr,pch=21,bg=\"gray40\",ylim=c(0.02,0.05))   nlsTracePlot(trc,bh1,legend=\"top\")   # return just the trace results   ( tmp <- nlsTracePlot(trc,bh1,add=FALSE) ) } }"},{"path":"https://fishr-core-team.github.io/FSA/reference/peek.html","id":null,"dir":"Reference","previous_headings":"","what":"Peek into (show a subset of) a data frame or matrix. — peek","title":"Peek into (show a subset of) a data frame or matrix. — peek","text":"Shows first, last, approximately evenly spaced rows data frame matrix.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/peek.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Peek into (show a subset of) a data frame or matrix. — peek","text":"","code":"peek(x, n = 20L, which = NULL, addrownums = TRUE)"},{"path":"https://fishr-core-team.github.io/FSA/reference/peek.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Peek into (show a subset of) a data frame or matrix. — peek","text":"x data frame matrix. n single numeric indicates number rows display. numeric string vector contains column numbers names display. Defaults showing columns. addrownums row names MATRIX, create row numbers.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/peek.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Peek into (show a subset of) a data frame or matrix. — peek","text":"matrix data.frame n rows.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/peek.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Peek into (show a subset of) a data frame or matrix. — peek","text":"n larger number rows x x displayed.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/peek.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Peek into (show a subset of) a data frame or matrix. — peek","text":"Derek H. Ogle, DerekOgle51@gmail.com . Powell Wheeler, powell.wheeler@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/peek.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Peek into (show a subset of) a data frame or matrix. — peek","text":"","code":"peek(iris) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            5.1         3.5          1.4         0.2     setosa #> 8            5.0         3.4          1.5         0.2     setosa #> 16           5.7         4.4          1.5         0.4     setosa #> 24           5.1         3.3          1.7         0.5     setosa #> 32           5.4         3.4          1.5         0.4     setosa #> 39           4.4         3.0          1.3         0.2     setosa #> 47           5.1         3.8          1.6         0.2     setosa #> 55           6.5         2.8          4.6         1.5 versicolor #> 63           6.0         2.2          4.0         1.0 versicolor #> 71           5.9         3.2          4.8         1.8 versicolor #> 79           6.0         2.9          4.5         1.5 versicolor #> 87           6.7         3.1          4.7         1.5 versicolor #> 95           5.6         2.7          4.2         1.3 versicolor #> 103          7.1         3.0          5.9         2.1  virginica #> 111          6.5         3.2          5.1         2.0  virginica #> 118          7.7         3.8          6.7         2.2  virginica #> 126          7.2         3.2          6.0         1.8  virginica #> 134          6.3         2.8          5.1         1.5  virginica #> 142          6.9         3.1          5.1         2.3  virginica #> 150          5.9         3.0          5.1         1.8  virginica peek(iris,n=6) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            5.1         3.5          1.4         0.2     setosa #> 30           4.7         3.2          1.6         0.2     setosa #> 60           5.2         2.7          3.9         1.4 versicolor #> 90           5.5         2.5          4.0         1.3 versicolor #> 120          6.0         2.2          5.0         1.5  virginica #> 150          5.9         3.0          5.1         1.8  virginica peek(iris,n=6,which=c(\"Sepal.Length\",\"Sepal.Width\",\"Species\")) #>     Sepal.Length Sepal.Width    Species #> 1            5.1         3.5     setosa #> 30           4.7         3.2     setosa #> 60           5.2         2.7 versicolor #> 90           5.5         2.5 versicolor #> 120          6.0         2.2  virginica #> 150          5.9         3.0  virginica peek(iris,n=6,which=grep(\"Sepal\",names(iris))) #>     Sepal.Length Sepal.Width #> 1            5.1         3.5 #> 30           4.7         3.2 #> 60           5.2         2.7 #> 90           5.5         2.5 #> 120          6.0         2.2 #> 150          5.9         3.0 peek(iris,n=200) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            5.1         3.5          1.4         0.2     setosa #> 2            4.9         3.0          1.4         0.2     setosa #> 3            4.7         3.2          1.3         0.2     setosa #> 4            4.6         3.1          1.5         0.2     setosa #> 5            5.0         3.6          1.4         0.2     setosa #> 6            5.4         3.9          1.7         0.4     setosa #> 7            4.6         3.4          1.4         0.3     setosa #> 8            5.0         3.4          1.5         0.2     setosa #> 9            4.4         2.9          1.4         0.2     setosa #> 10           4.9         3.1          1.5         0.1     setosa #> 11           5.4         3.7          1.5         0.2     setosa #> 12           4.8         3.4          1.6         0.2     setosa #> 13           4.8         3.0          1.4         0.1     setosa #> 14           4.3         3.0          1.1         0.1     setosa #> 15           5.8         4.0          1.2         0.2     setosa #> 16           5.7         4.4          1.5         0.4     setosa #> 17           5.4         3.9          1.3         0.4     setosa #> 18           5.1         3.5          1.4         0.3     setosa #> 19           5.7         3.8          1.7         0.3     setosa #> 20           5.1         3.8          1.5         0.3     setosa #> 21           5.4         3.4          1.7         0.2     setosa #> 22           5.1         3.7          1.5         0.4     setosa #> 23           4.6         3.6          1.0         0.2     setosa #> 24           5.1         3.3          1.7         0.5     setosa #> 25           4.8         3.4          1.9         0.2     setosa #> 26           5.0         3.0          1.6         0.2     setosa #> 27           5.0         3.4          1.6         0.4     setosa #> 28           5.2         3.5          1.5         0.2     setosa #> 29           5.2         3.4          1.4         0.2     setosa #> 30           4.7         3.2          1.6         0.2     setosa #> 31           4.8         3.1          1.6         0.2     setosa #> 32           5.4         3.4          1.5         0.4     setosa #> 33           5.2         4.1          1.5         0.1     setosa #> 34           5.5         4.2          1.4         0.2     setosa #> 35           4.9         3.1          1.5         0.2     setosa #> 36           5.0         3.2          1.2         0.2     setosa #> 37           5.5         3.5          1.3         0.2     setosa #> 38           4.9         3.6          1.4         0.1     setosa #> 39           4.4         3.0          1.3         0.2     setosa #> 40           5.1         3.4          1.5         0.2     setosa #> 41           5.0         3.5          1.3         0.3     setosa #> 42           4.5         2.3          1.3         0.3     setosa #> 43           4.4         3.2          1.3         0.2     setosa #> 44           5.0         3.5          1.6         0.6     setosa #> 45           5.1         3.8          1.9         0.4     setosa #> 46           4.8         3.0          1.4         0.3     setosa #> 47           5.1         3.8          1.6         0.2     setosa #> 48           4.6         3.2          1.4         0.2     setosa #> 49           5.3         3.7          1.5         0.2     setosa #> 50           5.0         3.3          1.4         0.2     setosa #> 51           7.0         3.2          4.7         1.4 versicolor #> 52           6.4         3.2          4.5         1.5 versicolor #> 53           6.9         3.1          4.9         1.5 versicolor #> 54           5.5         2.3          4.0         1.3 versicolor #> 55           6.5         2.8          4.6         1.5 versicolor #> 56           5.7         2.8          4.5         1.3 versicolor #> 57           6.3         3.3          4.7         1.6 versicolor #> 58           4.9         2.4          3.3         1.0 versicolor #> 59           6.6         2.9          4.6         1.3 versicolor #> 60           5.2         2.7          3.9         1.4 versicolor #> 61           5.0         2.0          3.5         1.0 versicolor #> 62           5.9         3.0          4.2         1.5 versicolor #> 63           6.0         2.2          4.0         1.0 versicolor #> 64           6.1         2.9          4.7         1.4 versicolor #> 65           5.6         2.9          3.6         1.3 versicolor #> 66           6.7         3.1          4.4         1.4 versicolor #> 67           5.6         3.0          4.5         1.5 versicolor #> 68           5.8         2.7          4.1         1.0 versicolor #> 69           6.2         2.2          4.5         1.5 versicolor #> 70           5.6         2.5          3.9         1.1 versicolor #> 71           5.9         3.2          4.8         1.8 versicolor #> 72           6.1         2.8          4.0         1.3 versicolor #> 73           6.3         2.5          4.9         1.5 versicolor #> 74           6.1         2.8          4.7         1.2 versicolor #> 75           6.4         2.9          4.3         1.3 versicolor #> 76           6.6         3.0          4.4         1.4 versicolor #> 77           6.8         2.8          4.8         1.4 versicolor #> 78           6.7         3.0          5.0         1.7 versicolor #> 79           6.0         2.9          4.5         1.5 versicolor #> 80           5.7         2.6          3.5         1.0 versicolor #> 81           5.5         2.4          3.8         1.1 versicolor #> 82           5.5         2.4          3.7         1.0 versicolor #> 83           5.8         2.7          3.9         1.2 versicolor #> 84           6.0         2.7          5.1         1.6 versicolor #> 85           5.4         3.0          4.5         1.5 versicolor #> 86           6.0         3.4          4.5         1.6 versicolor #> 87           6.7         3.1          4.7         1.5 versicolor #> 88           6.3         2.3          4.4         1.3 versicolor #> 89           5.6         3.0          4.1         1.3 versicolor #> 90           5.5         2.5          4.0         1.3 versicolor #> 91           5.5         2.6          4.4         1.2 versicolor #> 92           6.1         3.0          4.6         1.4 versicolor #> 93           5.8         2.6          4.0         1.2 versicolor #> 94           5.0         2.3          3.3         1.0 versicolor #> 95           5.6         2.7          4.2         1.3 versicolor #> 96           5.7         3.0          4.2         1.2 versicolor #> 97           5.7         2.9          4.2         1.3 versicolor #> 98           6.2         2.9          4.3         1.3 versicolor #> 99           5.1         2.5          3.0         1.1 versicolor #> 100          5.7         2.8          4.1         1.3 versicolor #> 101          6.3         3.3          6.0         2.5  virginica #> 102          5.8         2.7          5.1         1.9  virginica #> 103          7.1         3.0          5.9         2.1  virginica #> 104          6.3         2.9          5.6         1.8  virginica #> 105          6.5         3.0          5.8         2.2  virginica #> 106          7.6         3.0          6.6         2.1  virginica #> 107          4.9         2.5          4.5         1.7  virginica #> 108          7.3         2.9          6.3         1.8  virginica #> 109          6.7         2.5          5.8         1.8  virginica #> 110          7.2         3.6          6.1         2.5  virginica #> 111          6.5         3.2          5.1         2.0  virginica #> 112          6.4         2.7          5.3         1.9  virginica #> 113          6.8         3.0          5.5         2.1  virginica #> 114          5.7         2.5          5.0         2.0  virginica #> 115          5.8         2.8          5.1         2.4  virginica #> 116          6.4         3.2          5.3         2.3  virginica #> 117          6.5         3.0          5.5         1.8  virginica #> 118          7.7         3.8          6.7         2.2  virginica #> 119          7.7         2.6          6.9         2.3  virginica #> 120          6.0         2.2          5.0         1.5  virginica #> 121          6.9         3.2          5.7         2.3  virginica #> 122          5.6         2.8          4.9         2.0  virginica #> 123          7.7         2.8          6.7         2.0  virginica #> 124          6.3         2.7          4.9         1.8  virginica #> 125          6.7         3.3          5.7         2.1  virginica #> 126          7.2         3.2          6.0         1.8  virginica #> 127          6.2         2.8          4.8         1.8  virginica #> 128          6.1         3.0          4.9         1.8  virginica #> 129          6.4         2.8          5.6         2.1  virginica #> 130          7.2         3.0          5.8         1.6  virginica #> 131          7.4         2.8          6.1         1.9  virginica #> 132          7.9         3.8          6.4         2.0  virginica #> 133          6.4         2.8          5.6         2.2  virginica #> 134          6.3         2.8          5.1         1.5  virginica #> 135          6.1         2.6          5.6         1.4  virginica #> 136          7.7         3.0          6.1         2.3  virginica #> 137          6.3         3.4          5.6         2.4  virginica #> 138          6.4         3.1          5.5         1.8  virginica #> 139          6.0         3.0          4.8         1.8  virginica #> 140          6.9         3.1          5.4         2.1  virginica #> 141          6.7         3.1          5.6         2.4  virginica #> 142          6.9         3.1          5.1         2.3  virginica #> 143          5.8         2.7          5.1         1.9  virginica #> 144          6.8         3.2          5.9         2.3  virginica #> 145          6.7         3.3          5.7         2.5  virginica #> 146          6.7         3.0          5.2         2.3  virginica #> 147          6.3         2.5          5.0         1.9  virginica #> 148          6.5         3.0          5.2         2.0  virginica #> 149          6.2         3.4          5.4         2.3  virginica #> 150          5.9         3.0          5.1         1.8  virginica  ## Make a matrix for demonstration purposes only miris <- as.matrix(iris[,1:4]) peek(miris) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1            5.1         3.5          1.4         0.2 #> 8            5.0         3.4          1.5         0.2 #> 16           5.7         4.4          1.5         0.4 #> 24           5.1         3.3          1.7         0.5 #> 32           5.4         3.4          1.5         0.4 #> 39           4.4         3.0          1.3         0.2 #> 47           5.1         3.8          1.6         0.2 #> 55           6.5         2.8          4.6         1.5 #> 63           6.0         2.2          4.0         1.0 #> 71           5.9         3.2          4.8         1.8 #> 79           6.0         2.9          4.5         1.5 #> 87           6.7         3.1          4.7         1.5 #> 95           5.6         2.7          4.2         1.3 #> 103          7.1         3.0          5.9         2.1 #> 111          6.5         3.2          5.1         2.0 #> 118          7.7         3.8          6.7         2.2 #> 126          7.2         3.2          6.0         1.8 #> 134          6.3         2.8          5.1         1.5 #> 142          6.9         3.1          5.1         2.3 #> 150          5.9         3.0          5.1         1.8 peek(miris,n=6) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1            5.1         3.5          1.4         0.2 #> 30           4.7         3.2          1.6         0.2 #> 60           5.2         2.7          3.9         1.4 #> 90           5.5         2.5          4.0         1.3 #> 120          6.0         2.2          5.0         1.5 #> 150          5.9         3.0          5.1         1.8 peek(miris,n=6,addrownums=FALSE) #>      Sepal.Length Sepal.Width Petal.Length Petal.Width #> [1,]          5.1         3.5          1.4         0.2 #> [2,]          4.7         3.2          1.6         0.2 #> [3,]          5.2         2.7          3.9         1.4 #> [4,]          5.5         2.5          4.0         1.3 #> [5,]          6.0         2.2          5.0         1.5 #> [6,]          5.9         3.0          5.1         1.8 peek(miris,n=6,which=2:4) #>     Sepal.Width Petal.Length Petal.Width #> 1           3.5          1.4         0.2 #> 30          3.2          1.6         0.2 #> 60          2.7          3.9         1.4 #> 90          2.5          4.0         1.3 #> 120         2.2          5.0         1.5 #> 150         3.0          5.1         1.8  ## Make a tbl_df type from dplyr ... note how peek() is not limited by ## the tbl_df restriction on number of rows to show (but head() is). if (require(dplyr)) {   iris2 <- tbl_df(iris)   class(iris2)   peek(iris2,n=6)   head(iris2,n=15) } #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following object is masked from ‘package:car’: #>  #>     recode #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Warning: `tbl_df()` was deprecated in dplyr 1.0.0. #> ℹ Please use `tibble::as_tibble()` instead. #> # A tibble: 15 × 5 #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species #>           <dbl>       <dbl>        <dbl>       <dbl> <fct>   #>  1          5.1         3.5          1.4         0.2 setosa  #>  2          4.9         3            1.4         0.2 setosa  #>  3          4.7         3.2          1.3         0.2 setosa  #>  4          4.6         3.1          1.5         0.2 setosa  #>  5          5           3.6          1.4         0.2 setosa  #>  6          5.4         3.9          1.7         0.4 setosa  #>  7          4.6         3.4          1.4         0.3 setosa  #>  8          5           3.4          1.5         0.2 setosa  #>  9          4.4         2.9          1.4         0.2 setosa  #> 10          4.9         3.1          1.5         0.1 setosa  #> 11          5.4         3.7          1.5         0.2 setosa  #> 12          4.8         3.4          1.6         0.2 setosa  #> 13          4.8         3            1.4         0.1 setosa  #> 14          4.3         3            1.1         0.1 setosa  #> 15          5.8         4            1.2         0.2 setosa"},{"path":"https://fishr-core-team.github.io/FSA/reference/perc.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the percentage of values in a vector less than or greater than (and equal to) some value. — perc","title":"Computes the percentage of values in a vector less than or greater than (and equal to) some value. — perc","text":"Computes percentage values vector less greater (equal ) user-supplied value.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/perc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the percentage of values in a vector less than or greater than (and equal to) some value. — perc","text":"","code":"perc(   x,   val,   dir = c(\"geq\", \"gt\", \"leq\", \"lt\"),   na.rm = TRUE,   digits = getOption(\"digits\") )"},{"path":"https://fishr-core-team.github.io/FSA/reference/perc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the percentage of values in a vector less than or greater than (and equal to) some value. — perc","text":"x numeric vector. val single numeric value. dir string indicates whether percentage values x “greater equal” \"geq\", “greater ” \"gt\", “less equal” \"leq\", “less ” \"lt\" value val. na.rm logical indicates whether NA values removed (DEFAULT) x . digits single numeric indicates number decimals percentage rounded .","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/perc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the percentage of values in a vector less than or greater than (and equal to) some value. — perc","text":"single numeric percentage values x meet criterion dir relative val.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/perc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes the percentage of values in a vector less than or greater than (and equal to) some value. — perc","text":"function useful used apply-type function.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/perc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes the percentage of values in a vector less than or greater than (and equal to) some value. — perc","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/perc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the percentage of values in a vector less than or greater than (and equal to) some value. — perc","text":"","code":"## vector of values ( tmp <- c(1:8,NA,NA) ) #>  [1]  1  2  3  4  5  6  7  8 NA NA  ## percentages excluding NA values perc(tmp,5) #> [1] 50 perc(tmp,5,\"gt\") #> [1] 37.5 perc(tmp,5,\"leq\") #> [1] 62.5 perc(tmp,5,\"lt\") #> [1] 50  ## percentages including NA values perc(tmp,5,na.rm=FALSE) #> [1] 40 perc(tmp,5,\"gt\",na.rm=FALSE) #> [1] 30 perc(tmp,5,\"leq\",na.rm=FALSE) #> [1] 50 perc(tmp,5,\"lt\",na.rm=FALSE) #> [1] 40"},{"path":"https://fishr-core-team.github.io/FSA/reference/plotAB.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct traditional (Campana-like) age-bias plots. — plotAB","title":"Construct traditional (Campana-like) age-bias plots. — plotAB","text":"Constructs traditional (e.g., like described Campana et al. (1995)) age-bias plot visualize potential differences paired age estimates. Ages may , example, two readers structure, one reader two times, two structures (e.g., scales, spines, otoliths), one structure known ages.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/plotAB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct traditional (Campana-like) age-bias plots. — plotAB","text":"","code":"plotAB(   x,   what = c(\"bias\", \"Campana\", \"numbers\"),   xlab = x$ref.lab,   ylab = x$nref.lab,   xlim = NULL,   ylim = NULL,   yaxt = graphics::par(\"yaxt\"),   xaxt = graphics::par(\"xaxt\"),   col.agree = \"gray60\",   lwd.agree = lwd,   lty.agree = 2,   lwd = 1,   sfrac = 0,   pch.mean = 19,   pch.mean.sig = 21,   cex.mean = lwd,   col.CI = \"black\",   col.CIsig = \"red\",   lwd.CI = lwd,   sfrac.CI = sfrac,   show.n = FALSE,   nYpos = 1.03,   cex.n = 0.75,   cex.numbers = 0.75,   col.numbers = \"black\",   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/plotAB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct traditional (Campana-like) age-bias plots. — plotAB","text":"x object class ageBias, usually result ageBias. string indicates type plot construct. See details. xlab, ylab string label x-axis (reference) y-axis (non-reference) age estimates, respectively. xlim, ylim numeric vector length 2 contains limits x-axis (reference ages) y-axis (non-reference ages), respectively. xaxt, yaxt string specifies x- y-axis types. Specifying “n” suppresses plotting axis. See ?par. col.agree string numeric color 1:1 zero (difference=TRUE) reference line. lwd.agree numeric line width 1:1 zero (difference=TRUE) reference line. lty.agree numeric line type 1:1 zero (difference=TRUE) reference line. lwd numeric controls separate ‘lwd’ argument (e.g., lwd.CI lwd.range). sfrac numeric controls separate ‘sfrac’ arguments (e.g., sfrac.CI sfrac.range). See sfrac plotCI plotrix. pch.mean numeric plotting character used mean values means considered insignificant. pch.mean.sig numeric plotting character mean values means considered significant. cex.mean character expansion value size mean symbol pch.mean pch.mean.sig. col.CI string numeric color confidence interval bars considered non-significant. col.CIsig string numeric color confidence interval bars considered significant. lwd.CI numeric line width confidence interval bars. sfrac.CI numeric size ends confidence interval bars. See sfrac plotCI plotrix. show.n logical whether sample sizes level x-axis variable shown (=TRUE, default) (=FALSE). nYpos numeric relative Y position sample size values show.n=TRUE. example, nYpos=1.03 sample size values centered 3 percent top end y-axis. cex.n character expansion value size sample size values. cex.numbers character expansion value size numbers plotted =\"numbers\" used. col.numbers string color numbers plotted =\"numbers\" used. ... Additional arguments methods.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/plotAB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct traditional (Campana-like) age-bias plots. — plotAB","text":"Nothing, see details description plot produced.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/plotAB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct traditional (Campana-like) age-bias plots. — plotAB","text":"Two types plots visualizing differences sets two age estimates may created. reference ages plotted x-axis nonreference ages y-axis. 1:1 (45 degree) agreement line shown comparative purposes. default plot (using =\"bias\") inspired age bias plot introduced Campana et al. (1995). default settings age bias plot show mean confidence interval nonreference ages reference ages. level confidence controlled sig.level= given original ageBias call (.e., confidence level 100*(1-sig.level)). Confidence intervals shown sample size greater value min.n.CI= (also original call ageBias). Confidence intervals plotted red open dot (default; can changed col.CIsig pch.mean.sig, respectively) contain reference age (see discussion t-tests ageBias). Sample sizes reference age shown show.n=TRUE. position sample sizes controlled nYpos=, whereas size controlled cex.n. Arguments may used nearly replicate age bias plot introduced Campana et al. (1995) shown examples. frequency observations unique (x,y) coordinate shown using =\"numbers\" plotAB. size numbers controlled cex.numbers.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/plotAB.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Construct traditional (Campana-like) age-bias plots. — plotAB","text":"4-Age Comparisons. original functionality plot book. See examples.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/plotAB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Construct traditional (Campana-like) age-bias plots. — plotAB","text":"Campana, S.E., M.C. Annand, J.. McMillan. 1995. Graphical statistical methods determining consistency age determinations. Transactions American Fisheries Society 124:131-138. [(?) available http://www.bio.gc.ca/otoliths/documents/Campana%20et%20al%201995%20TAFS.pdf.]","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/plotAB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Construct traditional (Campana-like) age-bias plots. — plotAB","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/plotAB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct traditional (Campana-like) age-bias plots. — plotAB","text":"","code":"# Must create ageBias object first ab1 <- ageBias(scaleC~otolithC,data=WhitefishLC,                ref.lab=\"Otolith Age\",nref.lab=\"Scale Age\")                 # Default plot plotAB(ab1)   # Very close to Campana et al. (2001) plotAB(ab1,pch.mean.sig=19,col.CIsig=\"black\",sfrac=0.01,        ylim=c(-1,23),xlim=c(-1,23))  # Show sample sizes (different position and size than default) plotAB(ab1,show.n=TRUE,nYpos=0.02,cex.n=0.5)   # Traditional numbers plot plotAB(ab1,what=\"numbers\")"},{"path":"https://fishr-core-team.github.io/FSA/reference/poiCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence interval for Poisson counts. — poiCI","title":"Confidence interval for Poisson counts. — poiCI","text":"Computes confidence interval Poisson counts.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/poiCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence interval for Poisson counts. — poiCI","text":"","code":"poiCI(   x,   conf.level = 0.95,   type = c(\"exact\", \"daly\", \"byar\", \"asymptotic\"),   verbose = FALSE )"},{"path":"https://fishr-core-team.github.io/FSA/reference/poiCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence interval for Poisson counts. — poiCI","text":"x single number vector represents number observed successes. conf.level number indicates level confidence use constructing confidence intervals (default 0.95). type string identifies type method use calculations. See details. verbose logical indicates whether x included returned matrix (=TRUE) (=FALSE; DEFAULT).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/poiCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence interval for Poisson counts. — poiCI","text":"#x2 matrix contains lower upper confidence interval bounds columns , verbose=TRUE  x.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/poiCI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence interval for Poisson counts. — poiCI","text":"Computes CI Poisson counts using exact, gamma distribution (daly`), Byar's (byar), normal approximation (asymptotic) methods. pois.daly function gives essentially identical answers pois.exact function except x=0. x=0, upper confidence limit pois.exact returns 3.689 pois.daly returns 2.996.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/poiCI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence interval for Poisson counts. — poiCI","text":"Derek H. Ogle, DerekOgle51@gmail.com, though largely based pois.exact, pois.daly, pois.byar, pois.approx old epitools package.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/poiCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence interval for Poisson counts. — poiCI","text":"","code":"## Demonstrates using all types at once poiCI(12) #>             95% LCI  95% UCI #> Exact      6.200603 20.96156 #> Daly       6.200575 20.96159 #> Byar       6.552977 20.32447 #> Asymptotic 5.210486 18.78951  ## Selecting types poiCI(12,type=\"daly\") #>   95% LCI  95% UCI #>  6.200575 20.96159 poiCI(12,type=\"byar\") #>   95% LCI  95% UCI #>  6.552977 20.32447 poiCI(12,type=\"asymptotic\") #>   95% LCI  95% UCI #>  5.210486 18.78951 poiCI(12,type=\"asymptotic\",verbose=TRUE) #>             x  95% LCI  95% UCI #> Asymptotic 12 5.210486 18.78951 poiCI(12,type=c(\"exact\",\"daly\")) #>        95% LCI  95% UCI #> Exact 6.200603 20.96156 #> Daly  6.200575 20.96159 poiCI(12,type=c(\"exact\",\"daly\"),verbose=TRUE) #>        x  95% LCI  95% UCI #> Exact 12 6.200603 20.96156 #> Daly  12 6.200575 20.96159  ## Demonstrates use with multiple inputs poiCI(c(7,10),type=\"exact\") #>   95% LCI  95% UCI #>  2.814358 14.42268 #>  4.795389 18.39036 poiCI(c(7,10),type=\"exact\",verbose=TRUE) #>       x  95% LCI  95% UCI #> [1,]  7 2.814358 14.42268 #> [2,] 10 4.795389 18.39036"},{"path":"https://fishr-core-team.github.io/FSA/reference/psdAdd.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a vector of Gabelhouse lengths for each species in an entire data frame. — psdAdd","title":"Creates a vector of Gabelhouse lengths for each species in an entire data frame. — psdAdd","text":"Creates vector Gabelhouse lengths specific species individuals entire data frame.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdAdd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a vector of Gabelhouse lengths for each species in an entire data frame. — psdAdd","text":"","code":"psdAdd(len, ...)  # S3 method for default psdAdd(   len,   species,   units = c(\"mm\", \"cm\", \"in\"),   use.names = TRUE,   addSpec = NULL,   addLens = NULL,   verbose = TRUE,   ... )  # S3 method for formula psdAdd(   len,   data = NULL,   units = c(\"mm\", \"cm\", \"in\"),   use.names = TRUE,   addSpec = NULL,   addLens = NULL,   verbose = TRUE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/psdAdd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a vector of Gabelhouse lengths for each species in an entire data frame. — psdAdd","text":"len numeric vector contains lengths measurements formula form len~spec “len” generically represents length variable “spec” generically represents species variable. Note formula can contain two variables must length variable left-hand-side species variable right-hand-side. ... used. species character factor vector contains species names. Ignored len formula. units string indicates type units used lengths. Choices mm millimeters (DEFAULT), cm centimeters, inches. use.names logical indicates whether vector returned numeric (=FALSE) string (=TRUE; default) representations Gabelhouse lengths. See details. addSpec character vector species names addLens provided. addLens numeric vector lengths used addition Gabelhouse lengths species addSpec. See examples. verbose logical indicates whether detailed messages species without Gabelhouse lengths recorded values printed . data data.frame minimally contains length measurements species names len formula.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdAdd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a vector of Gabelhouse lengths for each species in an entire data frame. — psdAdd","text":"numeric factor vector contains Gabelhouse length categories.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdAdd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a vector of Gabelhouse lengths for each species in an entire data frame. — psdAdd","text":"computes vector contains Gabelhouse lengths specific species individuals entire data frame. vector can appended existing data.frame create variable contains Gabelhouse lengths individual. Gabelhouse length value NA individual Gabelhouse length definitions exist PSDlit. Species names data.frame must used PSDlit. See examples one method changing species names something function recognize. Individuals shorter “stock” length listed substock use.names=TRUE 0 use.names=FALSE. Additional lengths used species may included giving vector species names addSpec corresponding vector additional lengths addLens. Note, however, use.names reset FALSE addSpec addLens specified, way order names species additional lengths used.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdAdd.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Creates a vector of Gabelhouse lengths for each species in an entire data frame. — psdAdd","text":"6-Size Structure.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdAdd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Creates a vector of Gabelhouse lengths for each species in an entire data frame. — psdAdd","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Guy, C.S., R.M. Neumann, D.W. Willis. 2006. New terminology proportional stock density (PSD) relative stock density (RSD): proportional size structure (PSS). Fisheries 31:86-87. [(?) http://pubstorage.sdstate.edu/wfs/415-F.pdf.] Guy, C.S., R.M. Neumann, D.W. Willis, R.O. Anderson. 2006. Proportional size distribution (PSD): refinement population size structure index terminology. Fisheries 32:348. [(?) http://pubstorage.sdstate.edu/wfs/450-F.pdf.] Willis, D.W., B.R. Murphy, C.S. Guy. 1993. Stock density indices: development, use, limitations. Reviews Fisheries Science 1:203-222. [(?) http://web1.cnre.vt.edu/murphybr/web/Readings/Willis%20et%20al.pdf.]","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/psdAdd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a vector of Gabelhouse lengths for each species in an entire data frame. — psdAdd","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdAdd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a vector of Gabelhouse lengths for each species in an entire data frame. — psdAdd","text":"","code":"## Create random data for three species # only for repeatability set.seed(345234534) dbg <- data.frame(species=factor(rep(c(\"Bluegill\"),30)),                   tl=round(rnorm(30,130,50),0)) dbg$wt <- round(4.23e-06*dbg$tl^3.316+rnorm(30,0,10),1) dlb <- data.frame(species=factor(rep(c(\"Largemouth Bass\"),30)),                   tl=round(rnorm(30,350,60),0)) dlb$wt <- round(2.96e-06*dlb$tl^3.273+rnorm(30,0,60),1) dbt <- data.frame(species=factor(rep(c(\"Bluefin Tuna\"),30)),                   tl=round(rnorm(30,1900,300),0)) dbt$wt <- round(4.5e-05*dbt$tl^2.8+rnorm(30,0,6000),1) df <- rbind(dbg,dlb,dbt) str(df) #> 'data.frame':\t90 obs. of  3 variables: #>  $ species: Factor w/ 3 levels \"Bluegill\",\"Largemouth Bass\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ tl     : num  42 73 152 184 167 94 138 169 86 157 ... #>  $ wt     : num  -12.5 4.8 86.6 134.4 91.9 ...  ## Examples (non-dplyr) # Add variable using category names -- formula notation df$PSD <- psdAdd(tl~species,data=df) #> No known Gabelhouse (PSD) lengths for: Bluefin Tuna head(df) #>    species  tl    wt      PSD #> 1 Bluegill  42 -12.5 substock #> 2 Bluegill  73   4.8 substock #> 3 Bluegill 152  86.6  quality #> 4 Bluegill 184 134.4  quality #> 5 Bluegill 167  91.9  quality #> 6 Bluegill  94  38.3    stock # Add variable using category names -- non-formula notation df$PSD1 <- psdAdd(df$tl,df$species) #> No known Gabelhouse (PSD) lengths for: Bluefin Tuna head(df) #>    species  tl    wt      PSD     PSD1 #> 1 Bluegill  42 -12.5 substock substock #> 2 Bluegill  73   4.8 substock substock #> 3 Bluegill 152  86.6  quality  quality #> 4 Bluegill 184 134.4  quality  quality #> 5 Bluegill 167  91.9  quality  quality #> 6 Bluegill  94  38.3    stock    stock # Add variable using length values as names df$PSD2 <- psdAdd(tl~species,data=df,use.names=FALSE) #> No known Gabelhouse (PSD) lengths for: Bluefin Tuna head(df) #>    species  tl    wt      PSD     PSD1 PSD2 #> 1 Bluegill  42 -12.5 substock substock    0 #> 2 Bluegill  73   4.8 substock substock    0 #> 3 Bluegill 152  86.6  quality  quality  150 #> 4 Bluegill 184 134.4  quality  quality  150 #> 5 Bluegill 167  91.9  quality  quality  150 #> 6 Bluegill  94  38.3    stock    stock   80 # Add additional length and name for Bluegill df$PSD3 <- psdAdd(tl~species,data=df,addSpec=\"Bluegill\",addLens=175) #> No known Gabelhouse (PSD) lengths for: Bluefin Tuna head(df) #>    species  tl    wt      PSD     PSD1 PSD2 PSD3 #> 1 Bluegill  42 -12.5 substock substock    0    0 #> 2 Bluegill  73   4.8 substock substock    0    0 #> 3 Bluegill 152  86.6  quality  quality  150  150 #> 4 Bluegill 184 134.4  quality  quality  150  175 #> 5 Bluegill 167  91.9  quality  quality  150  150 #> 6 Bluegill  94  38.3    stock    stock   80   80 # Add add'l lengths and names for Bluegill and Largemouth Bass from a data.frame addls <- data.frame(species=c(\"Bluegill\",\"Largemouth Bass\",\"Largemouth Bass\"),                     lens=c(175,254,356)) df$psd4 <- psdAdd(tl~species,data=df,addSpec=addls$species,addLens=addls$lens) #> No known Gabelhouse (PSD) lengths for: Bluefin Tuna head(df) #>    species  tl    wt      PSD     PSD1 PSD2 PSD3 psd4 #> 1 Bluegill  42 -12.5 substock substock    0    0    0 #> 2 Bluegill  73   4.8 substock substock    0    0    0 #> 3 Bluegill 152  86.6  quality  quality  150  150  150 #> 4 Bluegill 184 134.4  quality  quality  150  175  175 #> 5 Bluegill 167  91.9  quality  quality  150  150  150 #> 6 Bluegill  94  38.3    stock    stock   80   80   80  ## All of the above but using dplyr if (require(dplyr)) {   df <- df %>%     mutate(PSD1A=psdAdd(tl,species)) %>%     mutate(PSD2A=psdAdd(tl,species,use.names=FALSE)) %>%     mutate(psd3a=psdAdd(tl,species,addSpec=\"Bluegill\",addLens=175)) %>%     mutate(psd4a=psdAdd(tl,species,addSpec=addls$species,addLens=addls$lens)) } #> No known Gabelhouse (PSD) lengths for: Bluefin Tuna #> No known Gabelhouse (PSD) lengths for: Bluefin Tuna #> No known Gabelhouse (PSD) lengths for: Bluefin Tuna #> No known Gabelhouse (PSD) lengths for: Bluefin Tuna df #>            species   tl       wt       PSD      PSD1 PSD2 PSD3 psd4     PSD1A #> 1         Bluegill   42    -12.5  substock  substock    0    0    0  substock #> 2         Bluegill   73      4.8  substock  substock    0    0    0  substock #> 3         Bluegill  152     86.6   quality   quality  150  150  150   quality #> 4         Bluegill  184    134.4   quality   quality  150  175  175   quality #> 5         Bluegill  167     91.9   quality   quality  150  150  150   quality #> 6         Bluegill   94     38.3     stock     stock   80   80   80     stock #> 7         Bluegill  138     62.5     stock     stock   80   80   80     stock #> 8         Bluegill  169     93.9   quality   quality  150  150  150   quality #> 9         Bluegill   86     20.7     stock     stock   80   80   80     stock #> 10        Bluegill  157     79.1   quality   quality  150  150  150   quality #> 11        Bluegill  123     36.2     stock     stock   80   80   80     stock #> 12        Bluegill  210    207.8 preferred preferred  200  200  200 preferred #> 13        Bluegill  150     77.2   quality   quality  150  150  150   quality #> 14        Bluegill  124     27.6     stock     stock   80   80   80     stock #> 15        Bluegill  116     31.1     stock     stock   80   80   80     stock #> 16        Bluegill  139     61.9     stock     stock   80   80   80     stock #> 17        Bluegill  160     72.5   quality   quality  150  150  150   quality #> 18        Bluegill  120     40.1     stock     stock   80   80   80     stock #> 19        Bluegill  155     90.6   quality   quality  150  150  150   quality #> 20        Bluegill  238    301.6 preferred preferred  200  200  200 preferred #> 21        Bluegill  153    103.1   quality   quality  150  150  150   quality #> 22        Bluegill   32    -11.4  substock  substock    0    0    0  substock #> 23        Bluegill  151     66.8   quality   quality  150  150  150   quality #> 24        Bluegill  108     14.0     stock     stock   80   80   80     stock #> 25        Bluegill  142     58.9     stock     stock   80   80   80     stock #> 26        Bluegill  124     31.3     stock     stock   80   80   80     stock #> 27        Bluegill  109     23.3     stock     stock   80   80   80     stock #> 28        Bluegill   94     27.1     stock     stock   80   80   80     stock #> 29        Bluegill  196    162.8   quality   quality  150  175  175   quality #> 30        Bluegill  128     28.6     stock     stock   80   80   80     stock #> 31 Largemouth Bass  384    807.1 preferred preferred  380  380  380 preferred #> 32 Largemouth Bass  383    840.2 preferred preferred  380  380  380 preferred #> 33 Largemouth Bass  346    527.1   quality   quality  300  300  300   quality #> 34 Largemouth Bass  437   1337.9 preferred preferred  380  380  380 preferred #> 35 Largemouth Bass  357    728.2   quality   quality  300  300  356   quality #> 36 Largemouth Bass  425   1196.0 preferred preferred  380  380  380 preferred #> 37 Largemouth Bass  353    702.1   quality   quality  300  300  300   quality #> 38 Largemouth Bass  340    551.1   quality   quality  300  300  300   quality #> 39 Largemouth Bass  358    629.4   quality   quality  300  300  356   quality #> 40 Largemouth Bass  257    181.2     stock     stock  200  200  254     stock #> 41 Largemouth Bass  327    454.1   quality   quality  300  300  300   quality #> 42 Largemouth Bass  465   1573.9 preferred preferred  380  380  380 preferred #> 43 Largemouth Bass  454   1481.4 preferred preferred  380  380  380 preferred #> 44 Largemouth Bass  389    859.2 preferred preferred  380  380  380 preferred #> 45 Largemouth Bass  336    465.6   quality   quality  300  300  300   quality #> 46 Largemouth Bass  289    393.5     stock     stock  200  200  254     stock #> 47 Largemouth Bass  288    305.1     stock     stock  200  200  254     stock #> 48 Largemouth Bass  401   1007.1 preferred preferred  380  380  380 preferred #> 49 Largemouth Bass  321    509.4   quality   quality  300  300  300   quality #> 50 Largemouth Bass  340    581.2   quality   quality  300  300  300   quality #> 51 Largemouth Bass  308    406.4   quality   quality  300  300  300   quality #> 52 Largemouth Bass  250    179.9     stock     stock  200  200  200     stock #> 53 Largemouth Bass  380    793.7 preferred preferred  380  380  380 preferred #> 54 Largemouth Bass  394    938.8 preferred preferred  380  380  380 preferred #> 55 Largemouth Bass  369    755.6   quality   quality  300  300  356   quality #> 56 Largemouth Bass  344    692.6   quality   quality  300  300  300   quality #> 57 Largemouth Bass  273    208.7     stock     stock  200  200  254     stock #> 58 Largemouth Bass  386    901.4 preferred preferred  380  380  380 preferred #> 59 Largemouth Bass  296    309.7     stock     stock  200  200  254     stock #> 60 Largemouth Bass  280    380.1     stock     stock  200  200  254     stock #> 61    Bluefin Tuna 1904  58963.4      <NA>      <NA>   NA   NA   NA      <NA> #> 62    Bluefin Tuna 1634  56007.5      <NA>      <NA>   NA   NA   NA      <NA> #> 63    Bluefin Tuna 1938  64262.2      <NA>      <NA>   NA   NA   NA      <NA> #> 64    Bluefin Tuna 2403 131188.3      <NA>      <NA>   NA   NA   NA      <NA> #> 65    Bluefin Tuna 2026  70580.7      <NA>      <NA>   NA   NA   NA      <NA> #> 66    Bluefin Tuna 2294 116401.4      <NA>      <NA>   NA   NA   NA      <NA> #> 67    Bluefin Tuna 2116  90855.2      <NA>      <NA>   NA   NA   NA      <NA> #> 68    Bluefin Tuna  991  15764.4      <NA>      <NA>   NA   NA   NA      <NA> #> 69    Bluefin Tuna 1940  61447.3      <NA>      <NA>   NA   NA   NA      <NA> #> 70    Bluefin Tuna 2129  89686.6      <NA>      <NA>   NA   NA   NA      <NA> #> 71    Bluefin Tuna 1743  55336.4      <NA>      <NA>   NA   NA   NA      <NA> #> 72    Bluefin Tuna 1773  54506.3      <NA>      <NA>   NA   NA   NA      <NA> #> 73    Bluefin Tuna 1673  46411.8      <NA>      <NA>   NA   NA   NA      <NA> #> 74    Bluefin Tuna 1864  56358.0      <NA>      <NA>   NA   NA   NA      <NA> #> 75    Bluefin Tuna 1945  76569.3      <NA>      <NA>   NA   NA   NA      <NA> #> 76    Bluefin Tuna 1623  42905.7      <NA>      <NA>   NA   NA   NA      <NA> #> 77    Bluefin Tuna 1923  60858.8      <NA>      <NA>   NA   NA   NA      <NA> #> 78    Bluefin Tuna 1831  69531.2      <NA>      <NA>   NA   NA   NA      <NA> #> 79    Bluefin Tuna 2658 175368.5      <NA>      <NA>   NA   NA   NA      <NA> #> 80    Bluefin Tuna 1788  62130.2      <NA>      <NA>   NA   NA   NA      <NA> #> 81    Bluefin Tuna 2084  91052.6      <NA>      <NA>   NA   NA   NA      <NA> #> 82    Bluefin Tuna 1770  58165.3      <NA>      <NA>   NA   NA   NA      <NA> #> 83    Bluefin Tuna 2085  88694.5      <NA>      <NA>   NA   NA   NA      <NA> #> 84    Bluefin Tuna 1521  32761.0      <NA>      <NA>   NA   NA   NA      <NA> #> 85    Bluefin Tuna 2337 126556.8      <NA>      <NA>   NA   NA   NA      <NA> #> 86    Bluefin Tuna 1716  48947.6      <NA>      <NA>   NA   NA   NA      <NA> #> 87    Bluefin Tuna 1448  26363.9      <NA>      <NA>   NA   NA   NA      <NA> #> 88    Bluefin Tuna 2356 119531.1      <NA>      <NA>   NA   NA   NA      <NA> #> 89    Bluefin Tuna 1481  34928.6      <NA>      <NA>   NA   NA   NA      <NA> #> 90    Bluefin Tuna 2007  64746.8      <NA>      <NA>   NA   NA   NA      <NA> #>    PSD2A psd3a psd4a #> 1      0     0     0 #> 2      0     0     0 #> 3    150   150   150 #> 4    150   175   175 #> 5    150   150   150 #> 6     80    80    80 #> 7     80    80    80 #> 8    150   150   150 #> 9     80    80    80 #> 10   150   150   150 #> 11    80    80    80 #> 12   200   200   200 #> 13   150   150   150 #> 14    80    80    80 #> 15    80    80    80 #> 16    80    80    80 #> 17   150   150   150 #> 18    80    80    80 #> 19   150   150   150 #> 20   200   200   200 #> 21   150   150   150 #> 22     0     0     0 #> 23   150   150   150 #> 24    80    80    80 #> 25    80    80    80 #> 26    80    80    80 #> 27    80    80    80 #> 28    80    80    80 #> 29   150   175   175 #> 30    80    80    80 #> 31   380   380   380 #> 32   380   380   380 #> 33   300   300   300 #> 34   380   380   380 #> 35   300   300   356 #> 36   380   380   380 #> 37   300   300   300 #> 38   300   300   300 #> 39   300   300   356 #> 40   200   200   254 #> 41   300   300   300 #> 42   380   380   380 #> 43   380   380   380 #> 44   380   380   380 #> 45   300   300   300 #> 46   200   200   254 #> 47   200   200   254 #> 48   380   380   380 #> 49   300   300   300 #> 50   300   300   300 #> 51   300   300   300 #> 52   200   200   200 #> 53   380   380   380 #> 54   380   380   380 #> 55   300   300   356 #> 56   300   300   300 #> 57   200   200   254 #> 58   380   380   380 #> 59   200   200   254 #> 60   200   200   254 #> 61    NA    NA    NA #> 62    NA    NA    NA #> 63    NA    NA    NA #> 64    NA    NA    NA #> 65    NA    NA    NA #> 66    NA    NA    NA #> 67    NA    NA    NA #> 68    NA    NA    NA #> 69    NA    NA    NA #> 70    NA    NA    NA #> 71    NA    NA    NA #> 72    NA    NA    NA #> 73    NA    NA    NA #> 74    NA    NA    NA #> 75    NA    NA    NA #> 76    NA    NA    NA #> 77    NA    NA    NA #> 78    NA    NA    NA #> 79    NA    NA    NA #> 80    NA    NA    NA #> 81    NA    NA    NA #> 82    NA    NA    NA #> 83    NA    NA    NA #> 84    NA    NA    NA #> 85    NA    NA    NA #> 86    NA    NA    NA #> 87    NA    NA    NA #> 88    NA    NA    NA #> 89    NA    NA    NA #> 90    NA    NA    NA"},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute confidence intervals for PSD-X and PSD X-Y values. — psdCI","title":"Compute confidence intervals for PSD-X and PSD X-Y values. — psdCI","text":"Compute confidence intervals (traditional) PSD-X (incremental) PSD X-Y values requested user.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute confidence intervals for PSD-X and PSD X-Y values. — psdCI","text":"","code":"psdCI(   indvec,   ptbl,   n,   method = c(\"binomial\", \"multinomial\"),   bin.type = c(\"wilson\", \"exact\", \"asymptotic\"),   conf.level = 0.95,   label = NULL,   digits = 1 )"},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute confidence intervals for PSD-X and PSD X-Y values. — psdCI","text":"indvec numeric vector 0s 1s identify linear combination proportions ptbl user interested . See details. ptbl numeric vector array contains proportion percentage individuals length category. See details. n single numeric number fish used construct ptbl. method string identifies confidence interval method use. See details. bin.type string identifies type method use calculation confidence intervals Rmethod=\"binomial\". See details binCI. conf.level number indicates level confidence use constructing confidence intervals (default 0.95). label single string can used label row output matrix. digits numeric indicates number decimals round result .","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute confidence intervals for PSD-X and PSD X-Y values. — psdCI","text":"matrix columns contain computed PSD-X PSD X-Y value associated confidence interval. confidence interval values set zero 100 computed value negative greater 100, respectively.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute confidence intervals for PSD-X and PSD X-Y values. — psdCI","text":"Computes confidence intervals (traditional) PSD-X (incremental) PSD X-Y values. Two methods can used chosen method=. method=\"binomial\" binomial distribution (via binCI()) used. method=\"multinomial\" multinomial method described Brenden et al. (2008) used. function defined compute one confidence interval method=\"binomial\" default. See examples psdCalc computing several simultaneous confidence intervals. table proportions within length category given ptbl. ptbl values greater 1 assumed table percentages supplied entire table divided 100 continue. proportions must sum 1 (allowance rounding). vector length equal length ptbl given indvec contains zeros ones identify linear combination values ptbl use construct confidence intervals. example, ptbl four proportions indvec=c(1,0,0,0) used construct confidence interval population proportion first category. Alternatively, indvec=c(0,0,1,1) used construct confidence interval population proportion last two categories. vector must contain zeros ones.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCI.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Compute confidence intervals for PSD-X and PSD X-Y values. — psdCI","text":"multinomial results match results given Brenden et al. (2008).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCI.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Compute confidence intervals for PSD-X and PSD X-Y values. — psdCI","text":"6-Size Structure.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute confidence intervals for PSD-X and PSD X-Y values. — psdCI","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Brenden, T.O., T. Wagner, B.R. Murphy. 2008. Novel tools analyzing proportional size distribution index data. North American Journal Fisheries Management 28:1233-1242. [(?) http://qfc.fw.msu.edu/Publications/Publication%20List/2008/Novel%20Tools%20for%20Analyzing%20Proportional%20Size%20Distribution_Brenden.pdf.]","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute confidence intervals for PSD-X and PSD X-Y values. — psdCI","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute confidence intervals for PSD-X and PSD X-Y values. — psdCI","text":"","code":"## similar to Brenden et al. (2008) n <- 997 ipsd <- c(130,491,253,123)/n  ## single binomial psdCI(c(0,0,1,1),ipsd,n=n) #>      Estimate 95% LCI 95% UCI #> [1,]     37.7    34.8    40.8 psdCI(c(1,0,0,0),ipsd,n=n,label=\"PSD S-Q\") #>         Estimate 95% LCI 95% UCI #> PSD S-Q       13    11.1    15.3  ## single multinomial psdCI(c(0,0,1,1),ipsd,n=n,method=\"multinomial\") #>      Estimate 95% LCI 95% UCI #> [1,]     37.7    33.4      42 psdCI(c(1,0,0,0),ipsd,n=n,method=\"multinomial\",label=\"PSD S-Q\") #>         Estimate 95% LCI 95% UCI #> PSD S-Q       13    10.1      16  ## multiple multinomials (but see psdCalc()) lbls <- c(\"PSD S-Q\",\"PSD Q-P\",\"PSD P-M\",\"PSD M-T\",\"PSD\",\"PSD-P\") imat <- matrix(c(1,0,0,0,                  0,1,0,0,                  0,0,1,0,                  0,0,0,1,                  0,1,1,1,                  0,0,1,1),nrow=6,byrow=TRUE) rownames(imat) <- lbls imat #>         [,1] [,2] [,3] [,4] #> PSD S-Q    1    0    0    0 #> PSD Q-P    0    1    0    0 #> PSD P-M    0    0    1    0 #> PSD M-T    0    0    0    1 #> PSD        0    1    1    1 #> PSD-P      0    0    1    1  mcis <- t(apply(imat,MARGIN=1,FUN=psdCI,ptbl=ipsd,n=n,method=\"multinomial\")) colnames(mcis) <- c(\"Estimate\",\"95% LCI\",\"95% UCI\") mcis #>         Estimate 95% LCI 95% UCI #> PSD S-Q     13.0    10.1    16.0 #> PSD Q-P     49.2    44.8    53.7 #> PSD P-M     25.4    21.5    29.2 #> PSD M-T     12.3     9.4    15.2 #> PSD         87.0    84.0    89.9 #> PSD-P       37.7    33.4    42.0  ## Multiple \"Bonferroni-corrected\" (for six comparisons) binomial method bcis <- t(apply(imat,MARGIN=1,FUN=psdCI,ptbl=ipsd,n=n,conf.level=1-0.05/6)) colnames(bcis) <- c(\"Estimate\",\"95% LCI\",\"95% UCI\") bcis #>         Estimate 95% LCI 95% UCI #> PSD S-Q     13.0    10.5    16.1 #> PSD Q-P     49.2    45.1    53.4 #> PSD P-M     25.4    21.9    29.2 #> PSD M-T     12.3     9.8    15.3 #> PSD         87.0    83.9    89.5 #> PSD-P       37.7    33.8    41.8"},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function for calculating PSD-X and PSD X-Y values. — psdCalc","title":"Convenience function for calculating PSD-X and PSD X-Y values. — psdCalc","text":"Convenience function calculating (traditional) PSD-X (incremental) PSD X-Y values Gabelhouse lengths increments thereof.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function for calculating PSD-X and PSD X-Y values. — psdCalc","text":"","code":"psdCalc(   formula,   data,   species,   units = c(\"mm\", \"cm\", \"in\"),   method = c(\"multinomial\", \"binomial\"),   conf.level = 0.95,   addLens = NULL,   addNames = NULL,   justAdds = FALSE,   what = c(\"all\", \"traditional\", \"incremental\", \"none\"),   drop0Est = TRUE,   showIntermediate = FALSE,   digits = 0 )"},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function for calculating PSD-X and PSD X-Y values. — psdCalc","text":"formula formula form ~length “length” generically represents variable data contains observed lengths. Note formula may contain one variable must numeric. data data.frame minimally contains observed lengths given variable formula. species string contains species name Gabelhouse lengths exist. See psdVal details. See details use function species Gabelhouse lengths defined. units string indicates type units used lengths. Choices mm millimeters (DEFAULT), cm centimeters, inches. method character identifies confidence interval method use. See details psdCI. conf.level number indicates level confidence use constructing confidence intervals (default 0.95). addLens numeric vector contains minimum lengths additional categories. See psdVal details. addNames string vector contains names additional lengths added addLens. See psdVal details. justAdds logical indicates whether just values related length sin addLens returned. string indicates type PSD values printed. See details. drop0Est logical indicates whether PSD values zero dropped output. showIntermediate logical indicates whether number fish category number stock fish (.e., “intermediate” values) included returned matrix. Default include values. digits numeric indicates number decimals round result . Default zero digits following recommendation Neumann Allen (2007).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCalc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function for calculating PSD-X and PSD X-Y values. — psdCalc","text":"matrix columns contain computed PSD-X PSD X-Y values associated confidence intervals. showIntermediate=TRUE number fish category number stock fish also shown.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCalc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convenience function for calculating PSD-X and PSD X-Y values. — psdCalc","text":"Computes (traditional) PSD-X (incremental) PSD X-Y values, associated confidence intervals, Gabelhouse length. PSD-X PSD X-Y values printed =\"\" (DEFAULT), PSD-X values printed =\"traditional\", PSD X-Y values printed =\"incremental\", nothing printed (matrix still returned) =\"none\". Confidence intervals can computed either multinomial (Default) binomial distribution set methodSee details psdCI information. function may used species Gabelhouse length categories defined. case include name species, define least two lengths addLens first category MUST called “stock”.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCalc.html","id":"testing","dir":"Reference","previous_headings":"","what":"Testing","title":"Convenience function for calculating PSD-X and PSD X-Y values. — psdCalc","text":"Point estimate calculations match constructed \"hand.\"","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCalc.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Convenience function for calculating PSD-X and PSD X-Y values. — psdCalc","text":"6-Size Structure.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCalc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convenience function for calculating PSD-X and PSD X-Y values. — psdCalc","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses RChapman & Hall/CRC, Boca Raton, FL. Guy, C.S., R.M. Neumann, D.W. Willis. 2006. New terminology proportional stock density (PSD) relative stock density (RSD): proportional size structure (PSS). Fisheries 31:86-87. [(?) http://pubstorage.sdstate.edu/wfs/415-F.pdf.] Guy, C.S., R.M. Neumann, D.W. Willis, R.O. Anderson2006Proportional size distribution (PSD): refinement population size structure index terminology. Fisheries. 32:348. [(?) http://pubstorage.sdstate.edu/wfs/450-F.pdf.] Neumann, R.M. Allen, M.S. 2007. Size structure. Guy, C.S. Brown, M.L., editors, Analysis Interpretation Freshwater Fisheries Data, Chapter 9, pages 375-421. American Fisheries Society, Bethesda, MD. Willis, D.W., B.R. Murphy, C.S. Guy. 1993. Stock density indices: development, use, limitations. Reviews Fisheries Science 1:203-222. [(?) http://web1.cnre.vt.edu/murphybr/web/Readings/Willis%20et%20al.pdf.]","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCalc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convenience function for calculating PSD-X and PSD X-Y values. — psdCalc","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdCalc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience function for calculating PSD-X and PSD X-Y values. — psdCalc","text":"","code":"## Random length data # suppose this is yellow perch to the nearest mm yepdf <- data.frame(yepmm=round(c(rnorm(100,mean=125,sd=15),                                   rnorm(50,mean=200,sd=25),                                   rnorm(20,mean=300,sd=40)),0),                     species=rep(\"Yellow Perch\",170)) psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",digits=1) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>         Estimate 95% LCI 95% UCI #> PSD-Q       37.1    22.6    51.7 #> PSD-P       19.0     7.2    30.9 #> PSD-M        7.6     0.0    15.6 #> PSD-T        1.0     0.0     3.9 #> PSD S-Q     62.9    48.3    77.4 #> PSD Q-P     18.1     6.5    29.7 #> PSD P-M     11.4     1.9    21.0 #> PSD M-T      6.7     0.0    14.2 psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",digits=1,drop0Est=TRUE) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>         Estimate 95% LCI 95% UCI #> PSD-Q       37.1    22.6    51.7 #> PSD-P       19.0     7.2    30.9 #> PSD-M        7.6     0.0    15.6 #> PSD-T        1.0     0.0     3.9 #> PSD S-Q     62.9    48.3    77.4 #> PSD Q-P     18.1     6.5    29.7 #> PSD P-M     11.4     1.9    21.0 #> PSD M-T      6.7     0.0    14.2  ## add a length psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=150) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>           Estimate 95% LCI 95% UCI #> PSD-150         70      56      85 #> PSD-Q           37      21      53 #> PSD-P           19       6      32 #> PSD-M            8       0      16 #> PSD-T            1       0       4 #> PSD S-150       30      15      44 #> PSD 150-Q       33      18      49 #> PSD Q-P         18       6      31 #> PSD P-M         11       1      22 #> PSD M-T          7       0      15  ## add lengths with names psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=150,addNames=\"minLen\") #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>              Estimate 95% LCI 95% UCI #> PSD-minLen         70      56      85 #> PSD-Q              37      21      53 #> PSD-P              19       6      32 #> PSD-M               8       0      16 #> PSD-T               1       0       4 #> PSD S-minLen       30      15      44 #> PSD minLen-Q       33      18      49 #> PSD Q-P            18       6      31 #> PSD P-M            11       1      22 #> PSD M-T             7       0      15 psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=c(\"minLen\"=150)) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>              Estimate 95% LCI 95% UCI #> PSD-minLen         70      56      85 #> PSD-Q              37      21      53 #> PSD-P              19       6      32 #> PSD-M               8       0      16 #> PSD-T               1       0       4 #> PSD S-minLen       30      15      44 #> PSD minLen-Q       33      18      49 #> PSD Q-P            18       6      31 #> PSD P-M            11       1      22 #> PSD M-T             7       0      15 psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=c(150,275),addNames=c(\"minSlot\",\"maxSlot\")) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>               Estimate 95% LCI 95% UCI #> PSD-minSlot         70      55      86 #> PSD-Q               37      20      54 #> PSD-P               19       5      33 #> PSD-maxSlot         15       3      28 #> PSD-M                8       0      17 #> PSD-T                1       0       4 #> PSD S-minSlot       30      14      45 #> PSD minSlot-Q       33      17      50 #> PSD Q-P             18       5      31 #> PSD P-maxSlot        4       0      10 #> PSD maxSlot-M        8       0      17 #> PSD M-T              7       0      15 psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=c(\"minLen\"=150,\"maxslot\"=275)) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>               Estimate 95% LCI 95% UCI #> PSD-minLen          70      55      86 #> PSD-Q               37      20      54 #> PSD-P               19       5      33 #> PSD-maxslot         15       3      28 #> PSD-M                8       0      17 #> PSD-T                1       0       4 #> PSD S-minLen        30      14      45 #> PSD minLen-Q        33      17      50 #> PSD Q-P             18       5      31 #> PSD P-maxslot        4       0      10 #> PSD maxslot-M        8       0      17 #> PSD M-T              7       0      15  ## add lengths with names, return just those values that use those lengths psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=c(\"minLen\"=150),justAdds=TRUE) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>              Estimate 95% LCI 95% UCI #> PSD-minLen         70      56      85 #> PSD S-minLen       30      15      44 #> PSD minLen-Q       33      18      49 psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=c(\"minLen\"=150),justAdds=TRUE,         what=\"traditional\") #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #> Estimate  95% LCI  95% UCI  #>       70       56       85  psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=c(150,275),         addNames=c(\"minSlot\",\"maxSlot\"),justAdds=TRUE) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>               Estimate 95% LCI 95% UCI #> PSD-minSlot         70      55      86 #> PSD-maxSlot         15       3      28 #> PSD S-minSlot       30      14      45 #> PSD minSlot-Q       33      17      50 #> PSD P-maxSlot        4       0      10 #> PSD maxSlot-M        8       0      17 psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=c(150,275),         addNames=c(\"minSlot\",\"maxSlot\"),justAdds=TRUE,what=\"traditional\") #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>             Estimate 95% LCI 95% UCI #> PSD-minSlot       70      55      86 #> PSD-maxSlot       15       3      28  ## different output types psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=150,what=\"traditional\") #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>         Estimate 95% LCI 95% UCI #> PSD-150       70      56      85 #> PSD-Q         37      21      53 #> PSD-P         19       6      32 #> PSD-M          8       0      16 #> PSD-T          1       0       4 psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=150,what=\"incremental\") #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>           Estimate 95% LCI 95% UCI #> PSD S-150       30      15      44 #> PSD 150-Q       33      18      49 #> PSD Q-P         18       6      31 #> PSD P-M         11       1      22 #> PSD M-T          7       0      15 psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",addLens=150,what=\"none\") #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%.  ## Show intermediate values psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",showInterm=TRUE) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>         num stock Estimate 95% LCI 95% UCI #> PSD-Q    39   105       37      23      52 #> PSD-P    20   105       19       7      31 #> PSD-M     8   105        8       0      16 #> PSD-T     1   105        1       0       4 #> PSD S-Q  66   105       63      48      77 #> PSD Q-P  19   105       18       7      30 #> PSD P-M  12   105       11       2      21 #> PSD M-T   7   105        7       0      14 psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",what=\"traditional\",showInterm=TRUE) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>       num stock Estimate 95% LCI 95% UCI #> PSD-Q  39   105       37      23      52 #> PSD-P  20   105       19       7      31 #> PSD-M   8   105        8       0      16 #> PSD-T   1   105        1       0       4 psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",what=\"incremental\",showInterm=TRUE) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>         num stock Estimate 95% LCI 95% UCI #> PSD S-Q  66   105       63      48      77 #> PSD Q-P  19   105       18       7      30 #> PSD P-M  12   105       11       2      21 #> PSD M-T   7   105        7       0      14  ## Control the digits psdCalc(~yepmm,data=yepdf,species=\"Yellow perch\",digits=1) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>         Estimate 95% LCI 95% UCI #> PSD-Q       37.1    22.6    51.7 #> PSD-P       19.0     7.2    30.9 #> PSD-M        7.6     0.0    15.6 #> PSD-T        1.0     0.0     3.9 #> PSD S-Q     62.9    48.3    77.4 #> PSD Q-P     18.1     6.5    29.7 #> PSD P-M     11.4     1.9    21.0 #> PSD M-T      6.7     0.0    14.2  ## Working with a species not in PSDlit ... same data, but don't give species psdCalc(~yepmm,data=yepdf,addLens=c(\"stock\"=130,\"quality\"=200,\"preferred\"=250,                                     \"memorable\"=300,\"trophy\"=380)) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>         Estimate 95% LCI 95% UCI #> PSD-Q         37      23      52 #> PSD-P         19       7      31 #> PSD-M          8       0      16 #> PSD-T          1       0       4 #> PSD S-Q       63      48      77 #> PSD Q-P       18       7      30 #> PSD P-M       11       2      21 #> PSD M-T        7       0      14 psdCalc(~yepmm,data=yepdf,addLens=c(\"stock\"=130,\"quality\"=200,                                     \"preferred\"=250,\"name1\"=220)) #> Warning: Some category sample size <20, some CI coverage may be #>  lower than 95%. #>             Estimate 95% LCI 95% UCI #> PSD-Q             37      24      50 #> PSD-name1         28      15      40 #> PSD-P             19       8      30 #> PSD S-Q           63      50      76 #> PSD Q-name1       10       2      18 #> PSD name1-P        9       1      16"},{"path":"https://fishr-core-team.github.io/FSA/reference/psdPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Length-frequency histogram with Gabelhouse lengths highlighted. — psdPlot","title":"Length-frequency histogram with Gabelhouse lengths highlighted. — psdPlot","text":"Constructs length-frequency histogram Gabelhouse lengths highlighted.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Length-frequency histogram with Gabelhouse lengths highlighted. — psdPlot","text":"","code":"psdPlot(   formula,   data,   species = \"List\",   units = c(\"mm\", \"cm\", \"in\"),   startcat = 0,   w = 1,   justPSDQ = FALSE,   main = \"\",   xlab = \"Length\",   ylab = \"Number\",   xlim = NULL,   ylim = c(0, max(h$counts) * 1.05),   substock.col = \"white\",   stock.col = \"gray90\",   psd.col = \"black\",   psd.lty = 2,   psd.lwd = 1,   show.abbrevs = TRUE,   psd.add = TRUE,   psd.pos = \"topleft\",   psd.cex = 0.75,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/psdPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Length-frequency histogram with Gabelhouse lengths highlighted. — psdPlot","text":"formula formula form ~length “length” generically represents variable data contains length measurements. Note formula can contain one variable. data data.frame minimally contains length measurements given variable formula. species string contains species name Gabelhouse length categories exist. See psdVal details. units string indicates type units used length measurements. Choices mm millimeters (DEFAULT), cm centimeters, inches. startcat number indicates beginning first length-class. w number indicates width length classes create. justPSDQ logical indicates whether just stock quality (PSD-Q calculations) categories used. FALSE (default) five Gabelhouse categories used. main string serves main label histogram. xlab string serves label x-axis. ylab string serves label y-axis. xlim numeric vector length two indicates minimum maximum values (.e., fish lengths) x-axis. ylim numeric vector length two indicates minimum maximum values y-axis. substock.col string indicates color use bars representing -stock size fish. stock.col string indicates color use bars representing stock size fish. psd.col string indicates color use vertical lines Gabelhouse length category values. psd.lty numeric indicates line type use vertical lines Gabelhouse length category values. psd.lwd numeric indicates line width use vertical lines Gabelhouse length category values. show.abbrevs logical indicates abbreviations Gabelhouse length categories added top plot. psd.add logical indicates calculated PSD values added plot (default TRUE). psd.pos string indicates position PSD values shown. See details legend. psd.cex numeric value indicates character expansion PSD values text. ... Arguments passed low-level plotting functions.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Length-frequency histogram with Gabelhouse lengths highlighted. — psdPlot","text":"None. However, graphic produced.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Length-frequency histogram with Gabelhouse lengths highlighted. — psdPlot","text":"Constructs length-frequency histogram stock-sized fish highlighted, Gabelhouse lengths marked vertical lines, (traditional) PSD-X values superimposed. length fish plotted x-axis can controlled xlim, however, minimum value xlim must less stock length species.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdPlot.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Length-frequency histogram with Gabelhouse lengths highlighted. — psdPlot","text":"6-Size Structure.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdPlot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Length-frequency histogram with Gabelhouse lengths highlighted. — psdPlot","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Guy, C.S., R.M. Neumann, D.W. Willis. 2006. New terminology proportional stock density (PSD) relative stock density (RSD): proportional size structure (PSS). Fisheries 31:86-87. [(?) http://pubstorage.sdstate.edu/wfs/415-F.pdf.] Guy, C.S., R.M. Neumann, D.W. Willis, R.O. Anderson. 2006. Proportional size distribution (PSD): refinement population size structure index terminology. Fisheries 32:348. [(?) http://pubstorage.sdstate.edu/wfs/450-F.pdf.] Willis, D.W., B.R. Murphy, C.S. Guy. 1993. Stock density indices: development, use, limitations. Reviews Fisheries Science 1:203-222. [(?) http://web1.cnre.vt.edu/murphybr/web/Readings/Willis%20et%20al.pdf.]","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/psdPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Length-frequency histogram with Gabelhouse lengths highlighted. — psdPlot","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Length-frequency histogram with Gabelhouse lengths highlighted. — psdPlot","text":"","code":"## Random length data # suppose this is yellow perch to the nearest mm df <- data.frame(spec=rep(\"Yellow Perch\",170),                  mm=c(rnorm(100,mean=125,sd=15),rnorm(50,mean=200,sd=25),                       rnorm(20,mean=300,sd=40)))  ## Example graphics op <- par(mar=c(3,3,2,1),mgp=c(1.7,0.5,0)) # Using 10-mm increments psdPlot(~mm,data=df,species=\"Yellow perch\",w=10)  psdPlot(~mm,data=df,species=\"Yellow perch\",w=10,substock.col=\"gray90\",         stock.col=\"gray30\")  # ... but without the PSD values psdPlot(~mm,data=df,species=\"Yellow perch\",w=10,psd.add=FALSE)  par(op)"},{"path":"https://fishr-core-team.github.io/FSA/reference/psdVal.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds Gabelhouse lengths (for PSD calculations) for a species. — psdVal","title":"Finds Gabelhouse lengths (for PSD calculations) for a species. — psdVal","text":"Returns vector five Gabelhouse lengths chosen species.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdVal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds Gabelhouse lengths (for PSD calculations) for a species. — psdVal","text":"","code":"psdVal(   species = \"List\",   units = c(\"mm\", \"cm\", \"in\"),   incl.zero = TRUE,   addLens = NULL,   addNames = NULL,   showJustSource = FALSE )"},{"path":"https://fishr-core-team.github.io/FSA/reference/psdVal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds Gabelhouse lengths (for PSD calculations) for a species. — psdVal","text":"species string contains species name find Gabelhouse lengths. See details. units string indicates units returned lengths. Choices mm millimeters (DEFAULT), cm centimeters, inches. incl.zero logical indicates zero included first position returned vector (DEFAULT) . position named “substock”. See details. addLens numeric vector contains minimum length definitions additional categories. See details. addNames string vector contains names additional length categories added addLens. See details. showJustSource logical indicates whether just literature source information returned (TRUE) . TRUE return Gabelhouse length information.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdVal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds Gabelhouse lengths (for PSD calculations) for a species. — psdVal","text":"vector minimum values length categories chosen species.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdVal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Finds Gabelhouse lengths (for PSD calculations) for a species. — psdVal","text":"Finds Gabelhouse lengths data(PSDlit) species given species. species name must spelled exactly (within capitalization differences) appears data(PSDlit). Type psdVal() see list species spelled. zero included first position returned vector incl.zero=TRUE. useful computing PSD values data.frame contains fish smaller stock length. Additional lengths may added returned vector addLens. Names lengths can included addNames. addNames non-NULL, must length addLens. addLens non-NULL addNames NULL, default names lengths addLens. addLens argument useful calculating PSD values different Gabelhouse lengths.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdVal.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Finds Gabelhouse lengths (for PSD calculations) for a species. — psdVal","text":"6-Size Structure.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdVal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Finds Gabelhouse lengths (for PSD calculations) for a species. — psdVal","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Guy, C.S., R.M. Neumann, D.W. Willis. 2006. New terminology proportional stock density (PSD) relative stock density (RSD): proportional size structure (PSS). Fisheries 31:86-87. [(?) http://pubstorage.sdstate.edu/wfs/415-F.pdf.] Guy, C.S., R.M. Neumann, D.W. Willis, R.O. Anderson. 2006. Proportional size distribution (PSD): refinement population size structure index terminology. Fisheries 32:348. [(?) http://pubstorage.sdstate.edu/wfs/450-F.pdf.] Willis, D.W., B.R. Murphy, C.S. Guy. 1993. Stock density indices: development, use, limitations. Reviews Fisheries Science 1:203-222. [(?) http://web1.cnre.vt.edu/murphybr/web/Readings/Willis%20et%20al.pdf.]","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/psdVal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finds Gabelhouse lengths (for PSD calculations) for a species. — psdVal","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/psdVal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds Gabelhouse lengths (for PSD calculations) for a species. — psdVal","text":"","code":"# List all of the species psdVal() #>  #> Species name must be one of following. Be careful of spelling and capitalization. #>  [1] \"Arctic Grayling\"             \"Bighead Carp\"                #>  [3] \"Bigmouth Buffalo\"            \"Black Bullhead\"              #>  [5] \"Black Carp\"                  \"Black Crappie\"               #>  [7] \"Blue Catfish\"                \"Bluegill\"                    #>  [9] \"Brook Trout\"                 \"Brook Trout (lentic)\"        #> [11] \"Brook Trout (lotic)\"         \"Brown Bullhead\"              #> [13] \"Brown Trout (lentic)\"        \"Brown Trout (lotic)\"         #> [15] \"Bull Trout\"                  \"Burbot\"                      #> [17] \"Chain Pickerel\"              \"Channel Catfish\"             #> [19] \"Chinook Salmon (landlocked)\" \"Common Carp\"                 #> [21] \"Cutthroat Trout\"             \"Flathead Catfish\"            #> [23] \"Freshwater Drum\"             \"Gizzard Shad\"                #> [25] \"Golden Trout\"                \"Grass Carp\"                  #> [27] \"Green Sunfish\"               \"Kokanee\"                     #> [29] \"Lake Trout\"                  \"Largemouth Bass\"             #> [31] \"Longnose Gar\"                \"Muskellunge\"                 #> [33] \"Northern Pike\"               \"Paddlefish\"                  #> [35] \"Pallid Sturgeon\"             \"Palmetto Bass\"               #> [37] \"Palmetto Bass (original)\"    \"Pumpkinseed\"                 #> [39] \"Rainbow Trout\"               \"Redbreast Sunfish\"           #> [41] \"Redear Sunfish\"              \"River Carpsucker\"            #> [43] \"Rock Bass\"                   \"Ruffe\"                       #> [45] \"Sauger\"                      \"Saugeye\"                     #> [47] \"Shoal Bass\"                  \"Shorthead Redhorse\"          #> [49] \"Silver Carp\"                 \"Smallmouth Bass\"             #> [51] \"Smallmouth Buffalo \"         \"Splake\"                      #> [53] \"Spotted Bass\"                \"Spotted Gar\"                 #> [55] \"Spotted Sunfish\"             \"Striped Bass (hybrid)\"       #> [57] \"Striped Bass (landlocked)\"   \"Striped Bass X White Bass\"   #> [59] \"Suwannee Bass\"               \"Utah Chub\"                   #> [61] \"Walleye\"                     \"Warmouth\"                    #> [63] \"White Bass\"                  \"White Catfish\"               #> [65] \"White Crappie\"               \"White Perch\"                 #> [67] \"White Sucker\"                \"Yellow Bass\"                 #> [69] \"Yellow Bullhead\"             \"Yellow Perch\"                # Demonstrate typical usages psdVal(\"Yellow perch\") #>  substock     stock   quality preferred memorable    trophy  #>         0       130       200       250       300       380  psdVal(\"Walleye\",units=\"cm\") #>  substock     stock   quality preferred memorable    trophy  #>         0        25        38        51        63        76  psdVal(\"Bluegill\",units=\"in\") #>  substock     stock   quality preferred memorable    trophy  #>         0         3         6         8        10        12  psdVal(\"Bluegill\",units=\"in\",incl.zero=FALSE) #>     stock   quality preferred memorable    trophy  #>         3         6         8        10        12  psdVal(\"Bluegill\") #>  substock     stock   quality preferred memorable    trophy  #>         0        80       150       200       250       300  # Demonstrate that it will work with mis-capitalization psdVal(\"bluegill\") #>  substock     stock   quality preferred memorable    trophy  #>         0        80       150       200       250       300  psdVal(\"Yellow Perch\") #>  substock     stock   quality preferred memorable    trophy  #>         0       130       200       250       300       380  # Demonstrate adding in user-defined categories psdVal(\"Bluegill\",units=\"in\",addLens=7) #>  substock     stock   quality         7 preferred memorable    trophy  #>         0         3         6         7         8        10        12  psdVal(\"Bluegill\",units=\"in\",addLens=7,addNames=\"MinLen\") #>  substock     stock   quality    MinLen preferred memorable    trophy  #>         0         3         6         7         8        10        12  psdVal(\"Bluegill\",units=\"in\",addLens=c(7,9),addNames=c(\"MinSlot\",\"MaxSlot\")) #>  substock     stock   quality   MinSlot preferred   MaxSlot memorable    trophy  #>         0         3         6         7         8         9        10        12  psdVal(\"Bluegill\",units=\"in\",addLens=c(\"MinLen\"=7)) #>  substock     stock   quality    MinLen preferred memorable    trophy  #>         0         3         6         7         8        10        12  psdVal(\"Bluegill\",units=\"in\",addLens=c(\"MinSlot\"=7,\"MaxSlot\"=9)) #>  substock     stock   quality   MinSlot preferred   MaxSlot memorable    trophy  #>         0         3         6         7         8         9        10        12  psdVal(\"Bluegill\",showJustSource=TRUE) #>    species             source #> 8 Bluegill Gabelhouse (1984a)"},{"path":"https://fishr-core-team.github.io/FSA/reference/rSquared.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the coefficient of determination from a linear model object. — rSquared","title":"Extract the coefficient of determination from a linear model object. — rSquared","text":"Extracts coefficient determination (.e., “r-squared”) linear model (.e., lm) object.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/rSquared.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the coefficient of determination from a linear model object. — rSquared","text":"","code":"rSquared(object, ...)  # S3 method for default rSquared(object, ...)  # S3 method for lm rSquared(object, digits = getOption(\"digits\"), percent = FALSE, ...)"},{"path":"https://fishr-core-team.github.io/FSA/reference/rSquared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the coefficient of determination from a linear model object. — rSquared","text":"object object saved lm. ... Additional arguments methods. digits single number number digits round returned result . percent logical indicates result returned percentage (=TRUE) proportion (=FALSE; default).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/rSquared.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the coefficient of determination from a linear model object. — rSquared","text":"numeric, either proportion percentage, coefficient determination linear model.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/rSquared.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the coefficient of determination from a linear model object. — rSquared","text":"convenience function extract r.squared part summary(lm).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/rSquared.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the coefficient of determination from a linear model object. — rSquared","text":"","code":"lm1 <- lm(mirex~weight, data=Mirex) rSquared(lm1) #> [1] 0.1812022 rSquared(lm1,digits=3) #> [1] 0.181 rSquared(lm1,digits=1,percent=TRUE) #> [1] 18.1  ## rSquared only works with lm objects if (FALSE) { nls1 <- nls(mirex~a*weight^b,data=Mirex,start=list(a=1,b=1)) rSquared(nls1) }"},{"path":"https://fishr-core-team.github.io/FSA/reference/rcumsum.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the prior to or reverse cumulative sum of a vector. — rcumsum","title":"Computes the prior to or reverse cumulative sum of a vector. — rcumsum","text":"Computes prior-(.e., cumulative sum prior including current value) reverse (.e., number large larger) cumulative sum vector. Also works 1-dimensional tables, matrices, data.frames, though best used vectors.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/rcumsum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the prior to or reverse cumulative sum of a vector. — rcumsum","text":"","code":"rcumsum(x)  pcumsum(x)"},{"path":"https://fishr-core-team.github.io/FSA/reference/rcumsum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the prior to or reverse cumulative sum of a vector. — rcumsum","text":"x numeric object.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/rcumsum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the prior to or reverse cumulative sum of a vector. — rcumsum","text":"numeric vector contains prior-reverse cumulative sums.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/rcumsum.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Computes the prior to or reverse cumulative sum of a vector. — rcumsum","text":"NA vector causes returned values first NA pcumsum last NA rcumsum NA. See examples.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/rcumsum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes the prior to or reverse cumulative sum of a vector. — rcumsum","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/rcumsum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the prior to or reverse cumulative sum of a vector. — rcumsum","text":"","code":"## Simple example cbind(vals=1:10,       cum=cumsum(1:10),       pcum=pcumsum(1:10),       rcum=rcumsum(1:10)) #>       vals cum pcum rcum #>  [1,]    1   1    0   55 #>  [2,]    2   3    1   54 #>  [3,]    3   6    3   52 #>  [4,]    4  10    6   49 #>  [5,]    5  15   10   45 #>  [6,]    6  21   15   40 #>  [7,]    7  28   21   34 #>  [8,]    8  36   28   27 #>  [9,]    9  45   36   19 #> [10,]   10  55   45   10  ## Example with NA vals <- c(1,2,NA,3) cbind(vals,       cum=cumsum(vals),       pcum=pcumsum(vals),       rcum=rcumsum(vals)) #>      vals cum pcum rcum #> [1,]    1   1    0   NA #> [2,]    2   3    1   NA #> [3,]   NA  NA   NA   NA #> [4,]    3  NA   NA    3  ## Example with NA vals <- c(1,2,NA,3,NA,4) cbind(vals,       cum=cumsum(vals),       pcum=pcumsum(vals),       rcum=rcumsum(vals)) #>      vals cum pcum rcum #> [1,]    1   1    0   NA #> [2,]    2   3    1   NA #> [3,]   NA  NA   NA   NA #> [4,]    3  NA   NA   NA #> [5,]   NA  NA   NA   NA #> [6,]    4  NA   NA    4        ## Example with a matrix mat <- matrix(c(1,2,3,4,5),nrow=1) cumsum(mat) #> [1]  1  3  6 10 15 pcumsum(mat) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    1    3    6   10 rcumsum(mat) #> [1] 15 14 12  9  5  ## Example with a table (must be 1-d) df <- sample(1:10,100,replace=TRUE) tbl <- table(df) cumsum(tbl) #>   1   2   3   4   5   6   7   8   9  10  #>  12  23  34  43  51  59  65  78  87 100  pcumsum(tbl) #> df #>  1  2  3  4  5  6  7  8  9 10  #>  0 12 23 34 43 51 59 65 78 87  rcumsum(tbl) #>   1   2   3   4   5   6   7   8   9  10  #> 100  88  77  66  57  49  41  35  22  13   ## Example with a data.frame (must be 1-d) df <- sample(1:10,100,replace=TRUE) tbl <- as.data.frame(table(df))[,-1] cumsum(tbl) #>  [1]   4  17  26  38  47  54  73  82  93 100 pcumsum(tbl) #>  [1]  0  4 17 26 38 47 54 73 82 93 rcumsum(tbl) #>  [1] 100  96  83  74  62  53  46  27  18   7"},{"path":"https://fishr-core-team.github.io/FSA/reference/removal.html","id":null,"dir":"Reference","previous_headings":"","what":"Population estimates for k-, 3-, or 2-pass removal data. — removal","title":"Population estimates for k-, 3-, or 2-pass removal data. — removal","text":"Computes estimates, confidence intervals, population size probability capture number fish removed k-, 3-, 2-passes closed population.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/removal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population estimates for k-, 3-, or 2-pass removal data. — removal","text":"","code":"removal(   catch,   method = c(\"CarleStrub\", \"Zippin\", \"Seber3\", \"Seber2\", \"RobsonRegier2\", \"Moran\",     \"Schnute\", \"Burnham\"),   alpha = 1,   beta = 1,   CS.se = c(\"Zippin\", \"alternative\"),   conf.level = 0.95,   just.ests = FALSE,   Tmult = 3,   CIMicroFish = FALSE )  # S3 method for removal summary(   object,   parm = c(\"No\", \"p\", \"p1\"),   digits = getOption(\"digits\"),   verbose = FALSE,   ... )  # S3 method for removal confint(   object,   parm = c(\"No\", \"p\"),   level = conf.level,   conf.level = NULL,   digits = getOption(\"digits\"),   verbose = FALSE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/removal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population estimates for k-, 3-, or 2-pass removal data. — removal","text":"catch numerical vector catch pass. method single string identifies removal method use. See details. alpha single numeric value alpha parameter CarleStrub method (default 1). beta single numeric value beta parameter CarleStrub method (default 1). CS.se single string identifies whether SE CarleStrub method computed according Seber Zippin. conf.level single number representing level confidence use constructing confidence intervals. sent main removal function rather confint. just.ests logical indicates whether just estimates (=TRUE) return list (=FALSE; default; see ) returned. Tmult single numeric multiplied total catch samples set upper value range population sizes minimizing log-likelihood creating confidence intervals Moran Schnute methods. Large values much slower compute, values low may result missing best estimate. warning issued low value suspected. CIMicroFish logical indicates whether t value used calculate confidence intervals method=\"Burnham\" rounded two three decimals whether confidence intervals rounded whole numbers done MicroFish 3.0. default (=FALSE) round t values confidence interval. option provided results exactly match MicroFish results (see testing). object object saved removal(). parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. digits single numeric controls number decimals output summary confint. verbose logical indicates whether descriptive labels printed summary certain warnings shown confint. ... Additional arguments methods. level used, compatibility generic confint function.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/removal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population estimates for k-, 3-, or 2-pass removal data. — removal","text":"vector contains estimates standard errors p just.ests=TRUE (default) list least following items:  catch original vector observed catches. method method used (provided user). lbl descriptive label method used. est matrix contains estimates standard errors p. addition, Moran Schnute methods used list also contain  min.nlogLH minimum value negative log-likelihood function. Tmult Tmult value sent user.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/removal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Population estimates for k-, 3-, or 2-pass removal data. — removal","text":"main function computes estimates associated standard errors, possible, initial population size, , probability capture, p, eight methods chosen method=. possible methods : method=\"CarleStrub\": general weighted k-pass estimator proposed Carle Strub (1978). function iteratively solves equation 7 Carle Strub (1978). method=\"Zippin\": general k-pass estimator generally attributed Zippin. function iteratively solves bias corrected version equation 3 (page 622) Carle Strub (1978). results yet trustworthy (see Testing section ). method=\"Seber3\": special case k=3 estimator shown equation 7.24 Seber(2002). method=\"Seber2\": special case k=2 estimator shown page 312 Seber(2002). method=\"RobsonRegier2\": special case k=2 estimator shown Robson Regier (1968). method=\"Moran\": likelihood method Moran (1951) implemented Schnute (1983). method=\"Schnute\": likelihood method Schnute (1983) model different probability capture first sample constant probability capture ensuing samples. method=\"Burnham\": general k-pass estimator likelihood method created Ken Burnham presented Van Deventer Platts (1983). method used Microfish software (Van Deventer 1989). Confidence intervals first five methods computed using standard large-sample normal distribution theory. Note confidence intervals 2- 3-pass special cases approximately correct estimated population size greater 200. estimated population size 50 200 95% CI behaves like 90% CI. Confidence intervals next two methods use likelihood ratio theory described Schnute (1983) produced parameter. Standard errors produced Moran Schnute methods. Confidence intervals last method computed per Ken Burnham's instructions Burnham Method (Jack Van Deventer, personal communication). Specifically, calculated t-statistic -1 degrees freedom. Please note MicroFish software rounds t-statistic calculates confidence intervals p. need confidence interals produced FSA::removal duplicate MicroFish, please use CIMicroFish=TRUE.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/removal.html","id":"testing","dir":"Reference","previous_headings":"","what":"testing","title":"Population estimates for k-, 3-, or 2-pass removal data. — removal","text":"Carle-Strub method matches examples Carle Strub (1978) , p, variance . Carle-Strub estimates p match examples Cowx (1983) SE . Carle-Strub estimates match results (estimates reject) Jones Stockwell (1995) within 1 individual instances within 1% instances (e.g., 3 individuals estimate 930 individuals). Seber3 results match results Cowx (1983). Seber2 results , p, SE match results example 7.4 Seber (2002) Cowx (1983). RobsonRegier2 results SE match results Cowx (1983) Zippin method results match examples Seber (2002) Cowx (1983) removal uses bias-corrected version Carle Strub (1978) use tables Zippin (1958). Zippin method yet trustworthy. Moran Schnute methods match examples Schnute (1983) perfectly point estimates within 0.1 units confidence intervals. Burnham method tested free (gratis) Demo Version MicroFish 3.0. Powell Wheeler used R simulate 100, three-pass removal samples capture probabilities 0 1 population sizes <= 1000. Burnham method implemented exactly matched MicroFish 100 trials p. addition, CIs exactly matched 100 trials CIMicroFish=TRUE. Powell able check CIs p MicroFish 'Quick Population Estimate' report .","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/removal.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Population estimates for k-, 3-, or 2-pass removal data. — removal","text":"10-Abundance Depletion Data.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/removal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Population estimates for k-, 3-, or 2-pass removal data. — removal","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Carle, F.L. M.R. Strub. 1978. new method estimating population size removal data. Biometrics, 34:621-630. Cowx, .G. 1983. Review methods estimating fish population size survey removal data. Fisheries Management, 14:67-82. Moran, P..P. 1951. mathematical theory animal trapping. Biometrika 38:307-311. Robson, D.S., H.. Regier. 1968. Estimation population number mortality rates. pp. 124-158 Ricker, W.E. (editor) Methods Assessment Fish Production Fresh Waters. IBP Handbook . 3 Blackwell Scientific Publications, Oxford. Schnute, J. 1983. new approach estimating populations removal method. Canadian Journal Fisheries Aquatic Sciences, 40:2153-2169. Seber, G..F. 2002. Estimation Animal Abundance. Edward Arnold, second edition (Reprint). van Dishoeck, P. 2009. Effects catchability variation performance depletion estimators: Application adaptive management experiment. Masters Thesis, Simon Fraser University. [(?) http://rem-main.rem.sfu.ca/theses/vanDishoeckPier_2009_MRM483.pdf.] Van Deventer, J.S. 1989. Microcomputer Software System Generating Population Statistics Electrofishing Data--User's Guide MicroFish 3.0. USDA Forest Service, General Technical Report INT-254. 29 p. [(?) https://relicensing.pcwa.net/documents/Library/PCWA-L Van Deventer, J.S., W.S. Platts. 1983. Sampling estimating fish populations streams. Transactions 48th North American Wildlife Natural Resource Conference. pp. 349-354.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/removal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Population estimates for k-, 3-, or 2-pass removal data. — removal","text":"Derek H. Ogle, DerekOgle51@gmail.com . Powell Wheeler, powell.wheeler@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/removal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population estimates for k-, 3-, or 2-pass removal data. — removal","text":"","code":"## First example -- 3 passes ct3 <- c(77,50,37)  # Carle Strub (default) method p1 <- removal(ct3) summary(p1) #>       Estimate Std. Error #> No 233.0000000 31.3578504 #> p    0.3313131  0.0666816 summary(p1,verbose=TRUE) #> The Carle & Strub (1978) K-Pass Removal Method was used. #>       Estimate Std. Error #> No 233.0000000 31.3578504 #> p    0.3313131  0.0666816 summary(p1,parm=\"No\") #>    Estimate Std. Error #> No      233   31.35785 summary(p1,parm=\"p\") #>    Estimate Std. Error #> p 0.3313131  0.0666816 confint(p1) #>        95% LCI     95% UCI #> No 171.5397426 294.4602574 #> p    0.2006195   0.4620067 confint(p1,parm=\"No\") #>     95% LCI  95% UCI #> No 171.5397 294.4603 confint(p1,parm=\"p\") #>     95% LCI   95% UCI #> p 0.2006195 0.4620067  # Moran method p2 <- removal(ct3,method=\"Moran\") summary(p2,verbose=TRUE) #> The Moran (1951) K-Pass Removal Method was used (SEs not computed). #>       Estimate #> No 237.5965440 #> p    0.3223336 confint(p2,verbose=TRUE) #>    95% LCI 95% UCI #> No   194.7   370.9 #' # Schnute method p3 <- removal(ct3,method=\"Schnute\") summary(p3,verbose=TRUE) #> The Schnute (1983) K-Pass Removal Method w/ Non-constant Initial Catchability was used (SEs not computed). #>       Estimate #> No 245.0955993 #> p    0.3039926 #> p1   0.3141631 confint(p3,verbose=TRUE) #> An upper confidence value for 'No' cannot be determined. #>    95% LCI 95% UCI #> No   183.9     Inf  # Burnham method p4 <- removal(ct3,method=\"Burnham\") summary(p4) #>       Estimate Std. Error #> No 238.0000000 33.8404319 #> p    0.3215686  0.0673948 summary(p4,verbose=TRUE) #> The Burnham K-Pass Removal Method (Van Deventer and Platts 1983) was used. #>       Estimate Std. Error #> No 238.0000000 33.8404319 #> p    0.3215686  0.0673948 summary(p4,parm=\"No\") #>    Estimate Std. Error #> No      238   33.84043 summary(p4,parm=\"p\") #>    Estimate Std. Error #> p 0.3215686  0.0673948 confint(p4) #>        95% LCI     95% UCI #> No 171.3335366 304.6664634 #> p    0.1887992   0.4543381 confint(p4,parm=\"No\") #>     95% LCI  95% UCI #> No 171.3335 304.6665 confint(p4,parm=\"p\") #>     95% LCI   95% UCI #> p 0.1887992 0.4543381 ## Second example -- 2 passes ct2 <- c(77,37)  # Seber method p4 <- removal(ct2,method=\"Seber2\") summary(p4,verbose=TRUE) #> The Seber (2002) 2-Pass Removal Method was used. #>       Estimate Std. Error #> No 148.2250000 19.0118725 #> p    0.5194805  0.0961208 confint(p4) #>        95% LCI     95% UCI #> No 110.9624147 185.4875853 #> p    0.3310873   0.7078737   ### Test if catchability differs between first sample and the other samples # chi-square test statistic from  negative log-likelihoods #   from Moran and Schnute fits (from above) chi2.val <- 2*(p2$min.nlogLH-p3$min.nlogLH) # p-value ... no significant difference pchisq(chi2.val,df=1,lower.tail=FALSE) #> [1] 0.8882765  # Another LRT example ... sample 1 from Schnute (1983) ct4 <- c(45,11,18,8) p2a <- removal(ct4,method=\"Moran\") p3a <- removal(ct4,method=\"Schnute\") chi2.val <- 2*(p2a$min.nlogLH-p3a$min.nlogLH)  # 4.74 in Schnute(1983) pchisq(chi2.val,df=1,lower.tail=FALSE)         # significant difference (catchability differs) #> [1] 0.02955309 summary(p3a) #>       Estimate #> No 123.5879686 #> p    0.1890032 #> p1   0.3641131   ### Using lapply() to use removal() on many different groups ###   with the removals in a single variable (\"long format\") ## create a dummy data frame lake <- factor(rep(c(\"Ash Tree\",\"Bark\",\"Clay\"),each=5)) year <- factor(rep(c(\"2010\",\"2011\",\"2010\",\"2011\",\"2010\",\"2011\"),times=c(2,3,3,2,2,3))) pass <- factor(c(1,2,1,2,3,1,2,3,1,2,1,2,1,2,3)) catch <- c(57,34,65,34,12,54,26,9,54,27,67,34,68,35,12) d <- data.frame(lake,year,pass,catch)  ## create a variable that indicates each different group d$group <- with(d,interaction(lake,year)) d #>        lake year pass catch         group #> 1  Ash Tree 2010    1    57 Ash Tree.2010 #> 2  Ash Tree 2010    2    34 Ash Tree.2010 #> 3  Ash Tree 2011    1    65 Ash Tree.2011 #> 4  Ash Tree 2011    2    34 Ash Tree.2011 #> 5  Ash Tree 2011    3    12 Ash Tree.2011 #> 6      Bark 2010    1    54     Bark.2010 #> 7      Bark 2010    2    26     Bark.2010 #> 8      Bark 2010    3     9     Bark.2010 #> 9      Bark 2011    1    54     Bark.2011 #> 10     Bark 2011    2    27     Bark.2011 #> 11     Clay 2010    1    67     Clay.2010 #> 12     Clay 2010    2    34     Clay.2010 #> 13     Clay 2011    1    68     Clay.2011 #> 14     Clay 2011    2    35     Clay.2011 #> 15     Clay 2011    3    12     Clay.2011 ## split the catch by the different groups (creates a list of catch vectors) ds <- split(d$catch,d$group) ## apply removal() to each catch vector (i.e., different group) res <- lapply(ds,removal,just.ests=TRUE) res <- data.frame(t(data.frame(res,check.names=FALSE))) ## get rownames from above and split into separate columns nms <- t(data.frame(strsplit(rownames(res),\"\\\\.\"))) attr(nms,\"dimnames\") <- NULL fnl <- data.frame(nms,res) ## put names together with values rownames(fnl) <- NULL colnames(fnl)[1:2] <- c(\"Lake\",\"Year\") fnl #>       Lake Year  No     No.se    No.LCI   No.UCI         p       p.se     p.LCI #> 1 Ash Tree 2010 130 26.108558  78.82817 181.1718 0.4482759 0.12120594 0.2107166 #> 2     Bark 2010  95  4.247687  86.67469 103.3253 0.5894040 0.06418406 0.4636055 #> 3     Clay 2010 130 17.446161  95.80615 164.1938 0.5233161 0.10171976 0.3239490 #> 4 Ash Tree 2011 121  5.771511 109.68805 132.3120 0.5577889 0.06016508 0.4398676 #> 5     Bark 2011 103 14.760527  74.06990 131.9301 0.5328947 0.11173743 0.3138934 #> 6     Clay 2011 125  5.666291 113.89427 136.1057 0.5637255 0.05857289 0.4489247 #>       p.UCI #> 1 0.6858351 #> 2 0.7152024 #> 3 0.7226831 #> 4 0.6757103 #> 5 0.7518961 #> 6 0.6785262   ### Using apply() to use removal() on many different groups ###   with the removals in several variables (\"wide format\") ## create a dummy data frame (just reshaped from above as ## an example; -5 to ignore the group variable from above) d1 <- reshape(d[,-5],timevar=\"pass\",idvar=c(\"lake\",\"year\"),direction=\"wide\") ## apply restore() to each row of only the catch data res1 <- apply(d1[,3:5],MARGIN=1,FUN=removal,method=\"CarleStrub\",just.ests=TRUE) #> Warning: 'NA's removed from 'catch' to continue. #> Warning: 'NA's removed from 'catch' to continue. #> Warning: 'NA's removed from 'catch' to continue. res1 <- data.frame(t(data.frame(res1,check.names=FALSE))) ## add the grouping information to the results fnl1 <- data.frame(d1[,1:2],res1) ## put names together with values rownames(fnl1) <- NULL fnl1 #>       lake year  No     No.se    No.LCI   No.UCI         p       p.se     p.LCI #> 1 Ash Tree 2010 130 26.108558  78.82817 181.1718 0.4482759 0.12120594 0.2107166 #> 2 Ash Tree 2011 121  5.771511 109.68805 132.3120 0.5577889 0.06016508 0.4398676 #> 3     Bark 2010  95  4.247687  86.67469 103.3253 0.5894040 0.06418406 0.4636055 #> 4     Bark 2011 103 14.760527  74.06990 131.9301 0.5328947 0.11173743 0.3138934 #> 5     Clay 2010 130 17.446161  95.80615 164.1938 0.5233161 0.10171976 0.3239490 #> 6     Clay 2011 125  5.666291 113.89427 136.1057 0.5637255 0.05857289 0.4489247 #>       p.UCI #> 1 0.6858351 #> 2 0.6757103 #> 3 0.7152024 #> 4 0.7518961 #> 5 0.7226831 #> 6 0.6785262"},{"path":"https://fishr-core-team.github.io/FSA/reference/repeatedRows2Keep.html","id":null,"dir":"Reference","previous_headings":"","what":"Find non-repeated consecutive rows in a data.frame. — repeatedRows2Keep","title":"Find non-repeated consecutive rows in a data.frame. — repeatedRows2Keep","text":"Finds rows data.frame repeats row immediately .","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/repeatedRows2Keep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find non-repeated consecutive rows in a data.frame. — repeatedRows2Keep","text":"","code":"repeatedRows2Keep(   df,   cols2use = NULL,   cols2ignore = NULL,   keep = c(\"first\", \"last\") )"},{"path":"https://fishr-core-team.github.io/FSA/reference/repeatedRows2Keep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find non-repeated consecutive rows in a data.frame. — repeatedRows2Keep","text":"df data.frame. cols2use string numeric vector indicates columns df use. Negative numeric values use columns. use cols2use col2ignore. cols2ignore string numeric vector indicates columns df ignore. use cols2use col2ignore. keep string indicates whether first (DEFAULT) last row consecutive repeated rows kept.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/repeatedRows2Keep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find non-repeated consecutive rows in a data.frame. — repeatedRows2Keep","text":"single logical indicates rows df keep consecutive rows (columns used) repeated.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/repeatedRows2Keep.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find non-repeated consecutive rows in a data.frame. — repeatedRows2Keep","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/repeatedRows2Keep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find non-repeated consecutive rows in a data.frame. — repeatedRows2Keep","text":"","code":"test1 <- data.frame(ID=1:10,                     KEEP=c(\"First\",\"Last\",\"Both\",\"Both\",\"Both\",                            \"Both\",\"First\",\"Neither\",\"Last\",\"Both\"),                     V1=c(\"a\",\"a\",\"a\",\"B\",\"b\",\"B\",\"A\",\"A\",\"A\",\"a\"),                     V2=c(\"a\",\"a\",\"A\",\"B\",\"B\",\"b\",\"A\",\"A\",\"A\",\"a\")) keepFirst <- repeatedRows2Keep(test1,cols2ignore=1:2) keepLast <- repeatedRows2Keep(test1,cols2use=3:4,keep=\"last\") data.frame(test1,keepFirst,keepLast) #>    ID    KEEP V1 V2 keepFirst keepLast #> 1   1   First  a  a      TRUE    FALSE #> 2   2    Last  a  a     FALSE     TRUE #> 3   3    Both  a  A      TRUE     TRUE #> 4   4    Both  B  B      TRUE     TRUE #> 5   5    Both  b  B      TRUE     TRUE #> 6   6    Both  B  b      TRUE     TRUE #> 7   7   First  A  A      TRUE    FALSE #> 8   8 Neither  A  A     FALSE    FALSE #> 9   9    Last  A  A     FALSE     TRUE #> 10 10    Both  a  a      TRUE     TRUE  droplevels(subset(test1,keepFirst))  # should be all \"First\" or \"Both\" (7 items) #>    ID  KEEP V1 V2 #> 1   1 First  a  a #> 3   3  Both  a  A #> 4   4  Both  B  B #> 5   5  Both  b  B #> 6   6  Both  B  b #> 7   7 First  A  A #> 10 10  Both  a  a droplevels(subset(test1,keepLast))   # should be all \"Last\" or \"Both\" (7 items) #>    ID KEEP V1 V2 #> 2   2 Last  a  a #> 3   3 Both  a  A #> 4   4 Both  B  B #> 5   5 Both  b  B #> 6   6 Both  B  b #> 9   9 Last  A  A #> 10 10 Both  a  a"},{"path":"https://fishr-core-team.github.io/FSA/reference/se.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes standard error of the mean. — se","title":"Computes standard error of the mean. — se","text":"Computes standard error mean (.e., standard deviation divided square root sample size).","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes standard error of the mean. — se","text":"","code":"se(x, na.rm = TRUE)"},{"path":"https://fishr-core-team.github.io/FSA/reference/se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes standard error of the mean. — se","text":"x numeric vector. na.rm logical indicates whether missing values removed computing standard error.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes standard error of the mean. — se","text":"single numeric standard error mean x.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/se.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes standard error of the mean. — se","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes standard error of the mean. — se","text":"","code":"x <- 1:20 sd(x)/sqrt(length(x)) #> [1] 1.322876 se(x) #> [1] 1.322876  # all return NA if missing values are not removed x2 <- c(x,NA) sd(x2)/sqrt(length(x2)) #> [1] NA  # Better if missing values are removed se(x2,na.rm=FALSE) #> [1] NA sd(x2,na.rm=TRUE)/sqrt(length(x2[complete.cases(x2)])) #> [1] 1.322876 se(x2) #> [1] 1.322876"},{"path":"https://fishr-core-team.github.io/FSA/reference/srFuns.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a function for a specific parameterization of a common stock-recruitment function . — srFuns","title":"Creates a function for a specific parameterization of a common stock-recruitment function . — srFuns","text":"Creates function specific parameterization “Beverton-Holt”, “Ricker”,  “Shepherd”, “Saila-Lorda” stock-recruitment function. Use srFunShow() see equations function.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/srFuns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a function for a specific parameterization of a common stock-recruitment function . — srFuns","text":"","code":"srFuns(   type = c(\"BevertonHolt\", \"Ricker\", \"Shepherd\", \"SailaLorda\", \"independence\"),   param = 1,   simple = FALSE,   msg = FALSE )  srFunShow(   type = c(\"BevertonHolt\", \"Ricker\", \"Shepherd\", \"SailaLorda\"),   param = 1,   plot = FALSE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/srFuns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a function for a specific parameterization of a common stock-recruitment function . — srFuns","text":"type string indicates type stock-recruitment function. param single numeric indicates parameterization stock-recruitment function. simple logical indicates whether user allowed send parameter values first parameter argument (=FALSE; default) whether individual parameters must specified (=TRUE). msg logical indicates whether message function parameter definitions output (=TRUE) (=FALSE; default). plot logical indicates whether growth function expression shown equation simple plot. ... implemented.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/srFuns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a function for a specific parameterization of a common stock-recruitment function . — srFuns","text":"srFuns returns function can used predict recruitment given vector stock sizes values function parameters. result saved object can used function name. resulting function used, parameters ordered shown definitions parameters printed function called (assuming msg=TRUE). values /parameters can included vector length two/three first parameter argument. simple=FALSE values parameters can included vector first parameter argument. simple=TRUE parameters must declared individually function. resulting function somewhat easier read simple=TRUE. srFunShow returns expression can use plotmath show function equation pretty format. See examples.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/srFuns.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Creates a function for a specific parameterization of a common stock-recruitment function . — srFuns","text":"13-Recruitment.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/srFuns.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Creates a function for a specific parameterization of a common stock-recruitment function . — srFuns","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Beverton, R.J.H. S.J. Holt. 1957. dynamics exploited fish populations, Fisheries Investigations (Series 2), volume 19. United Kingdom Ministry Agriculture Fisheries, 533 pp. Iles, T.C. 1994. review stock-recruitment relationships reference flatfish populations. Netherlands Journal Sea Research 32:399-420. Quinn II, T.J. R.B. Deriso. 1999. Quantitative Fish Dynamics. Oxford University Press. Ricker, W.E. 1954. Stock recruitment. Journal Fisheries Research Board Canada 11:559-623. Ricker, W.E. 1975. Computation interpretation biological statistics fish populations. Technical Report Bulletin 191, Bulletin Fisheries Research Board Canada. [(?) http://www.dfo-mpo.gc.ca/Library/1485.pdf.] Shepherd, J. 1982. versatile new stock-recruitment relationship fisheries construction sustainable yield curves. Journal du Conseil International pour l'Exploration de la Mar 40:67-75.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/srFuns.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a function for a specific parameterization of a common stock-recruitment function . — srFuns","text":"Derek H. Ogle, DerekOgle51@gmail.com, thanks Gabor Grothendieck hint using get().","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/srFuns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a function for a specific parameterization of a common stock-recruitment function . — srFuns","text":"","code":"## See the formulae ## Simple Examples # show what a message looks like with the function definition srFuns(\"Ricker\",msg=TRUE) #> You have chosen the first parameterization of the 'Ricker' S-R function. #>  #>   E[R|S] = a*S*exp(-b*S) #>  #>   where a = the density-independent slope near S=0. #>         b = density-dependent parameter. #> function (S, a, b = NULL)  #> { #>     if (length(a) > 1) { #>         b <- a[[2]] #>         a <- a[[1]] #>     } #>     a * S * exp(-b * S) #> } #> <bytecode: 0x5568fea7b4f8> #> <environment: 0x55690c1cd2f0>  # create some dummy stock data stock <- seq(0.01,1000,length.out=199)  # Beverton-Holt #1 parameterization ( bh1 <- srFuns() ) #> function (S, a, b = NULL)  #> { #>     if (length(a) > 1) { #>         b <- a[[2]] #>         a <- a[[1]] #>     } #>     a * S/(1 + b * S) #> } #> <bytecode: 0x5568fea81680> #> <environment: 0x55690bfdf168> plot(bh1(stock,a=0.5,b=0.01)~stock,type=\"l\",lwd=2,ylab=\"Recruits\",xlab=\"Spawners\",ylim=c(0,50))  # Ricker #1 parameterization ( r1 <- srFuns(\"Ricker\") ) #> function (S, a, b = NULL)  #> { #>     if (length(a) > 1) { #>         b <- a[[2]] #>         a <- a[[1]] #>     } #>     a * S * exp(-b * S) #> } #> <bytecode: 0x5568fea7b4f8> #> <environment: 0x55690be03a38> lines(r1(stock,a=0.5,b=0.005)~stock,lwd=2,col=\"red\")  # Shephered parameterization ( s1 <- srFuns(\"Shepherd\") ) #> function (S, a, b = NULL, c = NULL)  #> { #>     if (length(a) > 1) { #>         c <- a[[3]] #>         b <- a[[2]] #>         a <- a[[1]] #>     } #>     a * S/(1 + (b * S)^c) #> } #> <bytecode: 0x5568fea74880> #> <environment: 0x55690bca0cf0> lines(s1(stock,a=0.5,b=0.005,c=2.5)~stock,lwd=2,col=\"blue\")  # Saila-Lorda parameterization ( sl1 <- srFuns(\"SailaLorda\") ) #> function (S, a, b = NULL, c = NULL)  #> { #>     if (length(a) > 1) { #>         c <- a[[3]] #>         b <- a[[2]] #>         a <- a[[1]] #>     } #>     a * (S^c) * exp(-b * S) #> } #> <bytecode: 0x5568fea75c30> #> <environment: 0x55690bb2b138> lines(sl1(stock,a=0.5,b=0.005,c=1.05)~stock,lwd=2,col=\"salmon\")   ## Examples of fitting stock-recruitment functions # Fitting the Beverton-Holt #1 parameterization with multiplicative errors bh1s <- srStarts(recruits~stock,data=CodNorwegian) fit1 <- nls(log(recruits)~log(bh1(stock,a,b)),data=CodNorwegian,start=bh1s) summary(fit1,correlation=TRUE) #>  #> Formula: log(recruits) ~ log(bh1(stock, a, b)) #>  #> Parameters: #>   Estimate Std. Error t value Pr(>|t|) #> a  37.3344   132.0165   0.283     0.78 #> b   0.4876     1.8099   0.269     0.79 #>  #> Residual standard error: 0.7486 on 22 degrees of freedom #>  #> Correlation of Parameter Estimates: #>   a    #> b 1.00 #>  #> Number of iterations to convergence: 6  #> Achieved convergence tolerance: 7.501e-06 #>  plot(recruits~stock,data=CodNorwegian,pch=19,xlim=c(0,200)) curve(bh1(x,a=coef(fit1)[1],b=coef(fit1)[2]),from=0,to=200,col=\"red\",lwd=3,add=TRUE)  # Fitting the Ricker #3 parameterization with multiplicative errors r3 <- srFuns(\"Ricker\",param=3) r3s <- srStarts(recruits~stock,data=CodNorwegian,type=\"Ricker\",param=3) fit2 <- nls(log(recruits)~log(r3(stock,a,Rp)),data=CodNorwegian,start=r3s) summary(fit2,correlation=TRUE) #>  #> Formula: log(recruits) ~ log(r3(stock, a, Rp)) #>  #> Parameters: #>    Estimate Std. Error t value Pr(>|t|)     #> a     5.919      1.246   4.751 9.64e-05 *** #> Rp  118.597     16.102   7.365 2.26e-07 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.5866 on 22 degrees of freedom #>  #> Correlation of Parameter Estimates: #>    a    #> Rp 0.89 #>  #> Number of iterations to convergence: 0  #> Achieved convergence tolerance: 1.254e-08 #>  curve(r3(x,a=coef(fit2)[1],Rp=coef(fit2)[2]),from=0,to=200,col=\"blue\",lwd=3,add=TRUE)   ############################################################################# ## Create expressions of the functions ############################################################################# # Simple example srFunShow() #> expression(R == frac(aS, 1 + bS)) srFunShow(plot=TRUE) #> expression(R == frac(aS, 1 + bS)) srFunShow(\"BevertonHolt\",1,plot=TRUE)  #> expression(R == frac(aS, 1 + bS))  # Get and save the expression ( tmp <- srFunShow(\"BevertonHolt\",1) ) #> expression(R == frac(aS, 1 + bS)) # Use expression as title on a plot plot(bh1(stock,a=0.5,b=0.01)~stock,type=\"l\",ylim=c(0,50),      ylab=\"Recruits\",xlab=\"Spawners\",main=tmp) # Put expression in the main plot text(800,10,tmp)  # Put multiple expressions on a plot op <- par(mar=c(0.1,0.1,0.1,0.1)) plot(0,type=\"n\",xlab=\"\",ylab=\"\",xlim=c(0,1),ylim=c(0,3),xaxt=\"n\",yaxt=\"n\") text(0,2.5,\"Beverton-Holt #1:\",pos=4) text(0.5,2.5,srFunShow(\"BevertonHolt\",1)) text(0,1.5,\"Ricker #2:\",pos=4) text(0.5,1.5,srFunShow(\"Ricker\",2)) text(0,0.5,\"Shepherd:\",pos=4) text(0.5,0.5,srFunShow(\"Shepherd\"))  par(op)"},{"path":"https://fishr-core-team.github.io/FSA/reference/srStarts.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds reasonable starting values for parameters in specific parameterizations of common stock-recruitment models. — srStarts","title":"Finds reasonable starting values for parameters in specific parameterizations of common stock-recruitment models. — srStarts","text":"Finds reasonable starting values parameters specific parameterizations “Beverton-Holt”, “Ricker”,  “Shepherd”, “Saila-Lorda” stock-recruitment models. Use srFunShow() see equations model.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/srStarts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds reasonable starting values for parameters in specific parameterizations of common stock-recruitment models. — srStarts","text":"","code":"srStarts(   formula,   data = NULL,   type = c(\"BevertonHolt\", \"Ricker\", \"Shepherd\", \"SailaLorda\", \"independence\"),   param = 1,   fixed = NULL,   plot = FALSE,   col.mdl = \"gray70\",   lwd.mdl = 3,   lty.mdl = 1,   cex.main = 0.9,   col.main = \"red\",   dynamicPlot = FALSE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/srStarts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds reasonable starting values for parameters in specific parameterizations of common stock-recruitment models. — srStarts","text":"formula formula form Recruits~Stock. data data frame Recruits Stock found. type string indicates type stock-recruitment model. Must one \"BevertonHolt\", \"Ricker\", \"Shepherd\", \"SailaLorda\". param numeric indicates parameterization stock-recruitment model type. ignored type=\"Shepherd\" type=\"SailaLorda\" fixed named list contains user-defined rather automatically generated (.e., fixed) starting values one parameters. See details. plot logical indicates whether plot data model fit starting values superimposed created. col.mdl color model plot=TRUE. lwd.mdl line width model plot=TRUE. lty.mdl line type model plot=TRUE. cex.main character expansion value main title plot=TRUE. col.main color main title plot=TRUE. dynamicPlot DEPRECATED. ... arguments passed methods.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/srStarts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds reasonable starting values for parameters in specific parameterizations of common stock-recruitment models. — srStarts","text":"list contains reasonable starting values. Note parameters listed order names listed srFuns.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/srStarts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Finds reasonable starting values for parameters in specific parameterizations of common stock-recruitment models. — srStarts","text":"function attempts find reasonable starting values variety parameterizations “Beverton-Holt”, “Ricker”,  “Shepherd”, “Saila-Lorda” stock-recruitment models. guarantee starting values ‘best’ starting values. One use caution perform sensitivity analyses determine impact different starting values final model results. Starting values first parameterization Beverton-Holt model derived linearizing function (inverting sides simplifying), fitting linear model observed data, extracting parameter values corresponding linear model parameters. Starting values parameterizations Beverton-Holt model derived known relationships parameters parameterization first parameterization. computed starting value Rp parameter larger largest observed recruitment value, starting value Rp set largest observed recruitment value. Starting values Shepherd function first parameterization Beverton-Holt function addition c=1. Starting values Ricker parameterizations followed general procedure described Beverton-Holt parameterizations. computed starting value atilde less zero starting value set 0.00001. Starting values Saila-Lorda function first parameterization Ricker function addition c=1.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/srStarts.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Finds reasonable starting values for parameters in specific parameterizations of common stock-recruitment models. — srStarts","text":"13-Recruitment.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/srStarts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Finds reasonable starting values for parameters in specific parameterizations of common stock-recruitment models. — srStarts","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. Beverton, R.J.H. S.J. Holt. 1957. dynamics exploited fish populations, Fisheries Investigations (Series 2), volume 19. United Kingdom Ministry Agriculture Fisheries, 533 pp. Iles, T.C. 1994. review stock-recruitment relationships reference flatfish populations. Netherlands Journal Sea Research 32:399-420. Quinn II, T.J. R.B. Deriso. 1999. Quantitative Fish Dynamics. Oxford University Press. Ricker, W.E. 1954. Stock recruitment. Journal Fisheries Research Board Canada 11:559-623. Ricker, W.E. 1975. Computation interpretation biological statistics fish populations. Technical Report Bulletin 191, Bulletin Fisheries Research Board Canada. [(?) http://www.dfo-mpo.gc.ca/Library/1485.pdf.] Shepherd, J. 1982. versatile new stock-recruitment relationship fisheries construction sustainable yield curves. Journal du Conseil International pour l'Exploration de la Mar 40:67-75.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/srStarts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finds reasonable starting values for parameters in specific parameterizations of common stock-recruitment models. — srStarts","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/srStarts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds reasonable starting values for parameters in specific parameterizations of common stock-recruitment models. — srStarts","text":"","code":"## Simple Examples srStarts(recruits~stock,data=CodNorwegian) #> $a #> [1] 6.040326 #>  #> $b #> [1] 0.08789475 #>  srStarts(recruits~stock,data=CodNorwegian,param=2) #> $a #> [1] 6.040326 #>  #> $Rp #> [1] 68.72227 #>  srStarts(recruits~stock,data=CodNorwegian,param=3) #> $a #> [1] 0.165554 #>  #> $b #> [1] 0.01455132 #>  srStarts(recruits~stock,data=CodNorwegian,param=4) #> $a #> [1] 0.165554 #>  #> $Rp #> [1] 68.72227 #>  srStarts(recruits~stock,data=CodNorwegian,type=\"Ricker\") #> $a #> [1] 5.919256 #>  #> $b #> [1] 0.01836117 #>  srStarts(recruits~stock,data=CodNorwegian,type=\"Ricker\",param=2) #> $a #> [1] 1.778211 #>  #> $b #> [1] 0.01836117 #>  srStarts(recruits~stock,data=CodNorwegian,type=\"Ricker\",param=3) #> $a #> [1] 5.919256 #>  #> $Rp #> [1] 118.5966 #>  srStarts(recruits~stock,data=CodNorwegian,type=\"Shepherd\") #> $a #> [1] 6.040326 #>  #> $b #> [1] 0.08789475 #>  #> $c #> [1] 1 #>  srStarts(recruits~stock,data=CodNorwegian,type=\"SailaLorda\") #> $a #> [1] 5.919256 #>  #> $b #> [1] 0.01836117 #>  #> $c #> [1] 1 #>  srStarts(recruits~stock,data=CodNorwegian,type=\"independence\") #> $a #> [1] 0.630291 #>   ## Simple Examples with a Plot srStarts(recruits~stock,data=CodNorwegian,type=\"Ricker\",plot=TRUE)  #> $a #> [1] 5.919256 #>  #> $b #> [1] 0.01836117 #>  srStarts(recruits~stock,data=CodNorwegian,type=\"BevertonHolt\",plot=TRUE)  #> $a #> [1] 6.040326 #>  #> $b #> [1] 0.08789475 #>  srStarts(recruits~stock,data=CodNorwegian,type=\"Shepherd\",plot=TRUE)  #> $a #> [1] 6.040326 #>  #> $b #> [1] 0.08789475 #>  #> $c #> [1] 1 #>  srStarts(recruits~stock,data=CodNorwegian,type=\"SailaLorda\",plot=TRUE)  #> $a #> [1] 5.919256 #>  #> $b #> [1] 0.01836117 #>  #> $c #> [1] 1 #>  srStarts(recruits~stock,data=CodNorwegian,type=\"independence\",plot=TRUE)  #> $a #> [1] 0.630291 #>   ## See examples in srFuns() for use of srStarts() when fitting stock-recruit models"},{"path":"https://fishr-core-team.github.io/FSA/reference/sumTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a one- or two-way table of summary statistics. — sumTable","title":"Creates a one- or two-way table of summary statistics. — sumTable","text":"Creates one- two-way table summary statistics quantitative variable.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/sumTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a one- or two-way table of summary statistics. — sumTable","text":"","code":"sumTable(formula, ...)  # S3 method for formula sumTable(formula, data = NULL, FUN = mean, digits = getOption(\"digits\"), ...)"},{"path":"https://fishr-core-team.github.io/FSA/reference/sumTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a one- or two-way table of summary statistics. — sumTable","text":"formula formula quantitative variable left-hand-side one two factor variables right-hand-side. See details. ... arguments pass FUN. data optional data frame contains variables formula. FUN scalar function identifies summary statistics. Applied quantitative variable data subsets identified combination factor(s). Defaults mean. digits single numeric indicates number digits used result.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/sumTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a one- or two-way table of summary statistics. — sumTable","text":"one-way array values one factor variable supplied right-hand-side formula. two-way matrix values two factor variables supplied right-hand-side formula. classes objects returned tapply.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/sumTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a one- or two-way table of summary statistics. — sumTable","text":"formula must form quantitative~factor quantitative~factor*factor2 quantitative quantitative variable construct summaries factor factor2 factor variables contain levels separate summaries constructed. variables right-hand-side factors, coerced factors warning issued. function largely wrapper tapply(), works one quantitative variable left-hand-side one two factor variables right-hand-side. Consider using tapply situations factors right-hand-side.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/sumTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a one- or two-way table of summary statistics. — sumTable","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/sumTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a one- or two-way table of summary statistics. — sumTable","text":"","code":"## The same examples as in the old aggregate.table in gdata package ## but data in data.frame to illustrate formula notation d <- data.frame(g1=sample(letters[1:5], 1000, replace=TRUE),                 g2=sample(LETTERS[1:3], 1000, replace=TRUE),                 dat=rnorm(1000))  sumTable(dat~g1*g2,data=d,FUN=length)       # get sample size #> Warning: First RHS variable was converted to a factor. #> Warning: Second RHS variable was converted to a factor. #>    A  B  C #> a 73 67 59 #> b 71 70 64 #> c 67 72 70 #> d 66 56 65 #> e 56 73 71 sumTable(dat~g1*g2,data=d,FUN=validn)       # get sample size (better way) #> Warning: First RHS variable was converted to a factor. #> Warning: Second RHS variable was converted to a factor. #>    A  B  C #> a 73 67 59 #> b 71 70 64 #> c 67 72 70 #> d 66 56 65 #> e 56 73 71 sumTable(dat~g1*g2,data=d,FUN=mean)         # get mean #> Warning: First RHS variable was converted to a factor. #> Warning: Second RHS variable was converted to a factor. #>            A          B          C #> a  0.0821087  0.0372090  0.0204970 #> b -0.1646688 -0.1809234  0.0716924 #> c  0.0582100  0.0470679  0.0880142 #> d -0.0608258 -0.0688797  0.1181317 #> e  0.0678168  0.0245884 -0.1041628 sumTable(dat~g1*g2,data=d,FUN=sd)           # get sd #> Warning: First RHS variable was converted to a factor. #> Warning: Second RHS variable was converted to a factor. #>           A         B         C #> a 0.8969377 0.9308896 1.0627889 #> b 1.0648330 0.9646597 0.9066040 #> c 1.0624400 1.0027871 1.0061691 #> d 0.9059574 1.0125741 0.8656674 #> e 1.1076446 0.9818268 1.0423718 sumTable(dat~g1*g2,data=d,FUN=sd,digits=1)  # show digits= argument #> Warning: First RHS variable was converted to a factor. #> Warning: Second RHS variable was converted to a factor. #>     A   B   C #> a 0.9 0.9 1.1 #> b 1.1 1.0 0.9 #> c 1.1 1.0 1.0 #> d 0.9 1.0 0.9 #> e 1.1 1.0 1.0  ## Also demonstrate use in the 1-way example -- but see Summarize() sumTable(dat~g1,data=d,FUN=validn) #> Warning: RHS variable was converted to a factor. #>   a   b   c   d   e  #> 199 205 209 187 200  sumTable(dat~g1,data=d,FUN=mean) #> Warning: RHS variable was converted to a factor. #>          a          b          c          d          e  #>  0.0487249 -0.0964283  0.0643538 -0.0010332 -0.0090143   ## Example with a missing value (compare to above) d$dat[1] <- NA sumTable(dat~g1,data=d,FUN=validn)  # note use of validn #> Warning: RHS variable was converted to a factor. #>   a   b   c   d   e  #> 199 204 209 187 200  sumTable(dat~g1,data=d,FUN=mean,na.rm=TRUE) #> Warning: RHS variable was converted to a factor. #>          a          b          c          d          e  #>  0.0487249 -0.0973921  0.0643538 -0.0010332 -0.0090143"},{"path":"https://fishr-core-team.github.io/FSA/reference/tictactoe.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a base tic-tac-toe plot for presenting predator-prey PSD values. — tictactoe","title":"Construct a base tic-tac-toe plot for presenting predator-prey PSD values. — tictactoe","text":"Construct base tic-tac-toe plot presenting predator-prey PSD values. Predator-prey PSD values added plotCI plotrix.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/tictactoe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a base tic-tac-toe plot for presenting predator-prey PSD values. — tictactoe","text":"","code":"tictactoe(   predobj = c(30, 70),   preyobj = c(30, 70),   predlab = \"Predator PSD\",   preylab = \"Prey PSD\",   obj.col = \"black\",   obj.trans = 0.2,   bnd.col = \"black\",   bnd.lwd = 1,   bnd.lty = 2 )"},{"path":"https://fishr-core-team.github.io/FSA/reference/tictactoe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a base tic-tac-toe plot for presenting predator-prey PSD values. — tictactoe","text":"predobj vector length 2 contains target objective range predator. preyobj vector length 2 contains target objective range prey. predlab string representing label x-axis. preylab string representing label y-axis. obj.col string designating color target objective regions shaded. obj.trans numeric (decimal) indicates level transparency marking target objective regions. bnd.col string indicates color boundaries target objective regions. bnd.lwd numeric indicates line width boundaries target objective regions. bnd.lty numeric indicates line type boundaries target objective regions.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/tictactoe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a base tic-tac-toe plot for presenting predator-prey PSD values. — tictactoe","text":"None. However, graphic produced.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/tictactoe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a base tic-tac-toe plot for presenting predator-prey PSD values. — tictactoe","text":"function simply creates base tic-tac-toe plot. Observed values, confidence intervals, added plot plotCI plotrix; see examples.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/tictactoe.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Construct a base tic-tac-toe plot for presenting predator-prey PSD values. — tictactoe","text":"6-Size Structure.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/tictactoe.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Construct a base tic-tac-toe plot for presenting predator-prey PSD values. — tictactoe","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/tictactoe.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Construct a base tic-tac-toe plot for presenting predator-prey PSD values. — tictactoe","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/tictactoe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a base tic-tac-toe plot for presenting predator-prey PSD values. — tictactoe","text":"","code":"## Create hypothetical data for plotting one point .. similar to what might come from psdCalc() prey <- c(45.4,30.2,56.8) pred <- c(24.5,10.2,36.7) names(prey) <- names(pred) <- c(\"Estimate\",\"95% LCI\",\"95% UCI\") prey #> Estimate  95% LCI  95% UCI  #>     45.4     30.2     56.8  pred #> Estimate  95% LCI  95% UCI  #>     24.5     10.2     36.7   tictactoe() if (require(plotrix)) {   plotCI(prey[1],pred[1],li=prey[2],ui=prey[3],err=\"x\",pch=16,add=TRUE)   plotCI(prey[1],pred[1],li=pred[2],ui=pred[3],err=\"y\",pch=16,add=TRUE)  } #> Loading required package: plotrix   ## Create hypothetical data for plotting three points ... similar to what might come from psdCalc() prey <- rbind(c(45.4,30.2,56.8),               c(68.2,56.7,79.4),               c(17.1, 9.5,26.3)) pred <- rbind(c(24.5,10.2,36.7),               c(14.2, 7.1,21.3),               c(16.3, 8.2,24.4)) colnames(prey) <- colnames(pred) <- c(\"Estimate\",\"95% LCI\",\"95% UCI\") prey #>      Estimate 95% LCI 95% UCI #> [1,]     45.4    30.2    56.8 #> [2,]     68.2    56.7    79.4 #> [3,]     17.1     9.5    26.3 pred #>      Estimate 95% LCI 95% UCI #> [1,]     24.5    10.2    36.7 #> [2,]     14.2     7.1    21.3 #> [3,]     16.3     8.2    24.4  tictactoe() if (require(plotrix)) {   plotCI(prey[,1],pred[,1],li=prey[,2],ui=prey[,3],err=\"x\",pch=16,add=TRUE)   plotCI(prey[,1],pred[,1],li=pred[,2],ui=pred[,3],err=\"y\",pch=16,add=TRUE) } lines(prey[,1],pred[,1]) text(prey[,1],pred[,1],labels=c(2010,2011,2012),adj=c(-0.5,-0.5))"},{"path":"https://fishr-core-team.github.io/FSA/reference/validn.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds the number of valid (non-NA) values in a vector. — validn","title":"Finds the number of valid (non-NA) values in a vector. — validn","text":"Finds number valid (non-NA) values vector.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/validn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds the number of valid (non-NA) values in a vector. — validn","text":"","code":"validn(object)"},{"path":"https://fishr-core-team.github.io/FSA/reference/validn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds the number of valid (non-NA) values in a vector. — validn","text":"object vector.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/validn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds the number of valid (non-NA) values in a vector. — validn","text":"single numeric value number non-NA values vector.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/validn.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Finds the number of valid (non-NA) values in a vector. — validn","text":"2-Basic Data Manipulations.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/validn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finds the number of valid (non-NA) values in a vector. — validn","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/validn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds the number of valid (non-NA) values in a vector. — validn","text":"","code":"junk1 <- c(1,7,2,4,3,10,NA) junk2 <- c(\"Derek\",\"Hugh\",\"Ogle\",\"Santa\",\"Claus\",\"Nick\",NA,NA) junk3 <- factor(junk2) junk4 <- c(TRUE,TRUE,FALSE,FALSE,FALSE,TRUE,NA,NA) junk5 <- data.frame(junk1) junk6 <- data.frame(junk3)  validn(junk1) #> [1] 6 validn(junk2) #> [1] 6 validn(junk3) #> [1] 6 validn(junk4) #> [1] 6 validn(junk5) #> [1] 6 validn(junk6) #> [1] 6"},{"path":"https://fishr-core-team.github.io/FSA/reference/vbStarts.html","id":null,"dir":"Reference","previous_headings":"","what":"Find reasonable starting values for a von Bertalanffy growth function. — vbStarts","title":"Find reasonable starting values for a von Bertalanffy growth function. — vbStarts","text":"Finds reasonable starting values parameters specific parameterization von Bertalanffy growth function.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/vbStarts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find reasonable starting values for a von Bertalanffy growth function. — vbStarts","text":"","code":"vbStarts(   formula,   data = NULL,   param = c(\"Typical\", \"typical\", \"Traditional\", \"traditional\", \"BevertonHolt\",     \"Original\", \"original\", \"vonBertalanffy\", \"GQ\", \"GallucciQuinn\", \"Mooij\", \"Weisberg\",     \"Ogle\", \"Schnute\", \"Francis\", \"Somers\", \"Somers2\", \"Pauly\"),   type = param,   fixed = NULL,   meth0 = c(\"yngAge\", \"poly\"),   methLinf = c(\"Walford\", \"oldAge\", \"longFish\"),   num4Linf = 1,   ages2use = NULL,   methEV = c(\"means\", \"poly\"),   valOgle = NULL,   plot = FALSE,   col.mdl = \"gray70\",   lwd.mdl = 3,   lty.mdl = 1,   cex.main = 0.9,   col.main = \"red\",   dynamicPlot = FALSE,   ... )"},{"path":"https://fishr-core-team.github.io/FSA/reference/vbStarts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find reasonable starting values for a von Bertalanffy growth function. — vbStarts","text":"formula formula form len~age. data data frame contains variables formula. type, param string indicates parameterization von Bertalanffy model. fixed named list contains user-defined rather automatically generated (.e., fixed) starting values one parameters. See details. meth0 string indicates t0 L0 parameters derived. See details. methLinf string indicates Linf derived. See details. num4Linf single numeric indicates many longest fish (methLinf=\"longFish\") oldest ages (methLinf=\"oldAge\") averaged estimate starting value Linf. ages2use numerical vector two ages used Schnute Francis parameterizations. See details. methEV string indicates lengths two ages Schnute parameterization three ages Francis parameterization derived. See details. valOgle single named numeric set Lr tr value use type=\"Ogle\". See details. plot logical indicates whether plot data superimposed model fit starting values created. col.mdl color model plot=TRUE. lwd.mdl line width model plot=TRUE. lty.mdl line type model plot=TRUE. cex.main character expansion value main title plot=TRUE. col.main color main title plot=TRUE. dynamicPlot DEPRECATED. ... arguments passed methods.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/vbStarts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find reasonable starting values for a von Bertalanffy growth function. — vbStarts","text":"list contains reasonable starting values. Note parameters listed order names listed vbFuns.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/vbStarts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find reasonable starting values for a von Bertalanffy growth function. — vbStarts","text":"function attempts find reasonable starting values variety parameterizations von Bertalanffy growth function. guarantee starting values ‘best’ starting values. One use caution perform sensitivity analyses determine impact different starting values final model results. methLinf=\"Walford\", Linf K parameters estimated via concept Ford-Walford plot. methLinf=\"oldAge\" Linf estimated mean length num4Linf longest observed lengths. product starting values Linf K used starting value omega GallucciQuinn Mooij parameterizations. result log(2) divided starting value K used starting value t50 Weisberg parameterization. meth0=\"yngAge\", starting value t0 L0 found algebraically solving typical original parameterization, respectively, t0 L0 using mean length first age one data point “known” quantity. meth0=\"poly\" second-degree polynomial model fit mean length--age data. t0 starting value set equal root polynomial closest zero. L0 starting value set equal mean length age-0 predicted polynomial function. Starting values L1 L3 parameters Schnute parameterization L1, L2, L3 parameters Francis parameterization may found two ways. methEV=\"poly\", starting values predicted length--age second-degree polynomial fit mean lengths--age data. methEV=\"means\" observed sample means corresponding ages used. case one supplied ages fractional, value returned linearly interpolated mean lengths two closest ages. ages used L1 L3 Schnute Francis parameterizations supplied numeric vector length 2 ages2use=. ages2use=NULL minimum maximum observed ages used. Francis method, L2 correspond age half-way two ages ages2use=. warning given L2<L1 Schnute method L2<L1 L3<L2 Francis method. Starting values Somers Pauly parameterizations traditional parameterization Linf, K, t0. However, Pauly parameterization starting value Kpr starting value K divided 1 minus starting value NGT. starting values C, ts, WP, NGT set constants unlikely work species. Thus, user use fixed argument fix starting values parameters likely result reliable fit.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/vbStarts.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find reasonable starting values for a von Bertalanffy growth function. — vbStarts","text":"‘original’ ‘vonBertalanffy’ ‘typical’ ‘BevertonHolt’ parameterizations synonymous.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/vbStarts.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Find reasonable starting values for a von Bertalanffy growth function. — vbStarts","text":"12-Individual Growth.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/vbStarts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find reasonable starting values for a von Bertalanffy growth function. — vbStarts","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL. See references vbFuns.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/vbStarts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find reasonable starting values for a von Bertalanffy growth function. — vbStarts","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/vbStarts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find reasonable starting values for a von Bertalanffy growth function. — vbStarts","text":"","code":"## Simple examples of each parameterization vbStarts(tl~age,data=SpotVA1) #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.124367 #>  vbStarts(tl~age,data=SpotVA1,type=\"Original\") #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $L0 #> [1] 7.732 #>  vbStarts(tl~age,data=SpotVA1,type=\"GQ\") #> $omega #> [1] 5.459258 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.124367 #>  vbStarts(tl~age,data=SpotVA1,type=\"Mooij\") #> $Linf #> [1] 13.26773 #>  #> $L0 #> [1] 7.732 #>  #> $omega #> [1] 5.459258 #>  vbStarts(tl~age,data=SpotVA1,type=\"Weisberg\") #> $Linf #> [1] 13.26773 #>  #> $t50 #> [1] -0.4397993 #>  #> $t0 #> [1] -2.124367 #>  vbStarts(tl~age,data=SpotVA1,type=\"Francis\",ages2use=c(0,5)) #> $L1 #> [1] 7.732 #>  #> $L2 #> [1] 11.60785 #>  #> $L3 #> [1] 12.4 #>  vbStarts(tl~age,data=SpotVA1,type=\"Schnute\",ages2use=c(0,5)) #> $L1 #> [1] 7.732 #>  #> $L3 #> [1] 12.4 #>  #> $K #> [1] 0.4114688 #>  vbStarts(tl~age,data=SpotVA1,type=\"Somers\") #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.124367 #>  #> $C #> [1] 0.5 #>  #> $ts #> [1] 0.3 #>  vbStarts(tl~age,data=SpotVA1,type=\"Somers2\") #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.124367 #>  #> $C #> [1] 0.5 #>  #> $WP #> [1] 0.8 #>  vbStarts(tl~age,data=SpotVA1,type=\"Pauly\") #> $Linf #> [1] 13.26773 #>  #> $Kpr #> [1] 0.5878125 #>  #> $t0 #> [1] -2.124367 #>  #> $ts #> [1] 0.3 #>  #> $NGT #> [1] 0.3 #>  vbStarts(tl~age,data=SpotVA1,type=\"Ogle\",valOgle=c(tr=0)) #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $Lr #> [1] 7.274961 #>  vbStarts(tl~age,data=SpotVA1,type=\"Ogle\",valOgle=c(Lr=8)) #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $tr #> [1] 0.7521688 #>   ## Using a different method to find Linf vbStarts(tl~age,data=SpotVA1,methLinf=\"oldAge\") #> $Linf #> [1] 12.4 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.374338 #>  vbStarts(tl~age,data=SpotVA1,methLinf=\"oldAge\",num4Linf=2) #> $Linf #> [1] 12.40625 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.37231 #>  vbStarts(tl~age,data=SpotVA1,methLinf=\"longFish\") #> $Linf #> [1] 13.9 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -1.974668 #>  vbStarts(tl~age,data=SpotVA1,methLinf=\"longFish\",num4Linf=10) #> $Linf #> [1] 13.64 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.033445 #>  vbStarts(tl~age,data=SpotVA1,type=\"Original\",methLinf=\"oldAge\") #> $Linf #> [1] 12.4 #>  #> $K #> [1] 0.4114688 #>  #> $L0 #> [1] 7.732 #>  vbStarts(tl~age,data=SpotVA1,type=\"Original\",methLinf=\"oldAge\",num4Linf=2) #> $Linf #> [1] 12.40625 #>  #> $K #> [1] 0.4114688 #>  #> $L0 #> [1] 7.732 #>  vbStarts(tl~age,data=SpotVA1,type=\"Original\",methLinf=\"longFish\") #> $Linf #> [1] 13.9 #>  #> $K #> [1] 0.4114688 #>  #> $L0 #> [1] 7.732 #>  vbStarts(tl~age,data=SpotVA1,type=\"Original\",methLinf=\"longFish\",num4Linf=10) #> $Linf #> [1] 13.64 #>  #> $K #> [1] 0.4114688 #>  #> $L0 #> [1] 7.732 #>  vbStarts(tl~age,data=SpotVA1,type=\"Ogle\",valOgle=c(tr=0),methLinf=\"oldAge\",num4Linf=2) #> $Linf #> [1] 12.40625 #>  #> $K #> [1] 0.4114688 #>  #> $Lr #> [1] 7.274961 #>  vbStarts(tl~age,data=SpotVA1,type=\"Ogle\",valOgle=c(Lr=8),methLinf=\"longFish\",num4Linf=10) #> $Linf #> [1] 13.64 #>  #> $K #> [1] 0.4114688 #>  #> $tr #> [1] 0.7521688 #>   ## Using a different method to find t0 and L0 vbStarts(tl~age,data=SpotVA1,meth0=\"yngAge\") #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.124367 #>  vbStarts(tl~age,data=SpotVA1,type=\"original\",meth0=\"yngAge\") #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $L0 #> [1] 7.732 #>   ## Using a different method to find the L1, L2, and L3 vbStarts(tl~age,data=SpotVA1,type=\"Francis\",ages2use=c(0,5),methEV=\"means\") #> $L1 #> [1] 7.732 #>  #> $L2 #> [1] 11.60785 #>  #> $L3 #> [1] 12.4 #>  vbStarts(tl~age,data=SpotVA1,type=\"Schnute\",ages2use=c(0,5),methEV=\"means\") #> $L1 #> [1] 7.732 #>  #> $L3 #> [1] 12.4 #>  #> $K #> [1] 0.4114688 #>   ## Examples with a Plot vbStarts(tl~age,data=SpotVA1,plot=TRUE)  #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.124367 #>  vbStarts(tl~age,data=SpotVA1,type=\"original\",plot=TRUE)  #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $L0 #> [1] 7.732 #>  vbStarts(tl~age,data=SpotVA1,type=\"GQ\",plot=TRUE)  #> $omega #> [1] 5.459258 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.124367 #>  vbStarts(tl~age,data=SpotVA1,type=\"Mooij\",plot=TRUE)  #> $Linf #> [1] 13.26773 #>  #> $L0 #> [1] 7.732 #>  #> $omega #> [1] 5.459258 #>  vbStarts(tl~age,data=SpotVA1,type=\"Weisberg\",plot=TRUE)  #> $Linf #> [1] 13.26773 #>  #> $t50 #> [1] -0.4397993 #>  #> $t0 #> [1] -2.124367 #>  vbStarts(tl~age,data=SpotVA1,type=\"Francis\",ages2use=c(0,5),plot=TRUE)  #> $L1 #> [1] 7.732 #>  #> $L2 #> [1] 11.60785 #>  #> $L3 #> [1] 12.4 #>  vbStarts(tl~age,data=SpotVA1,type=\"Schnute\",ages2use=c(0,5),plot=TRUE)  #> $L1 #> [1] 7.732 #>  #> $L3 #> [1] 12.4 #>  #> $K #> [1] 0.4114688 #>  vbStarts(tl~age,data=SpotVA1,type=\"Somers\",plot=TRUE)  #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.124367 #>  #> $C #> [1] 0.5 #>  #> $ts #> [1] 0.3 #>  vbStarts(tl~age,data=SpotVA1,type=\"Somers2\",plot=TRUE)  #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -2.124367 #>  #> $C #> [1] 0.5 #>  #> $WP #> [1] 0.8 #>  vbStarts(tl~age,data=SpotVA1,type=\"Pauly\",plot=TRUE)  #> $Linf #> [1] 13.26773 #>  #> $Kpr #> [1] 0.5878125 #>  #> $t0 #> [1] -2.124367 #>  #> $ts #> [1] 0.3 #>  #> $NGT #> [1] 0.3 #>  vbStarts(tl~age,data=SpotVA1,type=\"Ogle\",valOgle=c(tr=0),plot=TRUE)  #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $Lr #> [1] 7.274961 #>  vbStarts(tl~age,data=SpotVA1,type=\"Ogle\",valOgle=c(Lr=8),plot=TRUE)  #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $tr #> [1] 0.7521688 #>   ## Examples where some parameters are fixed by the user vbStarts(tl~age,data=SpotVA1,fixed=list(Linf=15)) #> $Linf #> [1] 15 #>  #> $K #> [1] 0.4114688 #>  #> $t0 #> [1] -1.760933 #>  vbStarts(tl~age,data=SpotVA1,fixed=list(Linf=15,K=0.3)) #> $Linf #> [1] 15 #>  #> $K #> [1] 0.3 #>  #> $t0 #> [1] -2.41523 #>  vbStarts(tl~age,data=SpotVA1,fixed=list(Linf=15,K=0.3,t0=-1)) #> $Linf #> [1] 15 #>  #> $K #> [1] 0.3 #>  #> $t0 #> [1] -1 #>  vbStarts(tl~age,data=SpotVA1,fixed=list(Linf=15,K=0.3,t0=-1),plot=TRUE)  #> $Linf #> [1] 15 #>  #> $K #> [1] 0.3 #>  #> $t0 #> [1] -1 #>  vbStarts(tl~age,data=SpotVA1,type=\"Pauly\",fixed=list(t0=-1.5),plot=TRUE)  #> $Linf #> [1] 13.26773 #>  #> $Kpr #> [1] 0.5878125 #>  #> $t0 #> [1] -1.5 #>  #> $ts #> [1] 0.3 #>  #> $NGT #> [1] 0.3 #>  vbStarts(tl~age,data=SpotVA1,type=\"Ogle\",valOgle=c(tr=2),fixed=list(Lr=10),plot=TRUE)  #> $Linf #> [1] 13.26773 #>  #> $K #> [1] 0.4114688 #>  #> $Lr #> [1] 10 #>   ## See examples in vbFuns() for use of vbStarts() when fitting Von B models"},{"path":"https://fishr-core-team.github.io/FSA/reference/wrAdd.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes a vector of relative weights specific to a species in an entire data frame. — wrAdd","title":"Computes a vector of relative weights specific to a species in an entire data frame. — wrAdd","text":"computes vector contains relative weight specific species individuals entire data frame.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wrAdd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes a vector of relative weights specific to a species in an entire data frame. — wrAdd","text":"","code":"wrAdd(wt, ...)  # S3 method for default wrAdd(wt, len, spec, units = c(\"metric\", \"English\"), ...)  # S3 method for formula wrAdd(wt, data, units = c(\"metric\", \"English\"), ...)"},{"path":"https://fishr-core-team.github.io/FSA/reference/wrAdd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes a vector of relative weights specific to a species in an entire data frame. — wrAdd","text":"wt numeric vector contains weight measurements formula form wt~len+spec “wt” generically represents weight variable, “len” generically represents length variable, “spec” generically represents species variable. Note formula can contain three variables must order weight first, length second, species third. ... used. len numeric vector contains length measurements. used wt formula. spec character factor vector contains species names. used wt formula. units string indicates whether weight length data formula (\"metric\" (DEFAULT; mm g) \"English\" (lbs) units. data data.frame minimally contains variables observed lengths, observed weights, species names given formula=.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wrAdd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes a vector of relative weights specific to a species in an entire data frame. — wrAdd","text":"Returns numeric vector contains computed relative weights, order data=.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wrAdd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes a vector of relative weights specific to a species in an entire data frame. — wrAdd","text":"computes vector contains relative weight specific species individuals entire data frame. vector can appended existing data.frame create variable contains relative weights individual. relative weight value NA individual standard weight equation exist WSlit, standard weight equation units given units= exist WSlit, standard weight equation 75th percentile exist WSlit, individual shorter longer lengths standard weight equation applied. Either linear quadratic equation listed preferred species, equation used. use 75th percentile far common , function designed use entire data frames, percentile allowed. Thus, use equations percentiles, one use “manual” methods. See WSlit wsVal details types equations, percentiles, finding species published standard weight equations, etc. See examples one method changing species names something function recognize.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wrAdd.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Computes a vector of relative weights specific to a species in an entire data frame. — wrAdd","text":"8-Condition.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wrAdd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes a vector of relative weights specific to a species in an entire data frame. — wrAdd","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/wrAdd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes a vector of relative weights specific to a species in an entire data frame. — wrAdd","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wrAdd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes a vector of relative weights specific to a species in an entire data frame. — wrAdd","text":"","code":"## Create random data for three species # just to control the randomization set.seed(345234534) dbt <- data.frame(species=factor(rep(c(\"Bluefin Tuna\"),30)),                   tl=round(rnorm(30,1900,300),0)) dbt$wt <- round(4.5e-05*dbt$tl^2.8+rnorm(30,0,6000),1) dbg <- data.frame(species=factor(rep(c(\"Bluegill\"),30)),                   tl=round(rnorm(30,130,50),0)) dbg$wt <- round(4.23e-06*dbg$tl^3.316+rnorm(30,0,10),1) dlb <- data.frame(species=factor(rep(c(\"Largemouth Bass\"),30)),                   tl=round(rnorm(30,350,60),0)) dlb$wt <- round(2.96e-06*dlb$tl^3.273+rnorm(30,0,60),1) df <- rbind(dbt,dbg,dlb) str(df) #> 'data.frame':\t90 obs. of  3 variables: #>  $ species: Factor w/ 3 levels \"Bluefin Tuna\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ tl     : num  1371 1558 2031 2226 2124 ... #>  $ wt     : num  19231 38147 90530 104718 88761 ...  df$Wr1 <- wrAdd(wt~tl+species,data=df) ## same but with non-formula interface df$Wr2 <- wrAdd(df$wt,df$tl,df$species)  ## Same as above but using dplyr if (require(dplyr)) {   df <- mutate(df,Wr3a=wrAdd(wt,tl,species)) }  df #>            species   tl       wt       Wr1       Wr2      Wr3a #> 1     Bluefin Tuna 1371  19231.0        NA        NA        NA #> 2     Bluefin Tuna 1558  38146.9        NA        NA        NA #> 3     Bluefin Tuna 2031  90530.4        NA        NA        NA #> 4     Bluefin Tuna 2226 104718.3        NA        NA        NA #> 5     Bluefin Tuna 2124  88760.7        NA        NA        NA #> 6     Bluefin Tuna 1685  62842.5        NA        NA        NA #> 7     Bluefin Tuna 1951  79294.6        NA        NA        NA #> 8     Bluefin Tuna 2136  88992.9        NA        NA        NA #> 9     Bluefin Tuna 1638  50819.4        NA        NA        NA #> 10    Bluefin Tuna 2060  84458.4        NA        NA        NA #> 11    Bluefin Tuna 1857  64052.5        NA        NA        NA #> 12    Bluefin Tuna 2382 125738.2        NA        NA        NA #> 13    Bluefin Tuna 2021  85658.6        NA        NA        NA #> 14    Bluefin Tuna 1862  58800.5        NA        NA        NA #> 15    Bluefin Tuna 1814  60758.3        NA        NA        NA #> 16    Bluefin Tuna 1953  78388.3        NA        NA        NA #> 17    Bluefin Tuna 2079  79556.7        NA        NA        NA #> 18    Bluefin Tuna 1840  66489.0        NA        NA        NA #> 19    Bluefin Tuna 2049  92100.8        NA        NA        NA #> 20    Bluefin Tuna 2545 142705.1        NA        NA        NA #> 21    Bluefin Tuna 2037 100179.1        NA        NA        NA #> 22    Bluefin Tuna 1310  16968.9        NA        NA        NA #> 23    Bluefin Tuna 2028  79251.3        NA        NA        NA #> 24    Bluefin Tuna 1767  49999.8        NA        NA        NA #> 25    Bluefin Tuna 1970  76008.7        NA        NA        NA #> 26    Bluefin Tuna 1866  61425.8        NA        NA        NA #> 27    Bluefin Tuna 1777  56046.1        NA        NA        NA #> 28    Bluefin Tuna 1682  55881.3        NA        NA        NA #> 29    Bluefin Tuna 2295 112096.0        NA        NA        NA #> 30    Bluefin Tuna 1889  59611.6        NA        NA        NA #> 31        Bluegill  158     75.3  91.21118  91.21118  91.21118 #> 32        Bluegill  157     80.3  99.33729  99.33729  99.33729 #> 33        Bluegill  126     26.0  66.70289  66.70289  66.70289 #> 34        Bluegill  203    196.2 103.52426 103.52426 103.52426 #> 35        Bluegill  136     59.9 119.29213 119.29213 119.29213 #> 36        Bluegill  192    159.4 101.17226 101.17226 101.17226 #> 37        Bluegill  132     54.9 120.71165 120.71165 120.71165 #> 38        Bluegill  121     30.7  90.07870  90.07870  90.07870 #> 39        Bluegill  136     42.4  84.44051  84.44051  84.44051 #> 40        Bluegill   52     -5.8        NA        NA        NA #> 41        Bluegill  111     17.5  68.35134  68.35134  68.35134 #> 42        Bluegill  226    267.8  98.98901  98.98901  98.98901 #> 43        Bluegill  217    238.2 100.74912 100.74912 100.74912 #> 44        Bluegill  163     86.9  94.93048  94.93048  94.93048 #> 45        Bluegill  119     18.3  56.74628  56.74628  56.74628 #> 46        Bluegill   79     17.9        NA        NA        NA #> 47        Bluegill   78      3.5        NA        NA        NA #> 48        Bluegill  172    113.9 104.11454 104.11454 104.11454 #> 49        Bluegill  106     28.0 127.42181 127.42181 127.42181 #> 50        Bluegill  122     36.7 104.78446 104.78446 104.78446 #> 51        Bluegill   95     14.1  92.27576  92.27576  92.27576 #> 52        Bluegill   47     -3.3        NA        NA        NA #> 53        Bluegill  155     72.8  93.97048  93.97048  93.97048 #> 54        Bluegill  167    101.5 102.31474 102.31474 102.31474 #> 55        Bluegill  146     65.1 102.46768 102.46768 102.46768 #> 56        Bluegill  125     54.5 143.56312 143.56312 143.56312 #> 57        Bluegill   66     -7.1        NA        NA        NA #> 58        Bluegill  160     92.1 107.00345 107.00345 107.00345 #> 59        Bluegill   85      1.7  16.08777  16.08777  16.08777 #> 60        Bluegill   72     19.0        NA        NA        NA #> 61 Largemouth Bass  351    537.7  84.67395  84.67395  84.67395 #> 62 Largemouth Bass  297    480.0 130.58984 130.58984 130.58984 #> 63 Largemouth Bass  358    598.2  88.30540  88.30540  88.30540 #> 64 Largemouth Bass  451   1435.8  99.53461  99.53461  99.53461 #> 65 Largemouth Bass  375    676.8  85.83334  85.83334  85.83334 #> 66 Largemouth Bass  429   1230.9 100.50555 100.50555 100.50555 #> 67 Largemouth Bass  393    904.5  98.39245  98.39245  98.39245 #> 68 Largemouth Bass  168    104.3 183.16691 183.16691 183.16691 #> 69 Largemouth Bass  358    567.9  83.83256  83.83256  83.83256 #> 70 Largemouth Bass  396    900.0  95.49622  95.49622  95.49622 #> 71 Largemouth Bass  319    481.4 103.65713 103.65713 103.65713 #> 72 Largemouth Bass  325    476.1  96.45038  96.45038  96.45038 #> 73 Largemouth Bass  305    386.9  96.49068  96.49068  96.49068 #> 74 Largemouth Bass  343    505.1  85.77480  85.77480  85.77480 #> 75 Largemouth Bass  359    720.1 105.33403 105.33403 105.33403 #> 76 Largemouth Bass  295    349.4  97.18415  97.18415  97.18415 #> 77 Largemouth Bass  355    561.3  85.17216  85.17216  85.17216 #> 78 Largemouth Bass  336    630.0 114.45429 114.45429 114.45429 #> 79 Largemouth Bass  502   2053.0 100.22722 100.22722 100.22722 #> 80 Largemouth Bass  328    553.9 108.88706 108.88706 108.88706 #> 81 Largemouth Bass  387    899.9 102.94761 102.94761 102.94761 #> 82 Largemouth Bass  324    510.4 104.44721 104.44721 104.44721 #> 83 Largemouth Bass  387    875.1 100.11051 100.11051 100.11051 #> 84 Largemouth Bass  274    243.7  86.31732  86.31732  86.31732 #> 85 Largemouth Bass  437   1347.0 103.53134 103.53134 103.53134 #> 86 Largemouth Bass  313    412.5  94.51644  94.51644  94.51644 #> 87 Largemouth Bass  260    182.4  76.70383  76.70383  76.70383 #> 88 Largemouth Bass  441   1288.2  96.10274  96.10274  96.10274 #> 89 Largemouth Bass  266    265.7 103.69408 103.69408 103.69408 #> 90 Largemouth Bass  371    612.6  80.46670  80.46670  80.46670   ## Example with only one species in the data.frame bg <- droplevels(subset(df,species==\"Bluegill\")) bg$Wr4 <- wrAdd(wt~tl+species,data=bg)"},{"path":"https://fishr-core-team.github.io/FSA/reference/wsVal.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds standard weight equation coefficients for a particular species. — wsVal","title":"Finds standard weight equation coefficients for a particular species. — wsVal","text":"Returns vector contains known subset information standard weight equation given species, type measurement units, reference percentile.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wsVal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds standard weight equation coefficients for a particular species. — wsVal","text":"","code":"wsVal(   species = \"List\",   units = c(\"metric\", \"English\"),   ref = 75,   simplify = FALSE )"},{"path":"https://fishr-core-team.github.io/FSA/reference/wsVal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds standard weight equation coefficients for a particular species. — wsVal","text":"species string contains species name find coefficients. See details. units string indicates whether coefficients standard weight equation returned (\"metric\" (DEFAULT; mm g) \"English\" (lbs) units. ref numeric indicates percentile equation returned . Note vast majority equations exist 75th percentile (DEFAULT). simplify logical indicates whether ‘units’, ‘ref’, ‘measure’, ‘method’, ‘comments’, ‘source’ fields included (=FALSE) (=TRUE; DEFAULT). See details.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wsVal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds standard weight equation coefficients for a particular species. — wsVal","text":"one row data frame WSlit contains known information standard weight equation given species, type measurement units, reference percentile simplify=FALSE. simplify=TRUE species; minimum maximum length standard equation applied; intercept, slope, quadratic  coefficients standard weight equation. Note maximum length quadratic coefficient returned exist WSlit. arguments given function, species name mis-spelled, standard weight equation exist (WSlit) particular species, warning issued list species names printed.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wsVal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Finds standard weight equation coefficients for a particular species. — wsVal","text":"function extract known information WSlit following standard weight equation, $$log_{10}(Ws) = log_{10}() + blog_{10}(L) + blog_{10}(L)^{2}$$ See WSlit information meaning value returned. Note coefficients returned TRANSFORMED model. Thus, obtain standard weight (Ws), returned coefficients used compute common log Ws must bed raised power 10 compute Ws.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wsVal.html","id":"ifar-chapter","dir":"Reference","previous_headings":"","what":"IFAR Chapter","title":"Finds standard weight equation coefficients for a particular species. — wsVal","text":"8-Condition.","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wsVal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Finds standard weight equation coefficients for a particular species. — wsVal","text":"Ogle, D.H. 2016. Introductory Fisheries Analyses R. Chapman & Hall/CRC, Boca Raton, FL.","code":""},{"path":[]},{"path":"https://fishr-core-team.github.io/FSA/reference/wsVal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finds standard weight equation coefficients for a particular species. — wsVal","text":"Derek H. Ogle, DerekOgle51@gmail.com","code":""},{"path":"https://fishr-core-team.github.io/FSA/reference/wsVal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds standard weight equation coefficients for a particular species. — wsVal","text":"","code":"wsVal() #>  #> Species name must be one of following. Be careful of spelling and capitalization. #>   [1] \"Aegean Chub\"                       \"African Sharptooth Catfish\"        #>   [3] \"Alabama Bass\"                      \"Ankara Nase\"                       #>   [5] \"Arctic Grayling\"                   \"Bighead Carp\"                      #>   [7] \"Bigmouth Buffalo\"                  \"Bigmouth Sleepers (all)\"           #>   [9] \"Bigmouth Sleepers (lotic)\"         \"Black Bullhead\"                    #>  [11] \"Black Crappie\"                     \"Blacktail Redhorse\"                #>  [13] \"Blue Catfish\"                      \"Blue Sucker\"                       #>  [15] \"Bluegill\"                          \"Bridgelip Sucker\"                  #>  [17] \"Brook Chub\"                        \"Brook Trout\"                       #>  [19] \"Brook Trout (appalachia)\"          \"Brown Bullhead\"                    #>  [21] \"Brown Trout (lentic)\"              \"Brown Trout (lotic)\"               #>  [23] \"Bull Trout\"                        \"Burbot\"                            #>  [25] \"Cavedano Chub\"                     \"Chain Pickerel\"                    #>  [27] \"Channel Catfish\"                   \"Chinook Salmon\"                    #>  [29] \"Cisco\"                             \"Common Carp\"                       #>  [31] \"Cutthroat Trout (lentic)\"          \"Cutthroat Trout (lotic)\"           #>  [33] \"European Chub\"                     \"European Perch\"                    #>  [35] \"Flannelmouth Sucker\"               \"Flathead Catfish\"                  #>  [37] \"Fourbarbel Scraper\"                \"Freshwater Drum\"                   #>  [39] \"Gizzard Shad\"                      \"Golden Shiner\"                     #>  [41] \"Golden Trout\"                      \"Green Sunfish\"                     #>  [43] \"Horse Barbel\"                      \"Humpback Chub\"                     #>  [45] \"Kokanee\"                           \"Lake Herring\"                      #>  [47] \"Lake Trout\"                        \"Largemouth Bass\"                   #>  [49] \"Largescale Sucker\"                 \"Longnose Gar\"                      #>  [51] \"Marble Trout\"                      \"Mountain Mullet\"                   #>  [53] \"Mountain Whitefish\"                \"Muskellunge (female)\"              #>  [55] \"Muskellunge (male)\"                \"Muskellunge (overall)\"             #>  [57] \"Nile Tilapia\"                      \"Nipple-Lip Scraper\"                #>  [59] \"Northern Pike\"                     \"Northern Pikeminnow\"               #>  [61] \"Northern Squawfish\"                \"Paddlefish (female)\"               #>  [63] \"Paddlefish (male)\"                 \"Paddlefish (overall)\"              #>  [65] \"Palmetto Bass\"                     \"Pejerrey\"                          #>  [67] \"Pumpkinseed\"                       \"Pursak Chub\"                       #>  [69] \"Rainbow Trout (lentic)\"            \"Rainbow Trout (lotic)\"             #>  [71] \"Razorback Sucker\"                  \"Redbreast Sunfish\"                 #>  [73] \"Redear Sunfish\"                    \"Riffle Dace\"                       #>  [75] \"River Carpsucker\"                  \"River Goby\"                        #>  [77] \"Rock Bass\"                         \"Roundtail Chub\"                    #>  [79] \"Ruffe\"                             \"Sardine\"                           #>  [81] \"Sauger\"                            \"Saugeye\"                           #>  [83] \"Shoal Bass\"                        \"Shorthead Redhorse\"                #>  [85] \"Shovelnose Sturgeon\"               \"Silver Carp\"                       #>  [87] \"Smallmouth Bass\"                   \"Smallmouth Buffalo\"                #>  [89] \"South European Roach\"              \"Spotted Bass\"                      #>  [91] \"Spotted Bass (alabama subspecies)\" \"Spotted Gar\"                       #>  [93] \"Spotted Sunfish\"                   \"Striped Bass\"                      #>  [95] \"Striped Bass (hybrid)\"             \"Striped Bass X White Bass\"         #>  [97] \"Suwannee Bass\"                     \"Tiger Muskellunge\"                 #>  [99] \"Utah Chub\"                         \"Walleye\"                           #> [101] \"Walleye (30-149 mm)\"               \"Warmouth\"                          #> [103] \"White Bass\"                        \"White Catfish\"                     #> [105] \"White Crappie\"                     \"White Perch\"                       #> [107] \"White Sturgeon\"                    \"White Sucker\"                      #> [109] \"Yellow Bass\"                       \"Yellow Bullhead\"                   #> [111] \"Yellow Perch\"                      wsVal(\"Bluegill\") #>     species  units   type ref measure method min.TL    int slope         source #> 26 Bluegill metric linear  75      TL  Other     80 -5.374 3.316 Hillman (1982) wsVal(\"Bluegill\",units=\"metric\") #>     species  units   type ref measure method min.TL    int slope         source #> 26 Bluegill metric linear  75      TL  Other     80 -5.374 3.316 Hillman (1982) wsVal(\"Bluegill\",units=\"English\") #>     species   units   type ref measure method min.TL    int slope #> 25 Bluegill English linear  75      TL  Other      3 -3.371 3.316 #>            source #> 25 Hillman (1982) wsVal(\"Bluegill\",units=\"English\",simplify=TRUE) #>     species min.TL    int slope #> 25 Bluegill      3 -3.371 3.316 wsVal(\"Ruffe\",units=\"metric\",simplify=TRUE) #>     species min.TL max.TL   int slope   quad #> 144   Ruffe     55    205 -2.58 0.621 0.6073 wsVal(\"Ruffe\",units=\"metric\",ref=50,simplify=TRUE) #>     species min.TL max.TL     int  slope   quad #> 143   Ruffe     55    205 -3.3524 1.3969 0.4054"},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-095","dir":"Changelog","previous_headings":"","what":"FSA 0.9.5","title":"FSA 0.9.5","text":"Fixed FSA-package problem using “automatic approach” (.e., adding “_PACKAGE” line FSA.R) suggested e-mail Kurt Hornik 19-Aug-2023.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-094","dir":"Changelog","previous_headings":"","what":"FSA 0.9.4","title":"FSA 0.9.4","text":"CRAN release: 2023-02-01 Updated sticker. Changed DHO e-mail address (DESCRIPTION author fields documentation). Partially address #86. Updated pkgdown.yaml GitHub action v2. Changed action run release (rather push) can run manually well. Updated R-CMD-check.yaml GitHub action v2. Note add extra code dealing graphics Mac version. Updated links fishR(), FSA(), README.md. Partially address #86. Updated links Introductory Fisheries Analyses R book. Added links CSV files data sets. addresses #96. Changed theme _pkgdown.yml match FSAdata closely match fishR. Removed recent dates NEWS file pkgdown picks CRAN release date add. Updated CITATION (match required next version R). alkIndivAge(): Modified. Added catch NAs length sample. Also added test. addresses #88. confint.boot(): Modified. Changed hard-coding columns contained confidence interval values find columns grep()ing % sign. fixes issue related car::Confint() returning coef() results functions coef() method . Also updated tests use results car::Boot() rather old car::bootCase(). PSDcalc: Modified. Changed code allow missing species= long addLens= used. allows user provide length categories species Gabelhouse lengths defined. Several new tests added modified handle changing message re: missing species=. documentation modified accordingly. (finally) addresses #58. PSDlit: Modified. Added info Redbreast Sunfish Spotted Sunfish Bonvecchio et al. (2023). addresses #100). wSlit: Modified documentation. Described RLP EmP acronyms provided references . addresses #95). Added info Redbreast Sunfish Spotted Sunfish Bonvecchio et al. (2023). addresses #100).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-093","dir":"Changelog","previous_headings":"","what":"FSA 0.9.3","title":"FSA 0.9.3","text":"CRAN release: 2022-02-18 Moved dplyr imports suggests (needed functions removed last version; however still used examples; partially addresses #87). Removed sciplot imports (functions removed last version; partially addresses #87). Updated tests ksTest() handle issues CRAN M1 build machine (per e-mail Prof. Ripley 15-Feb-22; partially addresses #87). Updated links droglenc github related FSA FSAdata fishR-Core-Team github.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-092-12-feb-21","dir":"Changelog","previous_headings":"","what":"FSA 0.9.2 12-Feb-21","title":"FSA 0.9.2 12-Feb-21","text":"CRAN release: 2022-02-12 Last version maintained Derek Ogle. Transferring fishR Core Team next version. filterD(): REMOVED (FSAmisc). fitPlot(): REMOVED (FSAmisc). fsaNews() FSANews(): Removed. psdAdd(): Modified. Changed way PSDlit loaded function environment FSA::psdAdd() work. Addresses #85. PSDLit: Modified. Added info Utah Chub (; address #84). psdVal(): Modified. Changed way PSDlit loaded function environment FSA::psdVal() work. Addresses #85. residPlot(): REMOVED (FSAmisc). wrAdd(): Modified. Changed way WSlit loaded function environment FSA::wrAdd() work. Addresses #85. WSLit: Modified. Added info Utah Chub (; address #84). wsVal(): Modified. Changed way WSlit loaded function environment FSA::wsVal() work. Addresses #85.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-091","dir":"Changelog","previous_headings":"","what":"FSA 0.9.1","title":"FSA 0.9.1","text":"CRAN release: 2021-07-17 Corrected testing issue catchCurve() chapmanRobson() directed CRAN 17-Jul-21. Issue likely caused changes fishmethods package.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-090","dir":"Changelog","previous_headings":"","what":"FSA 0.9.0","title":"FSA 0.9.0","text":"CRAN release: 2021-06-09 Make note several removed (now defunct) deprecated (soon defunct) functions listed . Added Jason Doll AUThor. Moved plyr Imports Suggests. alkPlot(): Modified. Removed use chooseColors() (see ). binCI(): Modified. Changed use iCheckConfLevel() (addresses #66). plot.boot(): REMOVED. Conflicted boot::plot.boot() caused error CRAN. functionality available pairs(<boot object>$t). catchCurve(): Modified. Removed hard-coding ylim= plot.catchCurve() (addresses #70 … Thanks Brendan Runde). Added round.est= user can control decimals mortality estimate values. Changed use iCheckConfLevel() (addresses #66). chapmanRobson(): Modified. Removed hard-coding ylim= plot.chapmanRobson(). Added round.est= user can control decimals mortality survival estimate values. Changed use iCheckConfLevel() (addresses #66). chooseColors(): REMOVED. exported function internal. Regardless, used removed user now allowed provide vector colors. See iCheckMultColors(). Partially addresses #65. compIntercepts(): REMOVED (FSAmisc). Added FSA-defunct. Partially addresses #65. compSlopes(): REMOVED (FSAmisc). Added FSA-defunct. Partially addresses #65. depletion(): Modified. Changed use iCheckConfLevel() (addresses #66). filterD(): DEPRECATED (partially addresses #65). fitPlot(): DEPRECATED (partially addresses #65). Prior removed use chooseColors() (see ). diags(): REMOVED (moved FSAmisc). Added FSA-defunct. Partially addresses #65. hoCoef(): REMOVED (moved FSAmisc). Added FSA-defunct. Partially addresses #65. hyperCI(): Modified. Changed use iCheckConfLevel() (addresses #66). iCheckConfLevel(): Added (internal address #66). iCheckMultColors(): Added (internal). Part removing chooseColors() paletteChoices(). iRichColors(): REMOVED (part removing chooseColors()). mapvalues(): REMOVED. Added FSA-defunct. Partially addresses #65. mrClosed(): Modified. Changed use iCheckConfLevel() (addresses #66). mrOpen(): Modified. Added warning r==0, causes SE M thus N Infinity (addresses #69). Added similar warning R==0 (last time period). Added tests warning messages. Changed one use apply() rowSums() ease reading. Changed use iCheckConfLevel() (addresses #66). paletteChoices(): REMOVED. See chooseColors() . Partially addresses #65. poiCI(): Modified. Changed use iCheckConfLevel() (addresses #66). psdAdd(): Modified. Changed levels() iPSDlitCheck() unique() species longer factor due updating PSDlit (.e., rdata file changed new read.csv()). psdCalc(): Modified. Added catch “tibble”s sent data= (addresses #75). Changed use iCheckConfLevel() (addresses #66). psdCI(): Modified. Changed use iCheckConfLevel() (addresses #66). PSDlit: Modified. Added length categories Shoal Bass Pallid Sturgeon. Added Striped Bass (Hybrid) Striped Bass x White Bass; though existing Palmetto Bass. Added “source”s entry. psdVal(): Modified. Changed levels() iPSDlitCheck() iListSpecies() unique() species longer factor due updating PSDlit (.e., rdata file changed new read.csv()). Added showJustSource= argument show source info (TRUE) (FALSE; default), partially addresses #76. removal(): Modified. Added check warning non-whole numbers catch= (addresses #60). Also modified checks data integrity robust (e.g., character vector sent). Changed use iCheckConfLevel() (addresses #66). residPlot(): DEPRECATED (partially addresses #65). Prior removed use chooseColors() (see ). Subset(): REMOVED. Added FSA-defunct. Partially addresses #65. wrAdd(): Modified. Changed levels() iwsLitCheck() unique() species longer factor due updating WSlit (.e., rdata file changed new read.csv()). Corrected capitalization “Cavedano Chub”, “European Chub”, “Lake Herring” (metric), “Pursak Chub”. Removed “Neumann et al. (2012)” notes. Added African Sharptooth Catfish, Ankara Nase, Bighead Silver Carp, Brook Trout (Appalachia), Fourbarbel Scraper, Horse Barbel, Nile Tilapia, Nipple-Lipped Scraper, Shoal Bass, South European Roach, Spotted Bass (Alabama subspecies) (AKA Alabama Bass). Added Striped Bass (Hybrid) Striped Bass x White Bass; though existing Palmetto Bass. wsVal(): Modified. Changed levels() iwsLitCheck() unique() species longer factor due updating WSlit (.e., rdata file changed new read.csv()).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0832","dir":"Changelog","previous_headings":"","what":"FSA 0.8.32","title":"FSA 0.8.32","text":"CRAN release: 2021-01-15 Removed Travis-CI appveyor. longer using coveralls coverage statistics. Changed codecov.io. Added GitHub Action CI/CD (used usethis::use_github_action_check_standard()). Added GitHub Action pkgdown (used usethis::use_github_action(\"pkgdown\")). Added GitHub Action code coverage codecov.io. Added code conduct contributors. Moved bunch plotting examples documentation tests\\plottests\\ speed testing. tests\\plottests\\ added .Rbuildignore . hist.formula(): Modified. Fixed bug y-axes freq=FALSE used (fixes #62; thanks @carlostorrescubila). fitPlot(): Modified. Fixed bugs handling models used character rather factor variables. plotBinResp(): REMOVED. Removed user-facing function, made internal function continued use fitPlot() fitPlot() deprecated. psdAdd(): Modified. Fixed bug relate species NA (fixes #64; thanks Dan Shoup). Added tests fixed typos documentation. psdPlot(): Modified. Fixed bug box around plot add.psd=FALSE. Added 5% expansion top y-axis bars run box. residPlot(): Modified. Fixed bugs handling models used character rather factor variables.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0831","dir":"Changelog","previous_headings":"","what":"FSA 0.8.31","title":"FSA 0.8.31","text":"CRAN release: 2020-11-08 Now using roxygen v7.1.1. Added tibble suggests (see comment headtail() ). Cleaned documentation parameters RichardsFuns() (documentation change parameter letters changed Age Growth book). Changed example headtail() use as_tibble() tibble package rather tbl_df() dplyr package. Required adding tibble suggests. nlsTracePlot(): Modified. Created conditional catch depending version R results nls(*,trace=TRUE) changing v4.1.0 (per e-mail Martin Maechler 2-Nov-20).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0830","dir":"Changelog","previous_headings":"","what":"FSA 0.8.30","title":"FSA 0.8.30","text":"CRAN release: 2020-03-09 Date: 9-Mar-20 Started using rhub::check_for_cran() checking sending CRAN. Updated tests Summarize() ksTest() used data.frame(). done v0.8.28. Fixed errors tests ksTest() identified using R-hub. Removed links documentation non-dependent non-suggested packages. removes note R-hub. fishR(): Modified. Changed base URL https: (http:). Added open=, primarily allow opening browser testing.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0829","dir":"Changelog","previous_headings":"","what":"FSA 0.8.29","title":"FSA 0.8.29","text":"Date: 8-Mar-20 Removed dependency epitools package may soon orphaned. See changes binCI() poiCI() outlined . binCI(): Modified. Added internal functions based (identical ) functions epitools package possibly deprecated soon (per note CRAN 7-Mar-20). poiCI(): Modified. Added internal functions based (identical ) functions epitools package possibly deprecated soon (per note CRAN 7-Mar-20).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0828","dir":"Changelog","previous_headings":"","what":"FSA 0.8.28","title":"FSA 0.8.28","text":"Date: 28-Feb-20 fitPlot(): Modified. Changed lines plotted points IVR versions. ksTest(): Modified. Changed documentation examples handle R’s new way handling stringsAsFactors= (per request CRAN 27-Feb-20). psdAdd(): Modified. Changed testing handle R’s new way handling stringsAsFactors= (per request CRAN 27-Feb-20).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0827","dir":"Changelog","previous_headings":"","what":"FSA 0.8.27","title":"FSA 0.8.27","text":"CRAN release: 2020-02-03 Now using ROxygen2 7.0.2. Removed dependency gplots package now orphaned. Required adding iRichColors() internal function. lwCompPreds(): Removed \\dots arguments usage (per request CRAN 3-Feb-20). repeatedRows2Keep(): Modified. Now makes comparisons NAs regular values.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0826","dir":"Changelog","previous_headings":"","what":"FSA 0.8.26","title":"FSA 0.8.26","text":"CRAN release: 2019-11-22 Changed depending R >=3.5.0, latest version required package (.e., car) FSA imports suggests. Used “check_r_versions_of_package_dependencies” shiny app “ateucher” (Github) help determine . Removed asbio package suggests hung Travis-CI build (need TCLTK package). capFirst(): Modified. Fixed bug related NA item. psdAdd(): Modified. Changed spec= species= consistent psdCalc() psdPlot(). peek(): Added. repeatedRows2Keep(): Modified. Added catch data.frame contains one row (returns TRUE row kept).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0825-24-jul-19","dir":"Changelog","previous_headings":"","what":"FSA 0.8.25 24-Jul-19","title":"FSA 0.8.25 24-Jul-19","text":"CRAN release: 2019-07-24 agePrecision(): Modified. Changed PE2 CV2 use median entire calculation rather just denominator. iHndlColsUseIgnore(): Modified. Changed 0 indice returns error. repeatedRows2Keep(): Added. vbStarts(): Modified. Corrected bug related point transparenty plot=TRUE age/length combination repeats (.e., age/length combinations unique). Corrected bug col.main= ignored plot=TRUE.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0824-17-may-19","dir":"Changelog","previous_headings":"","what":"FSA 0.8.24 17-May-19","title":"FSA 0.8.24 17-May-19","text":"CRAN release: 2019-05-21 Corrected misuses \\concept Rd files per CRAN request.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0823-1-may-19","dir":"Changelog","previous_headings":"","what":"FSA 0.8.23 1-May-19","title":"FSA 0.8.23 1-May-19","text":"CRAN release: 2019-05-02 Reorganized testthat folder suggested testthat release notes. Removed uses Subset() (replaced filterD()). fitPlot(): Modified. Fixed bug related y-axis limits extending contain data, confidence bands, prediction bands (fitPlot.slr()). addresses #3 listed NCStats). hist.formula(): Modified. Fixed bug related subsequent calls call used iaxs=FALSE. addresses #46. iLegendHelp(): Modified. Added catch proper keyword supplied. nlsTracePlot(): Modified. Moved error catching improper keyword legend placement forward. SchnuteRichards(): Added. addresses #54.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0822","dir":"Changelog","previous_headings":"","what":"FSA 0.8.22","title":"FSA 0.8.22","text":"CRAN release: 2018-11-22 Corrected CITATION file. Updated tests changes fishmethods package (vblrt() replaced growthlrt() T= replaced TC= M.empirical()) per CRAN request.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0821","dir":"Changelog","previous_headings":"","what":"FSA 0.8.21","title":"FSA 0.8.21","text":"CRAN release: 2018-11-03 Added webpage. Setup Travis-CI handle updates. Added hex sticker logo. Added withr Imports (see usages ). Added Encoding: UTF-8 DESCRIPTION. Added Powell Wheeler author work adding method=\"Burnham\" removal(). Added Alexis Dinno author providing base functionality dunnTest(). done long ago. Removed data() examples referred data package. Included package= argument data() loaded packages. Added seealso, links functions use data examples, docmentation data.frames. Removed \\dontrun()s bootCase related examples now car package updated. addresses #45. addZeroCatch(): Modified. Added catch turns “tibble” regular data.frame (obviates errors occur tibbles). Minor changes documentation comments code. agePrecision(): Modified. Added intermediate summary calculations median modal age; average absolute deviation standard deviation; APE CV median rather mean divisor; index precision (D). Added show.prec2=. Updated tests examples. minor modifications function code. Addresses #41 #49. alkIndivAge(): Modified. Replaced options(warn=-1) suppressWarnings(). alkPlot(): Modified. Changed using withr::local_par() (partially addresses #38). Replaced options(warn=-1) suppressWarnings(). alkSummaries(): Modified. Replaced options(warn=-1) suppressWarnings(). Bootstrapping functions: Modified. Changed using withr::local_par() (partially addresses #38). capHistSum(): Modified. Changed using withr::local_par() (partially addresses #38). chapmanRobson(): Modified. Changed using withr::local_par() (partially addresses #38). fishR(): Modified. Changed examples documentation run (open external webpage). FSAnews(): Modified. Changed examples documentation run (open external webpage). Growth models: Modified. Changed using withr::local_par() (partially addresses #38). hist.formula(): Modified. Changed using withr::local_par() (partially addresses #38). lwCompPreds(): Modified. Changed using withr::local_par() (partially addresses #38). plotAB(): Modified. Now documentation file (rather ageBias()). psdCalc(): Modified. Better handled situation user asks summaries fish greater stock size fish greater quality size (addresses #50; thanks Timothy Spier bug report). removal(): Modified. Added method=\"Burhnam\" via #51 Powell Wheeler. residPlot(): Modified. Changed using withr::local_par() (partially addresses #38). SMBassWB: Modified. Fixed minor data entry error row 383. vbFuns(): Modified. Added Francis3 list models.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0820","dir":"Changelog","previous_headings":"","what":"FSA 0.8.20","title":"FSA 0.8.20","text":"CRAN release: 2018-05-18 Added asbio, DescTools, nlme, psych packages Suggests used tests (soon required CRAN … per e-mail CRAN 17-May-18). Fixed bunch bad links packages documentation. Removed “Date” field Description file. addRadCap(): Removed. Moved RFishBC package. bcFuns(): Removed. Moved RFishBC package. gConvert(): Removed. Moved RFishBC package. mrClosed(): Modified. Fixed bug related poiCI() returning results four types. Now mrClosed() use one type. Thanks Timothy Spiers pointing bug. SMBassWB: Modified. Fixed minor data entry error row 404. Changed link documentation alr3 alr4 package.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0819","dir":"Changelog","previous_headings":"","what":"FSA 0.8.19","title":"FSA 0.8.19","text":"CRAN release: 2018-04-08 addZeroCatch(): Modified. Changed two 1:nrow() structures seq_len(nrow()) (partially addressing #36). ageBias(): Modified. Changed 1: structures seq_len() (partially addressing #36). agePrecision(): Modified. Changed 1: structures seq_len() (partially addressing #36). bcFuns(): Modified. Changed three 1:length() structures seq_along() (partially addressing #36). bootCase() methods: Modified. Changed 1: structures seq_len() (partially addressing #36). capHistConvert(): Modified. Changed 1: structures seq_len() seq_along() (partially addressing #36). capHistSum(): Modified. Changed 1: structures seq_len() (partially addressing #36). chooseColors(): Modified. Changed 1: structures seq_len() (partially addressing #36). compSlopes(): Modified. Changed 1: structures seq_len() (partially addressing #36). compIntercepts(): Modified. Changed 1: structures seq_len() (partially addressing #36). extraSS(): Modified. Changed 1: structures seq_len() seq_along() (partially addressing #36). headtail(): Modified. Changed 1: structures seq_len() (partially addressing #36). hist.formula() methods: Modified. Changed 1: structures seq_len() (partially addressing #36). htest.boot(): Removed (added last version) can test . iHndlFormula(): Modified. Now categorizes character variable factor variable. addresses #35) hist.formula() Summarize(). lrt(): Modified. Changed 1: structures seq_len() seq_along() (partially addressing #36). lwCompPreds(): Modified. Changed 1: structures seq_len() seq_along() (partially addressing #36). mrClosed(): Modified. Changed two 1:length() structures seq_along() (partially addressing #36). nlsBoot() methods: Modified. Changed 1: structures seq_len() (partially addressing #36). plot.boot(): Removed (added last version) can test . predict.boot(): Removed (added last version) can test . psdAdd(): Modified. Changed three 1: structures seq_len() seq_along() (partially addressing #36). residPlot(): Modified. Changed three 1:length() structures seq_along() (partially addressing #36). Summarize(): Modified. Changed one 1:length() structure seq_along() (partially addressing #36). wrAdd(): Modified. Changed three 1: structures seq_len() seq_along() (partially addressing #36).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0818","dir":"Changelog","previous_headings":"","what":"FSA 0.8.18","title":"FSA 0.8.18","text":"Date: 31-Mar-18 Changed depending R >=3.2.0, latest version required package (.e., car) FSA imports suggests. Used “check_r_versions_of_package_dependencies” shiny app “ateucher” (Github) help determine . Using latest testthat package. bootCase(): Added. added bootCase() soon removed car package. added code Introductory Fisheries Analyses R book still work. largely wrapper Boot() car method=\"case\". documentation updated somewhat. catchCurve(): Modified. Changed weighted regression method negative weights set zero rather minimum positive values (brought attention Vaskar Nepal KC). Also added rSquared() method (per request Vaskar Nepal KC). depletion(): Modified. Added rSquared() method. expandCounts(): Modified. Minor changes documentation. hTest.boot(): Added. plot.boot(): Added. plotAB(): Modified. Added col.numbers= allow users modify color numbers =\"numbers\" used (addresses #34). predict.boot(): Added. psdPlot(): Modified. Minor changes documentation look function code. rSquared(): Added NCStats, including generic method can used models (e.g., catchCurve()). vbFuns(): Modified. Switched Fabens Fabens2 parameterizations better match Wang (.e., increment model first). Added Francis2 parameterization tag-recapture data. vbStarts(): Modified. Fixed spacing issues warnings starting values Linf poorly estimated. Added argument ivbStarts.LinfK() suppress checking value Linf. argument reduces change double-printing warning message bad estimates starting values Linf K.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0817","dir":"Changelog","previous_headings":"","what":"FSA 0.8.17","title":"FSA 0.8.17","text":"CRAN release: 2017-10-29 dunnTest(): Modified. Adjusted code handle addition altp= modified output dunn.test() dunn.test. Added additional tests corrected issues documentation. GompertzFuns(): Modified. Fixed error message (.e., msg=TRUE) param=\"Ricker2\".","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0816","dir":"Changelog","previous_headings":"","what":"FSA 0.8.16","title":"FSA 0.8.16","text":"CRAN release: 2017-09-07 Need resubmit v0.8.15 CRAN, bumped version. growthFunShow(): Modified. Fixed error expression type=\"Logistic\" param=\"CampanaJones1\".","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0815","dir":"Changelog","previous_headings":"","what":"FSA 0.8.15","title":"FSA 0.8.15","text":"Date: 6-Sep-17 Added script helpers directory test required packages installed. iAddOutlierTestResults(): Modified. Fixed bug related point labels residPlot() data.frame original model NA values. removal(): Modified document merging pull request #33. srStarts(): Modified. Added fixed=. Added catches poor starting values. Added relevant tests. Addresses #30.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0814","dir":"Changelog","previous_headings":"","what":"FSA 0.8.14","title":"FSA 0.8.14","text":"CRAN release: 2017-07-27 Moved dunn.test lmtest imports help portability workshops. ageBias(): Modified. Fixed bug plot() tick marks marginal histograms match tick marks main plot. Changed default hist.panel.size= plot() reliably prints values axes marginal histograms. removal(): Modified. Added “warnings” catches zeroes (object still returned NAs). Thanks Daniel Hanks pointing issue. Summarize(): Modified. Fixed bug percZero!=\"always\" valid values calculated percent zeroes NA.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0813","dir":"Changelog","previous_headings":"","what":"FSA 0.8.13","title":"FSA 0.8.13","text":"CRAN release: 2017-04-29 ageBias(): Modified. complete rebuild plot. Major changes add plotAB() primarily used make “legacy” age bias plots Campana, removal “sunflower” plot option, new sets defaults many arguments reflect preferences visualizing age comparisons (includes defaulting plotting differences ages), addition ability add marginal histograms (xHist=, yHist=, col.hist=, hist.panel.size=), better handling axis ticks labels (primarily show ticks integers make sure 0 included differences), allowing ability add “summary layers” main plot (see allowAdd=). Many examples added. functionality previous versions broken. capFirst(): Modified. Changed ()s class()es inherits(). compIntercepts(): Modified. Replaced two dim() calls nrow(). fact2num(): Modified. Changed ()s class()es inherits(). lagratio(): Modified. Changed ()s class()es inherits(). iHndlCols2UseIgnore(): Modified. Changed ()s class()es inherits(). iLegendHelp(): Modified. Changed ()s class()es inherits(). iPredictBoot(): Modified. Changed ()s class()es inherits(). .CapHist(): Added. iTypeoflm(): Modified. Added catch linear model character variable (now alerts user warning). mrClosed(): Modified. Changed ()s class()es .CapHist(). mrOpen(): Modified. Changed ()s class()es .CapHist(). nlsTracePlot(): Modified. Changed ()s class()es inherits(). perc(): Modified. Changed ()s class()es inherits(). plotAB(): Added. See description ageBias(). plotBinResp(): Modified. Changed default transparency level calculated set maximum transparency 50 (changed 500). Fixed bug width proportions windows calculated default. changes affect fitPlot() logistic regression models. psdAdd(): Modified. Changed ()s class()es inherits(). residPlot(): Modified. Changed default loess= TRUE FALSE. Changed ()s class()es inherits(). wrAdd(): Modified. Changed ()s class()es inherits().","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0812","dir":"Changelog","previous_headings":"","what":"FSA 0.8.12","title":"FSA 0.8.12","text":"CRAN release: 2017-03-12 Lots spelling corrections running devtools::spell_check(). Cleaned issues testing files caused new version fishmethods changes R v3.4.0. metaM(): Modified. Changed T= Temp= reduce potential conflicts TRUE abbreviation. reproInfo(): Modified. Added ind= select CRAN mirror help common problem knitting. srStarts(): Modified. Corrected mis-spelling directive FSAsim package. vbStarts(): Modified. Added catch Linf automatically estimated fewer three ages. Corrected mis-spelling directive FSAsim package.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0811","dir":"Changelog","previous_headings":"","what":"FSA 0.8.11","title":"FSA 0.8.11","text":"CRAN release: 2016-12-13 Changed stop()s STOP()s warning()s WARN(). modified nearly functions. Changed paste()s used sep=\"\" paste0()s. Removed several sep=\"\"s message()s. Removed Hmisc , added epitools , imports. Removed links Hmisc remove CRAN check warnings. Reorganized testing files. Added many tests. .onAttach(): Modified. Streamlined package startup message. addZeroCatch(): Modified. Added “catches” bad data types arguments. ageBias(): Modified. Changed message()s summary() cat()s. agePrecision(): Modified. Changed message()s summary() cat()s. binCI(): Modified. Changed using binconf() Hmisc binom.exact(), binom.wilson(), binom.approx() epitools (removes dependency Hmisc causing problems). Allowed multiple types chosen. Now accepts whole numbers x n. Added verbose= result can include information returned epitools functions. Added catch bad conf.levels. Added tests. catchCurve(): Modified. Made sure coef() method returned vector (addresses #19). Modified confint() code efficiency, made sure matrix always returned. chapmanRobson(): Modified. Made sure coef() method returned vector (addresses #19). Modified confint() code efficiency, made sure matrix always returned. chooseColors(): Modified. Added rev= returning reverse ordered (default) colors. depletion(): Modified. Changed coef() method returned named vector (addresses #19). Modified confint() code efficiency, made sure matrix always returned. Removed type= match functions (incorporated functionality parm=). Removed digits= match functions. expandLenFreq(): Modified. Changed message()s cat()s. Removed “names” printed items cleaner look. fitPlot(): Modified. Added cex.leg= box.lty.leg= IVR plots. hist.formula(): Modified. Fixed bug adding horizontal line 0 user uses plot=FALSE, occurs hist.bootCase(). hyperCI(): Modified. Now accepts whole numbers M, n, m. Added catch bad conf.levels multiple values M, n, m. iAddLoessLine(): Modified. Changed used iMakeColor() col2rgbt(). iGetDecimals(): Modified. Added warning situations x presented exponential notation. Also returned decimal zero situation. Helps bug hist.formula(). iHndlCols2use(): Deleted. Changed iHndlCols2UseIgnore(). iHndlCols2UseIgnore(): Added. Previously iHndlCols2use(). Completely reworked catch problems including positive negative indices (fixes #24) choosing variable names don’t exist (fixes #25). iHndlFormula(): Modified. Added code deal formula single “variable” sent array. Addresses #21 simple situation single “variable.” iHndlMultWhat(): Modified. Added type= allow use message() cat(). iPlotExists(): Added. Helps bug fix hist.formula(). .wholenumber(): Added. Needed changes binCI(), hyperCI(), poiCI(). kCounts(): Modified. Fixed bug capitalize= zero. Streamlined code. Added tests. metaM(): Modified. Fixed bug way messages output multiple methods provided justM=FALSE. Added tests. mrClosed(): Modified. Added poi.type= handle new choices Poisson confidence interals. Added checks non-vector uses M= R= (partially addresses #22). Fixed bug inputs subgroups output summary() verbose=TRUE. mrOpen(): Modified. Changed message()s summary() cat()s. Fixed bug returned value summary() data.frame one parameter selected. nlsTracePlot(): Added. plotBinResp(): Modified. Changed used iMakeColor() col2rgbt(). poiCI(): Modified. Completely rebuilt use functions epitools. Now accepts whole numbers x. predict.bootCase(): Modified. Modified situations values dependent variable dots argument (occur making predictions Francis parameterization VBGF). predict.nlsBoot(): Modified. See note predict.bootCase(). psdCalc(): Modified. Fixed bug output two additional lengths supplied. removal(): Modified. Added check returned error method=\"Schnute\" last three catches zero (addresses #26) Fixed bug related sending catches one column data.frame. Fixed bug related selecting one parm= confint(). Added tests. residPlot(): Modified. Added cex.leg= box.lty.leg= IVR plots. Removed extra spaces main title main=\"MODEL\". Added tests. tictactoe(): Modified. Changed used iMakeColor() col2rgbt(). vbFuns(): Modified. Added Ogle list parameterizations. Changed order L0 K parameters returned function param=\"Original\". vbStarts(): Modified. Added methLinf= argument allows user choose Linf estimated Walford plot (methLinf=\"Walford\"; default old functionality), mean fish certain number old ages (methLinf=\"oldAge\"), mean certain number longest fish (methLinf=\"longFish\"). number ages long fish given num4Linf=. Added methods type=\"Ogle\".","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0810","dir":"Changelog","previous_headings":"","what":"FSA 0.8.10","title":"FSA 0.8.10","text":"CRAN release: 2016-09-24 alkIndivAge(): Modified. Added na.rm=TRUE checks minimum maximum length data. catchCurve(): Modified. Removed type= blended functionality parm= methods. Made parm= consistent across methods. chapmanRobson(): Modified. Added axis.age= argument allows user choose type x-axis displayed (see examples; addresses #20) Also modified code adds axes “look better” instances. Added na.rm=TRUE y-range calculation plot method. Added coef() method. Added parm= argument confint() summary() methods. Added tests. confint.nlsBoot(),confint.bootCase(). Modified. Result now matrix even one parameter chosen (previously unnamed vector). parm= now properly handles negative values. Streamlined plotting results. Added tests. depletion(): Modified. Checked bad conf.level= confint() method. GompertzFuns(): Modified. Fixed bug related selecting QuinnDeriso3. htest.nlsBoot(),htest.bootCase(). Modified. b0 now defaults 0. Matrix results now include parameter rowname. Modified internals data handled. Added tests. iAddLoessLine(): Modified. Suppressed warnings related loess line predictions. mrClosed(): Modified. Checked bad conf.level= confint() method. mrOpen(): Modified. Checked bad conf.level= confint() method. predict.nlsBoot(), predict.bootCase(). Modified. ... argument can now contain vector values predictions can made multiple values independent variable. Modified output matrix handle modification. Removed MARGIN always 1 nlsBoot bootCase objects. Added checks FUN=, conf.level=, digits=. Added tests. removal(): Modified. Checked bad conf.level= confint() method. Changed internal functions using loop using apply(). Changed internal functions using log() choose() using lchoose(). Summarize(): Modified. Added nvalid= percZero print nvalid percZero result “interesting” (.e., different n zero, respectively) default (may manually -ridden). Modified tests. vbStarts(): Modified. Added na.rm=TRUE checking Linf values.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-089","dir":"Changelog","previous_headings":"","what":"FSA 0.8.9","title":"FSA 0.8.9","text":"CRAN release: 2016-08-23 ageComparison(): Modified. Removed internal call fact2num() changes Summarize() . impact user experience. diags(): Added. gompertzFuns(): Modified. Fixed spacing around message msg=TRUE. logisticFuns(): Modified. Fixed spacing around message msg=TRUE. Summarize(): Modified. Removed uses main variable factor (functionality largely unneeded unused, inelegant difficult maintain). Removed pass-summary. Removed warnings RHS variables converted factors. Columns “levels” RHS variables now returned original model (.e., variable numeric original data.frame now numeric data.frame returned function) – reduce need using fact2num() using results function variables originally numeric. Added examples tests numeric data.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-088","dir":"Changelog","previous_headings":"","what":"FSA 0.8.8","title":"FSA 0.8.8","text":"CRAN release: 2016-07-18 growthFunShow(): Modified. Added Pauly et al. (1992) seasonal cessation function. Added case= use Schnute model. vbFuns(): Modified. Added Pauly et al. (1992) seasonal cessation function. Slightly modified messages “Typical” “Original” parameterizations. vbStarts(): Modified. Added fixed= user can define starting values. Added Pauly et al. (1992) seasonal cessation function. Added tests fixed=.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-087","dir":"Changelog","previous_headings":"","what":"FSA 0.8.7","title":"FSA 0.8.7","text":"CRAN release: 2016-05-08 Compiled R v3.3.0. Removed relax Suggests. See srStarts() vbStarts() notes . addresses #17. Removed gdata Imports. See filterD() Subset() notes . addresses #5. Added coverage blocks ageKeyPlot(), capHistSum(), hist.formula(), histFromSum(), lwCompPreds(), plot.agebias(), plot.CatchCurve(), plot.ChapmanRobson(), plot.Depletion(), plotBinResp(), print.compSlopes(), print.compIntercepts(), print.metaM(), psdPlot(),residPlot(), srModels(), srStarts(), vbStarts(). ageKey(): Removed. Deprecated since 0.4.24. Use alkIndivAge(). ageKeyPlot(): Removed. Deprecated since 0.4.24. Use alkPlot(). bcFuns(): Modified. Changed msg= verbose=. capHistSum(): Added tests. filterD(): Modified. Changed use droplevels() base rather drop.levels() gdata. Added except=. fitPlot(): Modified. Changed way colors, plotting characters, line types handled models. make use flexible. Fixed errors occurred IVR models factor variable preceded covariate model (fixes #18). Started add tests error warning messages. GompertzFuns(): Modified. Changed type= param=. GompertzModels(): Removed. Replaced growthFunShow(). iGetDecimals(): Modified. Fixed bug occured integer provided. lenFreqExpand(): Removed. Deprecated since 0.4.32. Use expandLenFreq(). logisticFuns(): Modified. Changed type= param=. LogisticModels(): Removed. Replaced growthFunShow(). residPlot(): Modified. Changed way colors, plotting characters, line types handled models. make use flexible. Now matches coding fitPlot(). Fixed bug main titling, now asks user decide want model call . Started add tests error warning messages. RichardsFuns(): Modified. Changed type= param=. RichardsModels(): Removed. Replaced growthFunShow(). growthFunShow(): Added. srFunShow(): Added. srModels(): Removed. Replaced srFunShow(). srStarts(): Modified. Removed dynamicPlot=TRUE option. Moved FSAsim package. Modified plot plot=TRUE adding “STARTING VALUES” title moving starting values within plot. Added cex.main= col.main=. Subset(): MOdified. Changed use droplevels() base rather drop.levels() gdata. vbFuns(): Modified. Changed type= param=. vbModels(): Removed. Replaced growthFunShow(). vbStarts(): Modified. Removed dynamicPlot=TRUE option. Moved FSAsim package. Added param= match vbXXX() (works type=). Modified plot plot=TRUE adding “STARTING VALUES” title moving starting values within plot. Added col.main=. Made warnings error tests explicit.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-086","dir":"Changelog","previous_headings":"","what":"FSA 0.8.6","title":"FSA 0.8.6","text":"CRAN release: 2016-03-25 Fixed problems tests, made tests explicit, related PSD Wr functions. Suppressed warnings related sumTable() ALK related tests Summarize() age comparisons tests. Prompted forthcoming changes testthat. Removed News.md .Rbuildignore (apparently now supported CRAN). alkPlot(): Modified. Changed xlim= ylim= work type=\"area\" type=\"bar\". fixes #10 (Thanks Joseph Feldhaus). hist.formula(): Modified. Added breaks= argument (mostly pass-) w= argument allows user just set width bins without set break value. complete #15. iCheckStartCatW(): Modified. Now use iGetDecimals() extract number decimals startcat w. iCheckStartcat(): Added. iCheckW(): Added. iGetDecimals(): Added. lencat(): Modified. Changed order startcat= breaks=. Slight modifications documentation. psdAdd(): Modified. Minor changes documentation. psdPlot(): Modified. Fixed bug related PSD values printed PSD-Q existed (needed add drop0Est=FALSE psdCalc() call; fixes #13). Made histogram bars flush x-axis rather hovering (added yaxis=\"\" hist(); fixes #12). Minor changes documentation. psdVal(): Modified. Minor changes documentation. purl2(): Modified. Added delHeader= argument functionality.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-085","dir":"Changelog","previous_headings":"","what":"FSA 0.8.5","title":"FSA 0.8.5","text":"CRAN release: 2016-02-14 Added URL fishR webpage DESCRIPTION per CRAN request. Removed URL field DESCRIPTION. Updated references Ogle (2016) documentation. ageBias(): Modified. Minor corrections documentation. agePrecision(): Modified. Fixed bug related computations percent agreement NA values present. inconsistency =\"precision\" =\"difference\" used summary(). bug fix now properly divides “valid sample size” =\"precision\". fixes #9 (Thanks Joseph Feldhaus). Now returns validn. Modifications documentation. histFromSum(): Added. Addresses #4. metaM(): Modified. Changed order methods methods=. Minor corrections additions documentation. mrClosed(): Modified. Now sends warning NA appears first position m, first position M, last position R converts 0 procedure can continue. positions ignored calculations. fixes #8 (Thanks Joe Mrnak). reproInfo(): Modified. Made changes iGetAllDependencis() based forthcoming changes package.dependencies() (notified CRAN). vbStarts(): Modified. Fixed bug dynamicPlot=TRUE used.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-084","dir":"Changelog","previous_headings":"","what":"FSA 0.8.4","title":"FSA 0.8.4","text":"CRAN release: 2015-12-21 Now using Roxygen2 v5.0.1. Removed requireNamespaces() functions moved packages Suggests Imports functions work better packages. requireNamespaces() remain related functions require relax package (tcltk installed needed) knitr, dunn.test, lmtest unlikely used packages keep packages loaded FSA minimum. Packages moved Suggests Depends Hmisc (use binCI), gdata (use filterD() Subset()), dplyr (use filterD()), sciplot (use fitPlot()), car (use residPlot()), gplots (use colors). addZeroCatch(): Modified tests (reduce warnings part tests). geomean(): Added. geosd(): Added. lencat(): Modified. Fixed bug related using tbl_df object. sumTable(): Modified tests (dimnames()).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-083","dir":"Changelog","previous_headings":"","what":"FSA 0.8.3","title":"FSA 0.8.3","text":"CRAN release: 2015-10-23 Removed vignetteBuilder DESCRIPTION (remnant vignette built removed) request CRAN.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-082","dir":"Changelog","previous_headings":"","what":"FSA 0.8.2","title":"FSA 0.8.2","text":"Date: 22-Oct-15 Converted files data-raw CSV files. Removed \\href{}{} \\url{} codes websites don’t control. addresses now “naked” user need copy--paste browser view web page rather clicking hyper link. Hopefully eliminate problems R CMD CHECK. ChinookArg: Updated help documentation. Ecoli: Added Topics section. Mirex: Added Topics section. PikeNYPartial1: Updated help documentation. SpotVA1: Updated help documentation.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-081","dir":"Changelog","previous_headings":"","what":"FSA 0.8.1","title":"FSA 0.8.1","text":"CRAN release: 2015-10-10 col2rgbt(): Added. compIntercepts(): Added. compSlopes(): Added.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-080-8","dir":"Changelog","previous_headings":"","what":"FSA 0.8.0 8","title":"FSA 0.8.0 8","text":"CRAN release: 2015-10-08 Added suggests dunn.test use dunnTest() (see ). agePrecision(): Modified. Changed combn() utils::combn() sd() utils::sd() (within apply()). catchCurve(): Modified. Changed na.exclude() stats::na.exclude(). dunnTest(): Modified. Changed throughly use dunn.test() dunn.test. Added two.sided= argument dunnTest() dunn.test.results= print.dunnTest(). expandLenFreq(): Modified. Changed runif() stats::runif(). extraSS(): Modified. Changed anova() stats::anova() lapply(). fishR(): Modified. Changed browseURL() utils::browseURL(). fsaNews(): Modified. Changed browseURL() utils::browseURL(). headtail(): Modified. Changed head() utils::head() tail() utils::tail(). hist.bootCase(): Modified. Changed hist() hist.formula(). iAgeBiasPlot(): Modified. Changed grconvertY() graphics::grconvertY(). iALKMean.QD(): Modified. Changed var() stats::var() (within sumTable()). iBubblesAdd(): Modified. Changed rgb() grdevices::rgb(). iChkComplexModel(): Modified. Changed df.residual() stats::df.residual(). iCIboot(): Modified. Changed hist() hist.formula(). iEvent2Indiv(): Modified. Changed unstack() utils::unstack(). iGetAllDependencies(): Modified. Changed installed.packages() utils::installed.packages(). iHistResids(): Modified. Removed graphics::hist() changed hist.formula(). iHndlFormula(): Modified. Changed terms() stats::terms(). iHndlResidType(): Modified. Changed rstandard() stats::rstandard() rstudent() stats::rstudent(). iHtestBoot(): Modified. Removed graphics::hist() changed hist.formula(). iMakeColor(): Modified. Changed rgb() grdevices::rgb(). iMakeModelHeading(): Modified. Changed formula() stats::formula() (within lapply()). iMoran(): Modified. Changed optimize() grdevices::optimize(). iProcessSessionInfo(): Modified. Changed sessioninfo() utils::sessioninfo(). iSchnute(): Modified. Changed optimize() grdevices::optimize(). iTypeoflm(): Modified. Changed formula() stats::formula(). plot.AgeBias(): Modified. Changed rgb() grdevices::rgb(). plot.CatchCurve(): Modified. Changed predict() stats::predict(). print.extraTest(): Modified. Changed printCoefMat() stats::printCoefMat(). psdAdd(): Modified. Changed data() utils::data(). psdVal(): Modified. Changed data() utils::data(). reproInfo(): Modified. Changed graphics.() grdevices::graphics.(). removal(): Modified. Removed examples help page reduce elapsed time CRAN. vbStarts(): Modified. Changed rgb() grdevices::rgb(). wrAdd(): Modified. Changed data() utils::data(). wsVal(): Modified. Changed data() utils::data(). test_AgeLengthKey: Modified. Altered tests used == use expect_equivalent() uses .equal() check.attributes=FALSE. test_PSD: Modified. Altered tests used == use expect_equivalent() uses .equal() check.attributes=FALSE.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0711","dir":"Changelog","previous_headings":"","what":"FSA 0.7.11","title":"FSA 0.7.11","text":"Date: Oct15 Converted .txt files .Rda files. Original .txt files data-raw directory added .Rbuildignore.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0710","dir":"Changelog","previous_headings":"","what":"FSA 0.7.10","title":"FSA 0.7.10","text":"Date: Oct15 purl2(): Added newname= allow output file name intput file. reproInfo(): Added markdown = types.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-079","dir":"Changelog","previous_headings":"","what":"FSA 0.7.9","title":"FSA 0.7.9","text":"Date: Sep15 Updated README.md DESCRIPTION new websites. Changed references WordPress site new website. Removed links specific IFAR chapters. Changed e-mail address. Created link references IFAR book page. fishR(): Modified. Updated new websites.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-078","dir":"Changelog","previous_headings":"","what":"FSA 0.7.8","title":"FSA 0.7.8","text":"Date: Sep15 ageComparison(): Modified. Changed =\"McNemars\" =\"Bowkers\" =\"McNemar\" =\"Bowker\". Fixed bug ages NA. catchCurve(): Modified. Fixed bug related NA values catch vector. chapmanRobson(): Modified. Fixed bug related NA values catch vector. validn(): Modified. Fixed bug related 1-dimensional numeric vector recognized vector.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-077","dir":"Changelog","previous_headings":"","what":"FSA 0.7.7","title":"FSA 0.7.7","text":"Date: Aug15 ageBias(): Modified. Changed default pch.mean= 95 (175). = one item, results now invisibly returned results can saved object. agePrecision(): Modified. Added trunc.diff=. = one item, results now invisibly returned results can saved object. mapvalues(): Modified. Corrected export properly. removal(): Modified. Minor edits labels verbose=TRUE. Added tests. vbStarts(): Modified. Made yngAge default meth0=. Fixed bug occured meth0='yngAge' sample sizes ages 1.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-076","dir":"Changelog","previous_headings":"","what":"FSA 0.7.6","title":"FSA 0.7.6","text":"Date: Aug15 Summarize(): Modified. Converted using iHndlFormula(). Changed output quantitative data (validn always returned, NAs never returned). Changed output two-way factor data (returned character formatC()). Removed ... code several places buggy used. Added checks modified check messages. Fixed bug 1-d matrix characters sent. Added tests. sumTable(): Modified. Converted using iHndlFormula(). Added tests.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-075","dir":"Changelog","previous_headings":"","what":"FSA 0.7.5","title":"FSA 0.7.5","text":"Date: Aug15 addRadCap(): Modified. Streamlined code. Changed default .pre= NULL (inc). Added tests returned data. BluegillLM: Removed. Moved FSAdata. gConvert(): Modified. Streamlined code. Changed type= .type=. Changed default .pre= .var= NULL (missing). Changed code handle changes .pre= .var=. Added tests returned data. gReshape(): Removed. Moved FSAmisc.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-074","dir":"Changelog","previous_headings":"","what":"FSA 0.7.4","title":"FSA 0.7.4","text":"Date: Aug15 binCI(): Modified. Check forHmisc requireNamespaces() processing body function. allowed moving Hmisc Suggests declarations rather Imports. chooseColors(): Modified. Check forgplots requireNamespaces() processing body function. allowed moving gplots Suggests declarations rather Imports. filterD(): Modified. Check dplyr gdata requireNamespaces() processing body function. allowed moving dplyr gdata Suggests declarations rather Imports. fitPlot(): Modified. Check forsciplot requireNamespaces() adding intervals tot plot. allowed moving sciplot Suggests declarations rather Imports. lrt(): Modified. Check forlmtest requireNamespaces() processing body function. allowed moving lmtest Suggests declarations rather Imports. mapvalues(): Modified. Changed direct importFrom export without creating help file FSA. purl2(): Modified. Check forknitr requireNamespaces() processing body function. allowed moving knitr Suggests declarations rather Imports. residPlot(): Modified. Check forcar requireNamespaces() highlighting outliers plot. allowed moving sciplot Suggests declarations rather Imports. srStarts(): Modified. Check forrelax requireNamespaces() constructing dynamic plot. allowed moving relax Suggests declarations rather Imports. Subset(): Modified. Check forgdata requireNamespaces() processing body function. allowed moving gdata Suggests declarations rather Imports. vbStarts(): Modified. Check forrelax requireNamespaces() constructing dynamic plot. allowed moving relax Suggests declarations rather Imports.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-073","dir":"Changelog","previous_headings":"","what":"FSA 0.7.3","title":"FSA 0.7.3","text":"Date: Aug15 Removed importFrom() directives went hard-wiring packages ::. Added imports() directives stats, graphics, tools, grDevices. Removed imports() directive multcomp(). vbStarts(): Modified. Changed default methos methEV=. Changed order starting values type=\"Mooij\" order match vbFuns(). also fixed bug dynamicPlot=TRUE used type=\"Mooij\". Added tests determine parameter order vbStarts() vbFuns() parameterizations.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-072","dir":"Changelog","previous_headings":"","what":"FSA 0.7.2","title":"FSA 0.7.2","text":"Date: Jul15 ageBias(): Modified. Corrected bug labeling x-axis age-bias plot ref.lab= nref.lab= given user. Changed default nYpos= 1.1 1.03. Added cex.n= allow control size sample size labels. agePrecision(): Modified. Changed =\"detail\" =\"details\". Note =\"detail\" still works. dunnTest(): Modified. Added note help file use complete cases. Suggested Paule Bodson-Clermont. vbFuns(): Modified. Added Original Typical type= options. allows capitalized uncapitalized version two parameterizations. vbModels(): Modified. Changed order Original Typical (Typical now shown first). Fixed error equation Weisberg parameterization displayed. vbStarts(): Modified. Added cex.main= argument defaulted 0.75. Added raw=TRUE poly() used meth0=\"poly\". Added Original Typical type= options. allows capitalized uncapitalized version two parameterizations.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-071","dir":"Changelog","previous_headings":"","what":"FSA 0.7.1","title":"FSA 0.7.1","text":"Date: Jul15 ageBias(): Modified. Moved single file agePrecision(). Cleaned-help file. change behavior. agePrecision(): Modified. Moved single file ageBias(). Cleaned-help file. change behavior. alkAgeDist(): Modified. Moved single file alkMeanVar(). Cleaned-help file. Added error/warning tests. change behavior. alkIndivAge(): Modified. Clean-help file. Added stronger test type=\"SR\" method. change behavior. alkMeanVar(): Modified. Moved single file alkAgeDist(). Cleaned-help file. change behavior. alkPlot(): Cleaned-help file tests. change behavior. confint.bootCase(): Modified. Created common internal function use confint.nlsBoot(). Added ability plot histograms confidence intervals superimposed (similar confint.nlsBoot()). confint.nlsBoot(): Modified. Created common internal function use confint.bootCase(). GompertzFuns(): Moved growthModels file. change behavior. gompertzModels(): Modified. Changed type= family= avoid confusion help file type= gompertzFuns(). Moved growthModels file. growthRadPlot(): Deleted. Moved FSAmisc package. hist.formula(): Modified. Fixed ymax= also sets y-axis limit one histogram made (previously ignored). htest.bootCase(): Modified. Created common internal function use htest.nlsBoot(). htest.nlsBoot(): Modified. Created common internal function use htest.bootCase(). iHndlFormula(): Modified. Added na.action=NULL model.frame() NA values omitted. logisticFuns(): Moved growthModels file. change behavior. logisticModels(): Modified. Changed type= family= avoid confusion help file type= logisticFuns(). Moved growthModels file. predict.bootCase(): Modified. Created common internal function use predict.nlsBoot(). predict.nlsBoot(): Modified. Created common internal function use predict.bootCase(). psdAdd(): Modified. Fixed bug never tested lengths NA. Required change iHndlFormula. RichardsFuns(): Moved growthModels file. Changed param= type= better match similar functions. RichardsModels(): Moved growthModels file. change behavior. Schnute(): Moved growthModels file. Changed param= type= better match similar functions. SchnuteModels(): Moved growthModels file. change behavior. vbFuns(): Moved growthModels file. change behavior. vbModels(): Modified. Changed type= family= avoid confusion help file type= vbFuns(). Moved growthModels file.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-070","dir":"Changelog","previous_headings":"","what":"FSA 0.7.0","title":"FSA 0.7.0","text":"Date: Jul15 Fixed description title case. Fixed reference fishR page description file. Fixed several URL references, deleted others changed longer available. Updated CITATION file (remove CRAN note). hist.formula(): Modified. Rebuilt use iHndlFormula(). Modified xlab= used (result ). Added tests. ksTest(): Modified. Rebuilt use iHndlFormula(). Added tests messages make sure results matched ks.test().","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0625","dir":"Changelog","previous_headings":"","what":"FSA 0.6.25","title":"FSA 0.6.25","text":"Date: Jul15 alkPrep(): Deleted. Moved FSAmisc package (GitHub). changesPos(): Deleted. Moved FSAmisc package (GitHub). chapmanPlot(): Deleted. Moved FSAmisc package (GitHub). dietOverlap(): Deleted. Moved FSAmisc package (GitHub). Garvey1: Deleted. Moved FSAmisc package (GitHub). Garvey4a: Deleted. Moved FSAmisc package (GitHub). KS2D_NR: Deleted. Moved FSAmisc package (GitHub). ks2d1(): Deleted. Moved FSAmisc package (GitHub). ks2d1p(): Deleted. Moved FSAmisc package (GitHub). ks2d2(): Deleted. Moved FSAmisc package (GitHub). ks2d2p(): Deleted. Moved FSAmisc package (GitHub). popSizesPlot(): Deleted. Moved FSAmisc package (GitHub). posadj(): Deleted. Moved FSAmisc package (GitHub). TroutDietSL: Deleted. Moved FSAmisc package (GitHub). walfordPlot(): Deleted. Moved FSAmisc package (GitHub).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0624","dir":"Changelog","previous_headings":"","what":"FSA 0.6.24","title":"FSA 0.6.24","text":"Date: Jun15 alkIndivAge(): Modified. Switched using iHndlFormula() beginning. Added checks tests. expandLenFreq(): Modified. Added checks. Added tests. wsVal(): Modified. Added tests.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0623","dir":"Changelog","previous_headings":"","what":"FSA 0.6.23","title":"FSA 0.6.23","text":"Date: Jun15 ageBias(): Modified. Fixed bugs related axes numbers plot sunflower plot. filterD(): Modified. Added reorder=FALSE drop.levels() order levels changed levels dropped. residPlot.nlme(): Added.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0622","dir":"Changelog","previous_headings":"","what":"FSA 0.6.22","title":"FSA 0.6.22","text":"Date: Jun15 extraSS(): Modified. Added sim.name= allow common typing mistake. logbtcf(): Modified. Slight change handle check lm class. lrt(): Modified. Added sim.name= allow common typing mistake. pcumsum(): Modified. Modified handle table, matrix, data.frame classes long 1-dimensional. rcumsum(): Modified. Modified handle table, matrix, data.frame classes long 1-dimensional. srStarts(): Modified. Corrected bugs related checks. Added tests.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0621","dir":"Changelog","previous_headings":"","what":"FSA 0.6.21","title":"FSA 0.6.21","text":"Date: Jun15 addRadCap(): Modified. Modified .pre= string must start variable names. Added check .pre= string exist start variable names. Added check whether .var= variables exist. Added simple tests (need ). bcFuns(): Modified. Removed type=; BCM= can now either numeric string. Allowed string case (converted required upper-case). Corrected errors msg=TRUE. Added simple tests. gConvert(): Modified. Modified .pre= string must start variable names. Added check .pre= string exist start variable names. Added simple tests (need ). gReshape(): Modified. Modified .pre= string must start variable names. Added check .pre= string exist start variable names. Added simple tests (need ).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0620","dir":"Changelog","previous_headings":"","what":"FSA 0.6.20","title":"FSA 0.6.20","text":"Date: Jun15 gompFuns(): Deleted. gompModels(): Deleted. GompertzFuns(): Added. Replaced gompFuns(). Added type=\"Troynikov1\" type=\"Troynikov1\". GompertzModels(): Added. Replaced gompModels(). Added cex= type=. logisticFuns(): Modified. Changed type=\"Richards\" type=\"Karkach\". Added type=HaddonI. logisticModels(): Modified. Added “Karkach” model. Added cex= type=. RichardsFuns(): Modified. Added two parameterizations Tjorve Tjorve (2010). schnute(): Deleted. schnuteModels(): Deleteed. Schnute(): Added. Replaced schnute(). Fixed bugs way t1= t3= handled. SchnuteModels(): Added. Replaced schnuteModels(). Added cex=. vbFuns(): Modified. Added type=\"Polacheck\" equivalent type=\"Laslett\". Added new reference help file. vbModels(): Modified. Added cex= type=.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0619","dir":"Changelog","previous_headings":"","what":"FSA 0.6.19","title":"FSA 0.6.19","text":"Date: Jun15 RichardsFuns(): Added. RichardsModels(): Added.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0618","dir":"Changelog","previous_headings":"","what":"FSA 0.6.18","title":"FSA 0.6.18","text":"Date: Jun15 Changed nearly “messages” using cat() using message() can suppressed suppressMessage() message=FALSE knitr. See “One comment messages” http://yihui.name/knitr/demo/output/. Specific functions modified listed . ageBias(): Modified. Changed cat() message()s. Changed messages (result headers) printed = contains one item. agePrecision(): Modified. Changed cat() message()s. Changed messages (result headers) printed = contains one item. bcFuns(): Modified. Changed cat() message()s. chapmanRobson(): Modified. Changed cat() message()s. Deleted “Estimates Standard Errors” message. depletion(): Modified. Changed cat() message()s. dietOverlap(): Modified. Changed cat() message()s. Slightly modified messages. expandLenFreq(): Modified. Changed cat() message()s. Fixed bug one messages. ks2d1(): Modified. Rewrote print() method. removed number cat()s. ks2d1p(): Modified. Rewrote print() method. removed number cat()s. ks2d2(): Modified. Rewrote print() method. removed number cat()s. ks2d2p(): Modified. Rewrote print() method. removed number cat()s. metaM(): Modified. Changed cat() message()s. mrOpen(): Modified. Changed cat() message()s. removal(): Modified. Changed cat() message()s. srFuns(): Modified. Changed cat() message()s. Created tests.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0617","dir":"Changelog","previous_headings":"","what":"FSA 0.6.17","title":"FSA 0.6.17","text":"Date: Jun15 extraSS(): Modified. Added message tests calculational tests (compared anova() results). gompFuns(): Modified. Changed cat()s message()s slightly modified messages. Fixed minor bugs created functions. Created tests. logisticFuns(): Modified. Changed cat()s message()s slightly modified messages. Fixed minor bugs created functions. Created tests. lrt(): Modified. Added message tests calculational tests (compared lrtest() lmtest package results). vbFuns(): Modified. Changed cat()s message()s slightly modified messages. Fixed minor bugs created functions. Created tests.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0616","dir":"Changelog","previous_headings":"","what":"FSA 0.6.16","title":"FSA 0.6.16","text":"Date: Jun15 extraSS(): Modified. Added sim_names= com_name= simple descriptive names given model printed heading output. Added checks whether complex model appears complex . Added tests warning error messages. fishR(): Modfiied. Fixed bug =\"news\". Added tests. fitPlot(): Modified. Added ability modify y-axis limits nonlinear regression model. Thanks Gabriela N. asking . hoCoef(): Modified. Changed lmobj= object=, added degrees--freedom output matrix, streamlined code, added checks, added tests. lrt(): Modified. Added sim_names= com_name= simple descriptive names given model printed heading output. Added checks whether complex model appears complex . Added tests warning error messages.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0615","dir":"Changelog","previous_headings":"","what":"FSA 0.6.15","title":"FSA 0.6.15","text":"Date: Jun15 addZeroCatch(): Modified. Deleted extraneous print() statement. lencat(): Modified. Major re-write make easier trouble-shoot. Fixed bug related empty category end .fact=TRUE use.names=TRUE. Added tests. psdCalc(): Modified. Removed extra open-ended category (e.g., PSD-T-) PSD intervals.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0614","dir":"Changelog","previous_headings":"","what":"FSA 0.6.14","title":"FSA 0.6.14","text":"Date: May15 Added travis-ci integration. Added coveralls integration. Added importFrom mapvalues() plyr. changesPos(): Modified. Added checks error messages. Added suite tests. chooseColors(): Modified. Added checks error messages. Added suite tests. confint.nlsBoot():Modified. Fixed bug maximum number parm= greater number parameters model. dunnTest(): Modified. Change class type DunnTest dunnTest eliminate conflict DunnTest() DescTools package. Thanks Sal Mangiafico pointing conflict. fact2num(): Modified. Added checks error messages. Added suite tests. filterD(): Modified. Changed using drop.levels gdata rather droplevels. Added warning resultant data.frame zero rows (Subset). Added checks error messages. Added suite tests. fitPlot(): Modified. Replaced use nobs() gdata internal function iCIfp1() validn(). removed one dependency gdata. headtail(): Modified. Internally remove tbl_df class (dplyr) exists. Added checks error messages. Added suite tests. lagratio(): Modified. Corrected incorrect explanation differences= help file. Added recursion= direction=. Added suite tests. mapvalues(): Deleted. Deleted function FSA imported plyr exported FSA available fisheries users without load plyr. oddeven(): Modified. Added checks error messages. Added suite tests. perc(): Modified. Added ability use “equals” items dir= (.e., now four items dir=). Fixed bug related using na.rm=FALSE “less ” situation. Added checks error messages. Added suite tests. pcumsum(): Modified. Added checks error messages. Added suite tests. rcumsum(): Modified. Added checks error messages. Added suite tests. se(): Modified. Added checks error messages. Added suite tests. Subset(): Modified. Added checks error messages. Added suite tests. validn(): Modified. Added checks error messages. Added suite tests.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0613","dir":"Changelog","previous_headings":"","what":"FSA 0.6.13","title":"FSA 0.6.13","text":"Date: May15 miscellaneous reorganizations files. ageBias(): Modified. Corrected bugs show.pts=TRUE “sunflower plot” came changes made version 0.5.1. residPlot(): Modified. Deleted student=. Added resid.type= allows used standardized (internally studentized) (externally) studentized residuals linear models (along raw residuals). Added code following nlsResiduals() nlstools standardized residuals nonlinear models.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0612","dir":"Changelog","previous_headings":"","what":"FSA 0.6.12","title":"FSA 0.6.12","text":"Date: May15 gompFuns(): Added. gompModels(): Added. logisticFuns(): Added. logisticModels(): Added. reproInfo(): Modified. Added = argument allow output straight R LaTeX. Removed listFiles= argument. Changed output succinct. Streamlined code. vbFuns(): Modified. Fixed bug Laslett model.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0611","dir":"Changelog","previous_headings":"","what":"FSA 0.6.11","title":"FSA 0.6.11","text":"Date: Apr15 kCounts(): Added. swvCounts(). kPvalue(): Added. swvPvalue(). purl2(): Added. swvCode(). Added timestamp= argument adding timestamp created script. reproInfo(): Added. swvFinish(). swvANOVA(): Deleted. Moved NCStats. swvCode(): Deleted. Changed purl2(). swvCounts(): Deleted. Changed kCounts(). swvFinish(): Deleted. Changed reproInfo(). swvGLHT(): Deleted. Moved NCStats. swvHtest(): Deleted. Moved NCStats. swvPvalue(): Deleted. Changed kPvalue(). swvREG(): Deleted. Moved NCStats.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0610","dir":"Changelog","previous_headings":"","what":"FSA 0.6.10","title":"FSA 0.6.10","text":"Date: Apr15 Compiling R 3.2.0. Added cross-reference links help files. Remove fishR vignette section added IFAR Chapter section help files. fishR(): Modified. Added IFAR option. Updated code simple.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-065","dir":"Changelog","previous_headings":"","what":"FSA 0.6.5","title":"FSA 0.6.5","text":"Date: Apr15 Last version submission first draft Introductory Fisheries Analyses R. capHistConvert(): Modified. Added warning section example problems can occur data event format event variable contains unused levels may occur following subsetting. Thanks Joseph Feldhaus pointing problem. extraSS(): Modified. Changed algorithm determine models class . modification allows model multiple classes. iHndlCols2Use (Intrnal Function): Modified. Fixed bug columns selected. Added suite tests function. fix bugs capHistConvert() capHistSum(). Thanks Joseph Feldhaus pointing egregious error. lrt(): Modified. Changed algorithm determine models class . modification allows model multiple classes.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-064","dir":"Changelog","previous_headings":"","what":"FSA 0.6.4","title":"FSA 0.6.4","text":"Date: Apr15 Changed using LazyData: true. se(): Added. Removed importFrom se() sciplot.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-063","dir":"Changelog","previous_headings":"","what":"FSA 0.6.3","title":"FSA 0.6.3","text":"Date: Apr15 modifications tests. plot.capHist(): Modified. Changed default plot look can now controlled pch=, cex.pch=, lwd=. Modified two y-axis scales use plotmath characters.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-062","dir":"Changelog","previous_headings":"","what":"FSA 0.6.2","title":"FSA 0.6.2","text":"Date: Mar15 capHistConvert(): Modified. Streamlined code around creating var.lbls. Made event default value var.lbls.pre=. Added checks var.lbls.pre= starts number many values. Added cols2use= modified use cols2ignore= via iHndlCols2use(). capHistSum(): Modified. iHndlCol2use(): Added. Added internal function handle cols2use= cols2ignore= capHistConvert() capHistSum().","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-061","dir":"Changelog","previous_headings":"","what":"FSA 0.6.1","title":"FSA 0.6.1","text":"Date: Mar15 catchCurve(): Modified. Changed ages2use= handled negative values can used exclude ages. also now send error mix positive negative ages sent ages2use=. Better handled situation ages2use= ages age variable. Checked non-positive weights weighted=TRUE returned warning changed non-positive weights minimum positive weights. chapmanRobson(): Modified. Changed ages2use= handled negative values can used exclude ages. also now send error mix positive negative ages sent ages2use=. Better handled situation ages2use= ages age variable. expandCounts(): Modified. Changed ``message()’’s printed end instead along way. reduces confusion appear messages success followed error. Thanks Dan Oele bringing confusion attention. plotBinResp(): Modified. Changed way breaks calculated (uses lencat() now).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-060","dir":"Changelog","previous_headings":"","what":"FSA 0.6.0","title":"FSA 0.6.0","text":"Date: Mar15 updated DESCRIPTION file (following – http://r-pkgs..co.nz/description.html srFuns(): Modified. Changed function returned simplify=FALSE parameters named name dropped. Thus, function used, returned result annoyingly named first parameter. Added functionality “density-independence” model. srStarts(): Modified. Added functionality “density-independence” model. vbFuns(): Modified. Changed function returned simplify=FALSE parameters named name dropped. Thus, function used, returned result annoyingly named first parameter.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-053","dir":"Changelog","previous_headings":"","what":"FSA 0.5.3","title":"FSA 0.5.3","text":"Date: Mar15 growthModelSim(): Deleted. simulation functionality moved FSAsim package. functionality related finding starting values von Bertalanffy modesl moved vbStarts(). srFuns(): Modified. complete rebuild make similar vbFuns(). Added simple=. Added type='Shepherd' Shepherd (1982) three parameter model type='SailaLorda' “Saila-Lorda” three parameter model Iles (1994). Added tests error messages. srModels(): Modified. complete rebuild make similar growthModels(). Added “Shepherd” “Saila-Lorda” models. srSims(): Deleted. simulation functionality moved FSAsim package. functionality related finding starting values moved srStarts(). srStarts(): Modified. complete rebuild streamline. Removed default method (.e., formula must used now). Added “Shepherd” “Saila-Lorda” models. Modified plotting routine, including adding col.mdl=, lwd.mdl=, lty.mdl=. Moved dynamic modeling aspects srSim() function called new argument dynamicPlot=TRUE. Also added minmax.ratio= delta.prop= use dynamic plots. vbStarts(): Modified. complete rebuild streamline fix bugs found. Modified plotting routine, including adding col.mdl=, lwd.mdl=, lty.mdl=. Also added von Bertalanffy parameterizations growthModelSim() function called new argument dynamicPlot=TRUE. Added dynamics plots “Francis” “Schnute” parameterizations.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-052","dir":"Changelog","previous_headings":"","what":"FSA 0.5.2","title":"FSA 0.5.2","text":"Date: Mar15 psdPlot(): Modified. Fixed bug related NAs max.brks variable.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-051","dir":"Changelog","previous_headings":"","what":"FSA 0.5.1","title":"FSA 0.5.1","text":"Date: Mar15 ageBias(): Modified. Reversed order formula … now nrefvar~refvar. closely matches R functions tilde may interpreted word “”. words, formula now reads “nonreference variable reference variable” (.e., Y X). Thanks Richard McBride suggestion. Modified age-bias plot extensively … added sfrac= defaulted 0 remove ends confidence intervals, added cex.mean= control size symbol mean point, added lwd= controland set lwd defaults 1. agePrecision(): Modified. Changed “CV” results “ACV”.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0451","dir":"Changelog","previous_headings":"","what":"FSA 0.4.51","title":"FSA 0.4.51","text":"Date: Mar15 catchCurve(): Modified. Updated help file regarding zmethod=\"Smithetal\".","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0450","dir":"Changelog","previous_headings":"","what":"FSA 0.4.50","title":"FSA 0.4.50","text":"Date: Mar15 capFirst(): Modified. Added check make sure inputted object either character factor class. Added code return object class original object. lencat(): Modified. Added catch bad choices arguments. Added catch send warning vector contains NA values (happens lencat() used within loop part psdAdd()). Added tests error warning messages. Changed formula handled formula method. psdAdd(): Modified. Fixed bug names using labels. Added verbose=. Added catches sent messages verbose=TRUE Gabelhouse lengths know species lengths species missing (see note lencat() ). PSDlit: Modified. Fixed trophy length White Bass (15 18). solved bug related non-unique breaks.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0449","dir":"Changelog","previous_headings":"","what":"FSA 0.4.49","title":"FSA 0.4.49","text":"Date: Mar15 expandCounts(): Modified. Made message regarding rows zero counts useful. Added missing counts catch zero counts. Made changes handle “odd” data entries (see “details” help file). Made tests. Added tests.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0448","dir":"Changelog","previous_headings":"","what":"FSA 0.4.48","title":"FSA 0.4.48","text":"Date: Mar15 psdCalc(): Modified. Corrected “bug” units=. Also modified warning message “stock” fish present data.frame note units= used (.e., problem likely happen data inches user uses default units='mm'). Thanks S. Mather inspring fix.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0447","dir":"Changelog","previous_headings":"","what":"FSA 0.4.47","title":"FSA 0.4.47","text":"Date: Feb15 dunnTest(): Modified. Corrected “bug” order groups subtracted (.e., flipped).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0446","dir":"Changelog","previous_headings":"","what":"FSA 0.4.46","title":"FSA 0.4.46","text":"Date: Feb15 catchCurve(): Modified. Changed default pos.est= topright. Added cex.pos= (set default slightly smaller value). chapmanRobson(): Modified. Changed default pos.est= topright. Added cex.pos= (set default slightly smaller value).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0445","dir":"Changelog","previous_headings":"","what":"FSA 0.4.45","title":"FSA 0.4.45","text":"Date: Feb15 hist.formula(): Modified. Changed use par() eliminate modifications gridding plots function complete. Also removed setting mar= mgp= par(). mrOpen(): Modified. Removed pretty printing summary() confint() methods. got way able cbind() results together succinct display. residPlot(): Modified. Changed use par() eliminate modifications gridding plots function complete.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0444","dir":"Changelog","previous_headings":"","what":"FSA 0.4.44","title":"FSA 0.4.44","text":"Date: Feb15 .onAttach(): Modified. Centered message adjusted different lengths version numbers. alkPlot(): Modified. Fixed bug using add=TRUE type=\"bubble\". capHistSum(): Modified. Changed return par() options function called. catchCurve(): Modified. Changed plot() default slighly lighter colored dots black line. chapmanRobson(): Modified. Changed plot() default slighly lighter colored dots. Changed return par() options function called. growthModelSim(): Modified. Changed return par() options function called. growthRadPlot(): Modified. Changed return par() options function called. hist.formula(): Modified. Changed return par() options function called. lwCompPreds(): Modified. Changed quant.lens= qlens=. Changed default qlens= 5th 95th percentiles rather minimum maximum values. Added qpens.dec= user control number decimals lengths derived qlens=. srSim(): Modified. Changed return par() options function called.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0443","dir":"Changelog","previous_headings":"","what":"FSA 0.4.43","title":"FSA 0.4.43","text":"Date: Feb15 mrOpen(): Modified. Changed summary() confint() methods allow single, multiple, choices parameters return results . Also added code print results prettily. swvCode(): Modified. Fixed bug related blanks='extra'.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0442","dir":"Changelog","previous_headings":"","what":"FSA 0.4.42","title":"FSA 0.4.42","text":"Date: Feb15 filterD(): Added.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0441","dir":"Changelog","previous_headings":"","what":"FSA 0.4.41","title":"FSA 0.4.41","text":"Date: Jan15 catchCurve(): Modified. Removed use larger points plot(). chapmanRobson(): Modified. Removed use larger points plot(). metaM(): Modified. Deleted group= (created method=\"ZhangMegreyD\" method=\"ZhangMegreyP\"). Added geometric mean regresson methods Hoenig. Changed default justM= TRUE. Fixed several minor bugs original implementation. Added checks reasonableness arguments. Created tests several methods see results matched Kenchington (2014). Added code compute several methods . Mmethods(): Added. Added function removed vector.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0440","dir":"Changelog","previous_headings":"","what":"FSA 0.4.40","title":"FSA 0.4.40","text":"Date: Jan15 lencat(): Modified. Fixed bug occurred breaks= given vector contained NAs. Thanks Ben Neely pointing .","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0439","dir":"Changelog","previous_headings":"","what":"FSA 0.4.39","title":"FSA 0.4.39","text":"Date: Jan15 catchCurve(): Modified. Changed use.weights= weighted=. Added checks formula formula version variables default version. Add unit tests warnings errors tow tests values. chapmanRobson(): Modified. Added method=\"Smithetal\" methodology estimating SE Z (made default). Added checks formula formula version variables default version. Added verbose= summary(). Add unit tests warnings errors two tests values.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0438","dir":"Changelog","previous_headings":"","what":"FSA 0.4.38","title":"FSA 0.4.38","text":"Date: Jan15 alkPlot(): Modified. Changed behavior adding legend alleviate bug. metaM(): Added.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0437","dir":"Changelog","previous_headings":"","what":"FSA 0.4.37","title":"FSA 0.4.37","text":"Date: Jan15 confint.nlsBoot(): Modified. Changed default err.col= black red. Fixed example due changes nlsBoot package. extraSS(): Modified. Added catch make sure models type. Added catch note function work lm() nls() models. Fixed bug related labels results anova() different depending whether lm() nls() models given. Added examples. hist.formula(): Modified. Fixed bug (originated last version) nothing returned one histogram constructed. lrt(): Modified. Changed call lrtest() call lrtest.default(). Added catch make sure models type. Note degrees--freedom lrtest() error df; thus, modified report error df match extraSS(). Added examples.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0436","dir":"Changelog","previous_headings":"","what":"FSA 0.4.36","title":"FSA 0.4.36","text":"Date: Jan15 hist.formula(): Modifiied. Added iaxs=, set default value TRUE use xaxs=\"\" yaxs=\"\" remove “floating” x-axis produced hist() base R. lwCompPreds(): Modified. Added yaxs= argument. psdCalc(): Modified. Added showIntermediate= allow showing intermediate values calculation PSD indices. Added justAdds= allow user return just results pertain values addLens=. Added ability use named vector addLens= use addNames=. Changed digits=1 digits=0. Thanks Ben Neely suggestions. psdVal(): Modified. Added ability use named vector addLens= use addNames=. original functionality still . Added check one Gabelhouse lengths also one addLens= values. Deleted addLens= value (user might sent name value want name appear results). residPlot(): Modiifed. Added xpd=TRUE loess line routine curve polygon stay within plotting region. tictactoe(): Modified. Add ability handle differences xaxs=\"r\" yaxs=\"r\" used xaxs=\"\" yaxs=\"\" used.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0435","dir":"Changelog","previous_headings":"","what":"FSA 0.4.35","title":"FSA 0.4.35","text":"Date: Jan15 dunnTest(): Added.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0434","dir":"Changelog","previous_headings":"","what":"FSA 0.4.34","title":"FSA 0.4.34","text":"Date: Dec14 addZeroCatch(): Modified. Removed idvar=, forced eventvar= speciesvar= variables returned data.frame numeric numeric original data.frame, allowed speciesvar= one variable, added na.rm=. Multiple values specvar= allow user add zeros based combination variables (e.g., species size category). na.rm= argument allows user remove “missing” species, common sampling events capture fish.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0433","dir":"Changelog","previous_headings":"","what":"FSA 0.4.33","title":"FSA 0.4.33","text":"Date: Dec14 growthModelSim(): Modified. Changed “K0” objects “t50”. headtail(): Added. logbtcf(): Added. lwCompPreds(): Modified. Added base= allow function work logarithms different base. original function hard-wired use natural logarithms. Updated examples tests. vbFuns(): Modified. Changed “K0” objects “t50”. vbStarts(): Modified. Changed “K0” objects “t50”.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0432","dir":"Changelog","previous_headings":"","what":"FSA 0.4.32","title":"FSA 0.4.32","text":"Date: Nov14 expandcounts(): Added (fishWiDNR package). expandLenFreq(): Added. lenFreqExpand() thought name fits better expandCounts(). pcumsum(): Added. rcumsum(): Modified. Completely new code (much simpler). validn(): Added.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0431","dir":"Changelog","previous_headings":"","what":"FSA 0.4.31","title":"FSA 0.4.31","text":"Date: Nov14 Removed suggests plyr. addZeroCatch(): Modified. Slight modifications help file. Fixed bug related error checking number variables. Added tests. lencat() Modified. Added droplevels= kept drop.levels= consistently remember name argument – .e., user can use either one, droplevels= preferred. mapvalues(): Added. exact function plyr package. Included minimize conflicts functions dplyr plyr name (.e., don’t install plyr just mapvalues() also using dplyr). perc(): Added. psdCalc(): Modified. Minor change related droplevels= lencat(). psdVal(): Modified. Changed name “zero” group “substock.” swvCode(): Modified. Removed ability Stangle code thus removed method=. Modified code allow usage .Rmd files addition .Rnw files.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0430","dir":"Changelog","previous_headings":"","what":"FSA 0.4.30","title":"FSA 0.4.30","text":"Date: Oct14 Added suggests plyr, examples using mapvalues(). lencat(): Modified. Changed .fact= default use.names=. result behavior . However, also allows user set use.names=TRUE .fact=FALSE return character vector (factor). psdAdd(): Modified. Added addSpec= addLens= user can non-Gabelhouse lengths individual species. PSDlit: Modified. Changed “Walleye x Sauger” “Saugeye” “White Bass x Striped Bass” “Palmetto Bass”. Updated Palmetto Bass values based Dumont Neely (2011), kept old values “Palmetto Bass (original)”. Deleted redundant entries species. recodeF(): Deleted. Functionality mapvalues() plyr. Ease come easy go (.e., added last version).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0429","dir":"Changelog","previous_headings":"","what":"FSA 0.4.29","title":"FSA 0.4.29","text":"Date: Oct14 Added suggests dplyr. Added external file inst/extdata testing PSD Wr calculations. capFirst(): Modified. Changed words= =. psdAdd(): Modified. Added default formula version allow efficiency dplyr. Added examples. Updated tests. recodeF(): Added. recodeSpecies(): Deleted. Functionality replaced recodeF() combination capFirst(). wrAdd(): Modified. Added default formula version allow efficiency dplyr. Added examples. Updated tests. WSlit: Modified. Added results Sardine.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0428","dir":"Changelog","previous_headings":"","what":"FSA 0.4.28","title":"FSA 0.4.28","text":"Date: Sep14 psdAdd(): Added. psdDataPrep(): Deleted. Functionality replaced psdAdd(). recodeSpecies(): Modified. Completely re-written basic functionality. new version returns vector can appended existing data.frame rather old function returned whole data.frame. function allow ease use mutate() dplyr. Added catches bad formuala=s. Added tests. wrAdd(): Modified. Completely re-written completely new functionality. new version returns vector can appended existing data.frame rather old function returned whole data.frame. function allow ease use mutate() dplyr. Added catches bad formuala=s. Added tests. wrDataPrep(): Deleted. Functionality replaced new wrAdd().","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0427","dir":"Changelog","previous_headings":"","what":"FSA 0.4.27","title":"FSA 0.4.27","text":"Date: Sep14 hist.formula(): Modified. Slight modifications warning messages. Summarize(): Modified. Slight modification warning messages. tictactoe(): Modified. Changed predbal= predobj=, preybal= predbal=, xlab= predlab=, ylab= preylab=, bal.col= obj.col=, bal.trans= obj.trans=. vbStarts(): Modified. Fixed bug related plot=TRUE type=\"Francis\" type=\"Schnute\". wrAdd(): Modified. Modified quadratic functions handling fish less minimum applicable length handled changes wsVal(). wsLit: Modified. Changed order variables, changed hybrid species names match Neumann et al. (2012), update comments related Neumman et al. (2012) rather Blackwell et al. (2012), added information Riffle Dace. wsVal(): Modified. Changed names min.len max.len variables either min.TL max.TL min.FL max.TL appropriate. Suppressed return max.len quad exist suppressed return comment none. Added catch one species given species=. Created tests.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0426","dir":"Changelog","previous_headings":"","what":"FSA 0.4.26","title":"FSA 0.4.26","text":"Date: Sep14 capFirst() Modified. Added option handle vector strings rather just single string. lencat(): Modified. Fixed bug category names use.names=TRUE. Moved internal functions outside lencat() environment (renamed ). Cleaned code. psdCI(): Modified. Added catches calls mistakes. Create internal functions modularize computations. Added tests. psdVal(): Modified. Added catches calls mistakes. Added tests. psdCalc(): Modified. Completely redone. Changed default use multinomial rather binomial method confidence intervals (added method= argument control CI type). Changed throw error species given ``species=’’. Added tests. psdDataPrep(): Modified. Changed use.catnames= use.names psdname= vname= consistent psdVal(). Removed duplicitous factor() calls length category species name variables returned data.framed. psdPlot(): Modified. Completely redone (fixed several bugs overall sloppy code). Added psd.add=. Changed legend.pos= legend.cex= psd.pos= psd.cex=. recodeSpecies(): Modified. Made changes reflect new capFirst() functionality. tictactoe(): Modfied. tictactoeAdd(): Removed. Directed user use plotCI() plotrix instead.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0425","dir":"Changelog","previous_headings":"","what":"FSA 0.4.25","title":"FSA 0.4.25","text":"Date: Sep14 mrClosed(): Modified. Better handled given value R=. psdCalc() Modified. Fixed bug appeared “zero” fish present data. Moved internal functions outside psdCalc() environment (renamed ). psdCI(): Added. psdPlot(): Modified. Fixed bug appeared “zero” fish present data. Used psdCalc() compute PSD values. Moved default legend position topleft. swvCode(): Modified. Fixed bug attempting use function outside directory .Rnw file exists. Added functionality add “note” first line(s) output file. Added code remove first line output file going blank. swvFinish(): Modified. Updated code iGetFilePrefix() deleted.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0424","dir":"Changelog","previous_headings":"","what":"FSA 0.4.24","title":"FSA 0.4.24","text":"Date: Aug14 ageKey(): Deprecated. See alkIndAge(). ageKeyPlot(): Deprecated. See alkPlot(). ageKeyPrep(): Deprecated. See alkPrep(). alkAgeDist(): Added. alkIndAge(): Added. ageKey(). Added seed= help reproducibility. Modified code better handle age-length key whole row missing data (happen .fact=TRUE drop.levels=FALSE lencat()). Added checks age-length key structure. Moved internal functions outside alkIndAge() environment (renamed ). alkMeanVar(): Added. alkPlot(): Added. ageKeyPlot(). Fixed bug colors adding legend bar area plots. Allowed legend removed area plot. Added ability add legend lines splines plot. Added pal= allow choice color palette areas bar area plot lines lines splines plots. Allowed area plot one row age-length key sums zero (previously allow ). Create internal functions plot type. Moved internal functions outside alkPlot() environment (renamed ). Added checks age-length key structure. alkPrep(): Added. ageKeyPrep(). Added checks age-length key structure. iCheck ALK(): Added internal function (used test structure age-length keys several functions). summary.mrOpen(): Modified. Removed “Estimates” heading verbose=FALSE. Summarize(): Modified. Moved internal functions outside Summarize() environment (renamed ).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0423","dir":"Changelog","previous_headings":"","what":"FSA 0.4.23","title":"FSA 0.4.23","text":"Date: Aug14 removal(): Modified. Completely modified code examples apply() lapply() also provide confidence intervals. Also changed code reflect $\\sum_{=1}^{k-1}T_{}$ Schnute (1983) X Carle Strub (1978), $\\sum_{=1}^{k-1}T_{}-C_{1}$ Schnute (1983) X − (k−1)C1, q Schnute (1983) p resources. changes allowed efficiencies connected theory behind methods firmly. Removed check character data. Kept check whether catch vector catch one row one column matrix data.frame converted vector continue. latter change allows one extract one row data.frame send removal() without use .numeric(). Modified added examples use apply() lapply().","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0422","dir":"Changelog","previous_headings":"","what":"FSA 0.4.22","title":"FSA 0.4.22","text":"Date: Aug14 ageKey(): Modified. Changed using .equal() check ALK rows don’t sum 1. attempt minimize number “false negatives” caused R FAQ 7.31. Changed check whether longest fish length sample greater longest length bin ALK whether longest fish length sample greater longest length bin ALK PLUS minimum width length categories. last change attempt minimize number warnings occur longest fish length sample last length category ALK length categories labelled minimum length looks like . minimum width used still allow unevent length categories , thus, check may still produce “false negatives.” ageKeyPlot(): Modified. Removed bubble.ylab=. Modified ylab= handle bubble.ylab= used handle. removal(): Modified. Added options perform Moran (1951) Schnute (1983) removal methods. Added examples new functionality. Updated tests new functionality.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0421","dir":"Changelog","previous_headings":"","what":"FSA 0.4.21","title":"FSA 0.4.21","text":"Date: Jul14 depletion(): Modified. Changed type= method= added DeLury option method= (left Delury). Changed ricker.mod= Ricker.mod=. Added checking bad arguments. Created internal functions specific Leslie DeLury methods (isolation). Modified clunky code. Added references specific sections Seber (2002) SE equations. Updated examples. Added tests error checking. coef.depletion(): Modified. Added digits=. confint.depletion(): Modified. Added digits=. Modified parm= list efficient. plot.depletion(): Modified. Removed internal par() settings. summary.depletion(): Modified. Added verbose= digits=.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0420","dir":"Changelog","previous_headings":"","what":"FSA 0.4.20","title":"FSA 0.4.20","text":"Date: Jul14 removal(): Modified. Made \"CarleStrub\" default method. Changed type= method=. Changed internal meth object lbl. Moved internal functions outside mrOpen() environment added internal functions isolate intermediate calculations. Added verbose= parm= summary(). Streamlined clunky code confint() including removing options parm=. Added checks abd inputs, notes code sources fomulae, tests.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0419","dir":"Changelog","previous_headings":"","what":"FSA 0.4.19","title":"FSA 0.4.19","text":"Date: Jul14 Modified tests check whether suggested package installed. capHistSum(): Modified. Changed column row labels $methodB.top column labels $methodB.bot. Added m-array object two sampling events present. Added calculations number fish first seen event (ui), number fish last seen event (vi), number fish seen times (fi) $sum. jolly(): Added. mrOpen(), added convenience. mrClosed(): Modified. Fixed bugs around printing CI type Schnabel ignoring conf.level= Schnabel. mrOpen: Modified. Changed ci.type= type= phi.type= phi.full=. Removed type= summary() added verbose= print estimates FALSE observables estimates TRUE. Added verbose= confint() control whether message type confidence interval printed . Moved internal functions outside mrOpen() environment added internal functions isolate intermediate calculations. Changes row column labels capHistSum() resulted changes row lables summary() confint() results. Streamlined clunky code. Added checks misformed mb.top= mb.bot=. Added tests notes code sources fomulae. plot.CapHistSum(): Added. plot.mrClosed(): Modified. Changed axis labels expressions print fonts devices.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0418","dir":"Changelog","previous_headings":"","what":"FSA 0.4.18","title":"FSA 0.4.18","text":"Date: Jul14 Moved compiling R 3.1.1. Added Suggests marked example capHistConvert(). ageBias(): Modified. Changed default value min.n.CI= 5 3. Added na.rm=TRUE min() max() produced age ranges age agreement table. BluegillJL: Modified. Corrected lake name added citation. capHistConvert(): Modified. probably considered new function updating old version. Modifications included simplifying structure allowed input data.frames (can id freq column columns related capture history … makes function less flexible simplifies use likely use ), moved series internal functions, created common intermediate data format (streamlined code considerably), changed name FSA format individual Rcapture format frequency, added .type='event' format, added .type='RMark' .type='marked'formats, fixed bug outputting RMark format, changed default new frequency variables Freq freq, removed mch= event= arguments, replaced cols= cols2ignore=, added include.id= argument, changed .type= default, coded “catches” common mistakes use, coded keep unique fish identifier id= event name given variable names much possible, fixed bug event.ord=. Added several new examples. capHistSum(): Modified. Change cols= argument cols2use=. Moved internal functions outside capHistSum() environment. CutthroatAL: Modified. Updated new source include many years samples. fitPlot(): Modified. Changed trans.pt= transparency=. mrClosed(): Modified. Completely re-built internal file structure. Changed incl.inputs= verbose=. Added ability construct CI overall PE multiple groups used Petersen family method (thus, added incl.= confint()). Changed default incl.= FALSE TRUE. Modified messages verbose=TRUE. plot.AgeBias(). Modified. Fixed bug produced warning bias t-tests either significant significant. Changed col.err= col.CI=, lwd.err= lwd.CI=, col.err.sig= col.CIsig=, col.ref= col.agree=, lwd.ref= lwd.agree=, lty.ref= lty.agree=, show.rng= show.range=, col.rng= col.range=, lwd.rng= lwd.range=. Removed col.lab= row.lab= deprecated several minor versions ago. Changed default values lwd.rng= lwd.CI= 2 1. Added cex.numbers= argument controlling size numbers “numbers plot” (defaults 0.9). plotBinResp(): Modified. Changed trans.pt= transparency=.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0417","dir":"Changelog","previous_headings":"","what":"FSA 0.4.17","title":"FSA 0.4.17","text":"Date: Jul14 confint.mrClosed(): Modified. Moved internal functions outside confint.mrClosed() environment (see iCI.MRCMultiple() iCI.MRCSingle()). Changed ci.type= just type=. Streamlined binomial method single census. Used iMRCSingleSE() get SE type=\"normal\" Chapman, Bailey, Ricker methods. extraSS(): Modified. Slight change row labels output table. iMRCMultiple(): Added. mrc2() internal function inside mrClosed() environment. iMRCSingle(): Added. mrc1() internal function inside mrClosed() environment. iMRCSingleSE(): Added. Moved functionality summary.mrClosed(). Checked documented formulas sources (code Rd file). lrt(): Modified. Slight change row labels output table. mrClosed(): Modified. Moved internal functions outside mrClosed() environment (see iMRCMultiple() iMRCSingle()). Changed type= argument method=. Added catches argument problems (required setting n=, m=, M= R= NULL). Streamlined warning message incl.SE=TRUE used Schnabel Schumacher-Eschmeyer method. Added tests reported results help file population size, SE, CI estimates method. plot.mrClosed(): Modified. Removed setting par(). Changed using lowess() using loess() set better default values. Added descriptive text help file. summary.mrClosed(): Modified. Moved SE calculations internal function (see iMRCSingleSE()).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0416","dir":"Changelog","previous_headings":"","what":"FSA 0.4.16","title":"FSA 0.4.16","text":"Date: Jul14 BluegillLM: Modified. Added seealso. residPlot(): Modified. Changed loess-related methods use loess(), put approximate confident band line, line band “” points, line lighter. Put horizontal reference line zero points. Made loess=TRUE default. iAddLoessLine(): Modified. See residPlot(). iHndlFormula(): Modified. COrrected positioning explanatory variables model response variable. iMakeBaseResidPlot(): Added internal function residPlot() simplify coding. iMakeColor(): Modified. intelligently handles values greater 1 (converts decimals inverting.) lwPredsComp(): Modified. Changed mdl= object=. Added use internal iHndlFormula() moved two internal functions outside main function. Changed default intervals confidence changed confidence prediction intervals plotted black lwd= width (plotted CI now black PI now blue). Added show.preds argument. Changed connect.means= connect.preds=. Changed default lwd= value used CIs, PIs, connection lines. Added col.connect= argument. Removed mar mgp par() call (left mfrow). Added examples. Added tests error messages. residPlot(): Modified. Added inclHist= argument. Corrected bug around use thigmophobe() iAddOutlierTest(). Changed default student= FALSE. Modified added examples. SMBassWB: Modified. Added seealso.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0415","dir":"Changelog","previous_headings":"","what":"FSA 0.4.15","title":"FSA 0.4.15","text":"Date: Jun14 lots roxygen2 Rd cleaning. addLoessLine(): Deleted. Moved functionality iAddLoessLine() moved code residPlot() file.. addOutlierTestResults(): Deleted. Moved functionality iAddOutlierTestResults() moved code residPlot() file. capHistConvert(): Added interactive() Rcapture example help file. checkStartcatW(): Deleted. Moved functionality iCheckStartcatW(). ci.fp(): Deleted. Moved functionality iCIfp() moved code fitPlot() file. ci.fp.1(): Deleted. Moved functionality iCIfp1() moved code fitPlot() file. ciLabel(): Deleted. Moved functionality iCILabel(). getAllDependencies(): Deleted. Moved functionality iGetAllDependencies() moved code swvUtils file. getFilePrefix(): Deleted. Moved functionality iGetFilePrefix() moved code swvUtils file. getMainTitle(): Deleted. Moved functionality iGetMainTitle() moved code residPlot() file. getVarFromFormula(): Deleted. Moved functionality iGetVarFromFormula(). hndlFormula(): Deleted. Moved functionality iHndlFormula(). hndlMultWhat(): Deleted. Moved functionality iHndlMultWhat(). iAddLoessLine(): Added. addLoessLine(). iAddOutlierTestResults(): Added. addOutlierTestResults(). iCheckStartcatW(): Added. checkStartcatW(). iCIfp(): Added. ci.fp(). iCIfp1(): Added. ci.fp.1(). iCILabel(): Added. ciLabel(). iGetAllDependencies(): Added. getAllDependencies(). iGetFilePrefix(): Added. getFilePrefix(). iGetMainTitle(): Added. getMainTitle(). iGetVarFromFormula(): Added. getVarFromFormula(). iHndlFormula(): Added. hndlFormula(). iHndlMultWhat(): Added. hndlMultWhat(). iLegendHelp(): Added. legendHelp(). iMakeColor(): Added. makeColor(). iMakeFilename(): Added. makeFilename(). iMakeItemsToRemove(): Added. makeItemsToRemove(). iProcessSessionInfo(): Added. processSessionInfo(). iPSDLitCheck(): Added. psdLitCheck(). .even(): Added. .odd(): Added. odd(). iTypeoflm(): Added. typeoflm(). iwsLitCheck(): Added. wsLitCheck() legendHelp(): Deleted. Moved functionality iLegendHelp(). listSpecies(): Deleted. Moved functionality iListSpecies(). makeColor(): Deleted. Moved functionality iMakeColor(). makeFilename(): Deleted. Moved functionality iMakeFilename() moved code swvUtils file. makeItemsToRemove(): Deleted. Moved functionality iMakeItemsToRemove() moved code swvUtils file. odd(): Deleted. Moved functionality .odd(). predict.nlsBoot(): Added interactive() nlstools example help file. printProgressMsg(): Deleted. used anywhere. processSessionInfo(): Deleted. Moved functionality iProcessSessionInfo() moved code swvUtils file. PSDLitCheck(): Deleted. Moved functionality iPSDLitCheck() moved code psdVals() file. pssCalc(): Deleted. deprecated several versions ago. See psdCalc(). pssDataPrep(): Deleted. deprecated several versions ago. See psdDataPrep(). pssPlot(): Deleted. deprecated several versions ago. See psdPlot(). pssVal(): Deleted. deprecated several versions ago. See psdVal(). typeoflm(): Deleted. Moved functionality iTypeoflm(). wsLitCheck(): Deleted. Moved functionality iwsLitCheck() moved code wsVals() file.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0414","dir":"Changelog","previous_headings":"","what":"FSA 0.4.14","title":"FSA 0.4.14","text":"Date: Jun14 added tests (test_VonB2b.R) assure group comparisons von Bertalanffy parameters equal Kimura (1980) vblrt() fishmethods. added importsFrom lmtest lrt(). Also used testing (test_VonB2b.R). confint.nlsBoot(): Modified. Modified plotting use hist.formula(), removed par(mar=) definitions, added err.col= lwd.col= control color line width confidence interval line plot. extraSS(): Added. growthModels(): Modified. Added Weisberg parameterization. Changed vbGallucciQuinn vbGQ. growthModelSim(): Modified. Added Weisberg parameterization. Added vbGQ abbreviation (synonymous vbGallucciQuinn). lrt(): Added. vbFuns(): Modified. Added Weisberg parameterization. Added vbGQ abbreviation (synonymous vbGallucciQuinn). Simplified functions simple=FALSE (error checking now). vbModels(): Modified. Added Weisberg parameterization. Changed vbGallucciQuinn vbGQ. vbStarts(): Modified. Added Weisberg parameterization. Added vbGQ abbreviation (synonymous vbGallucciQuinn). Added internal function checking whther starting values K Linf made sense.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0413","dir":"Changelog","previous_headings":"","what":"FSA 0.4.13","title":"FSA 0.4.13","text":"Date: Jun14 added testthat files error checking chapmanPlot(), vbFuns(), vbStarts(), walfordPlot(). Added testthat file checking von Bertalanffy fitting using vbFuns() vbStarts() matches sources. ageBias(): Modified. Deprecated col.lab= row.lab= replaced ref.lab= nref.lab=. Moved functions internal main functions internal package. process, changed names internal functions slightly, made explicit argument passing, added internal descriptions internal files. Changed several else strings plot method switch(). agePrecision(): Modified. Changed messages wide. chapmanPlot(): Modified. Removed S3 functions vbStarts() use formula. Added checking related formula. growthModels(): Modified. Created internal function eliminates repetitiveness vbModels(). Changed GompX types GompertzX. growthModelSim(): Modified. Removed S3 functions growthModelSim() use formula. Added checking related formula. Changed order arguments formula= data= come type=. allows similar interface vbStarts(). Included hack still allows user enter type first argument (thus type type= parameterization besides vbTypical used). Corrected spelling Gallucci Gallucci Quinn model. hndlFormula(): Modified. Fixed bug expected number response variables value return list. SpotVA1: Modified. Updated reference. vbFuns(): Modified. Changed schnute parameterization use L3 instead L2 t3 instead t2. vbModels(): Modified. Created internal function eliminates repetitiveness growthModels(). vbStarts(): Modified. Removed S3 functions vbStarts() use formula. Added checking related formula. Changed tFrancis= ages2use=. Changed Schnute method use ages ages2use= rather hard-wired use minimum maximum observed age. Schnute Francis methods use minimum maximum observed ages ages2use=NULL. Added catch ages2use= descending order (ascending order). Changed Schnute parameterization use L3 instead L2. walfordPlot(): Modified. Removed S3 functions vbStarts() use formula. Added checking related formula.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0412","dir":"Changelog","previous_headings":"","what":"FSA 0.4.12","title":"FSA 0.4.12","text":"Date: May14 added Suggests testthat, fishmethods, FSAdata testing popbio example made “interactive” “dont run”(see ). added testthat files ageBias() agePrecision(). ageBias(): Modified. Removed unit testings examples put testing file. agePrecision(): Modified. Removed deprecated =\"agreement\". confint.nlsBoot(): Modified. Changed example “dont run” “interactive.” fact2num(): Modified. Changed example “dont run” “interactive.” fishR(): Modified. Removed news added posts = argument. Cleaned Rd file. Changed example “dont run” “interactive.” FSA(): Modified. Cleaned Rd file. FSANews(), fsaNews(): Modified. Cleaned fixed Usage section Rd file. Changed example “dont run” “interactive.” growthRadPlot(): Modified. Changed example “dont run” “interactive.” htest.nlsBoot(): Modified. Changed example “dont run” “interactive.” lagratio(): Modified. Changed example “dont run” “interactive.” lencat(): Modified. Changed Rd file deletion view(). popSizesPlot(): Modified. Changed example “dont run” “interactive.” TroutDietSL: Modified. Changed Rd file deletion view(). view(): Deleted. Moved NCStats package. wrDataPrep(): Modified. Changed Rd file deletion view().","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0411","dir":"Changelog","previous_headings":"","what":"FSA 0.4.11","title":"FSA 0.4.11","text":"Date: May14 Removed Roxygen directives DESCRIPTION (changes roxygen2 4.0.1). Changed @S3method @method @export following files according changes ROxygen2 described , among several places: ageBias, agePrecision, bootCase, catchCurve, chapmanRobson, confint.nlsboot, depletion, dietOverlap, fitPlot, hist.formula, htest.nlsBoot, ks2d1, ks2d1p, ks2d2, ks2d2p, ksTest, lencat, mrClosed, mrOpen, plotBinResp, predict.nlsBoot, removal, residPlot, srStarts, Subset, Summarize, sumTable, vbStarts, walfordChapmanPlot. addZeroCatch(): Modified. Added catch situation zeros need added data.frame. Cleaned-help file, modified examples, added another example. Thanks Ben Neely bringing bug (handling zeros needed) attention. capHistSum(): Modified. Cleaned code (changes functionality). catchCurveSim(): Deleted. Moved FSAsim package. checkstartcatw(): Modified. Changed catch whether starting category value greater minimum observed value correct pathological case equal machine rounding. lenFreqExpand(): Modified. Slightly changed examples help file. lwPredsComp(): Modified. Streamlined code (changes functionality). mrOpen(): Modified. Streamlined code (changes functionality). Removed explicity partial matching options switch()es already caught previous match.arg()s.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-0410","dir":"Changelog","previous_headings":"","what":"FSA 0.4.10","title":"FSA 0.4.10","text":"Date: May14 Added Roxygen directives DESCRIPTION. Updated Roxygen2 4.0.0 modified several help files. ageBias(): Modified. Cleaned-help file. agePrecision(): Modified. Cleaned-help file. ageKey(): Modified. Cleaned-help file modified example. ageKeyPlot(): Modified. Added description cleaned-help file. ageKeyPrep(): Modified. Added description cleaned-help file. lenFreqExpand(): Modified. Corrected total= use length(x) rather nrow(df), left previous change. Cleaned-help file. mrClosed(): Modified. Increased readability code (added comments, used () long calculations, added spacing). Added specific citations equations help file. Changed degrees--freedom confidence interval calculation Schnabel methods number samples minus 2 number samples minus 1 (following Krebs). poiCI(): Modified. Cleaned-help file. psdDataPrep(): Modified. Fixed error around use.catnames=. swvCounts(): Modified. Fixed error output.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-049","dir":"Changelog","previous_headings":"","what":"FSA 0.4.9","title":"FSA 0.4.9","text":"Date: May14 Removed nlme dependencies (removal vbDataGen()). ageComp(): Deleted. Fully deprecated. Use ageBias() agePrecision() instead. cohortSim(): Deleted. Moved FSAsim package. depletion(): Modified. Remove link leslieSim(). lengthWeightSim(): Deleted. Moved FSAsim package. leslieSim(): Deleted. Moved FSAsim package. lwModelSim(): Deleted. Moved FSAsim package. mrClosed(): Modified. Remove link mrClosed1Sim(). mrClosed1Sim(): Deleted. Moved FSAsim package. srCobWeb(): Deleted. Moved FSAsim package. vbComp(): Deleted. Moved FSAsim package. vbDataGen(): Deleted. Moved FSAsim package. vbFuns(): Modified. Remove link vbComp(). VBGMlit(): Deleted. Moved FSAsim package.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-048","dir":"Changelog","previous_headings":"","what":"FSA 0.4.8","title":"FSA 0.4.8","text":"Date: May14 ageBias(): Modified. Added ability use multiple = arguments c(). Added =\"n\" get sample size age-agreement table. Added nYpos= plot() allow control position sample size values plot. Changed order printing results =\"symmetry\" used summary(). order closely follows “level complexity” tests. Added unit test examples help file. agePrecision(): Modified. Added ability use multiple = arguments c(). hndlMultWhat(): Added. internal file help ageBias() agePrecision handle multiple = arguments.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-047","dir":"Changelog","previous_headings":"","what":"FSA 0.4.7","title":"FSA 0.4.7","text":"Date: Apr14 Removed functions related constructing validating standard weight equations. now FSAWs package. start effort streamline FSA package. Removed importFrom quantreg (used standard weight methods). ChinookArg: Added (FSAdata). emp(): Removed. FroesWs(): Removed. lencatOLD(): Removed (FSA-internals). lwPredsComp(): Modified. Changed example using ChinookArg rather RuffeWs RuffeWs moved FSAWs package. LMBassWs: Removed. rlp(): Removed. RuffeWs: Removed. WalleyeGerowLW: Removed. wsValidate(): Removed. WalleyeGerowLW: Removed.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-046","dir":"Changelog","previous_headings":"","what":"FSA 0.4.6","title":"FSA 0.4.6","text":"Date: Apr14 Changed compiling R 3.1.0 Imported stackpoly() plotrix use ageKeyPlot(). Added concepts (largely match FSAdata pacakge) data files. Made grammatical changes added author sections Rd files. ageKeyPlot(): Added. dietOverlap(): Modified. Changed examples help file reflect changes lencat(). lencat(): Modified. Added generic functions. lencat.default() accepts vector first argument returns single vector. lencat.formula() accepts formula first argument data= argument. lencat.formula() old lencat() lencat.default() provides new functionality. Additionally, default startcat= now NULL value startcat= found automatically (though value can still supplied user). use.catnames= changed use.names=. changes made simplify code. lenFreqExpand(): Modified. Removed df= cl= arguments replaced x=, simply vector length measurements. Changed startcat=NULL starting category value can determined automatically (can still set user).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-045","dir":"Changelog","previous_headings":"","what":"FSA 0.4.5","title":"FSA 0.4.5","text":"Date: Apr14 Converted using github repository. Changed NEWS NEWS.md Added ImportFrom relax package (see ). ageBias(): Modified. Added plot shows number observations combined age. Changed coding slightly around Bowker’s test (added internal function) implemented Evans Hoenig’s McNemar’s test. changes resulting adding “table” choice = print just age-agreement table. =\"symmetry\" chosen three ob Bowker’s, McNemar’s, Evans-Hoenig results output table. age-agreement table longer printed =\"symmetry\". addition, =\"Bowkers\", =\"EvansHoenig\", =\"McNemars\" can used see Bowker’s, Evans Hoenig, McNemars test results, respectfully. Added cont.corr= argument use McNemars test. agePrecision(): Modified. Added ability show raw (vs. absolute value) differences structures. resulted removal =\"agreement\" (though deprecated, message, now) addition =\"difference\" =\"absolute difference\". fishR(): Modified. Changed point github NEWS.md =\"news\". fitPlot(): Modified. Changed logistic regression code handle changes plotBinResp() (see ). addition, temporary fix added size y-axis labels modified external call par(). fix Glen Sutton ultimately need handled elegantly. fsaNews(): Modified. Changed point github NEWS.md. catchCurveSim(): Added back FSATeach (required adding ImportFrom relax package). cohortSim(): Added back FSATeach (required adding ImportFrom relax package). growthModelSim(): Added back FSATeach (required adding ImportFrom relax package). lengthWeightSim(): Added back (lwModelSim()) FSATeach (required adding ImportFrom relax package). leslieSim(): Added back FSATeach (required adding ImportFrom relax package). mrClosed1Sim(): Added back FSATeach (required adding ImportFrom relax package). plotBinResp(): Modified. Added yaxis1.ticks= yaxis1.lbls= arguments user can control tick-mark locations labels left y-axis (defaults show ticks every 0.1 units label 0, 0.5, 1). Added yaxis2.show= argument allow user “turn-” right y-axis (defaults ) labeled level labels. srSim(): Added back FSATeach (required adding ImportFrom relax package).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-044","dir":"Changelog","previous_headings":"","what":"FSA 0.4.4","title":"FSA 0.4.4","text":"Date: Apr14 ageKeyPrep(): Added. agePrecision(): Modified. Fixed bug APE CV -estimated situations multiple ages agreed age=0 (thanks Richard McBride pointing error). wsLit: Modified. Added Pursak chub information Sulun et al. (2014).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-043","dir":"Changelog","previous_headings":"","what":"FSA 0.4.3","title":"FSA 0.4.3","text":"Date: Mar14 ageBias(): Added. Extracted age-bias related material ageComp(). Modified code remove unneeded code. ageComp(), remove = argument related differences added difference= argument. Also changed =\"bias.diff\" =\"diff.bias\" allow quicker partial matching (.e. separate =\"bias\"). Major modifications axis limits created none provided. Modified sample size shown age-bias plot. Added min.n.CI= argument. Added example using WhitefishLC consistent agePrecision(). ageComp(): Modified. Split ageBias() agePrecision(). Added warning function deprecated removed future. ageKey(): Modified. Fixed bug occurred data frame already contained LCat variable provided. agePrecision(): Added. Extracted age precision related material ageComp(). Modified code allow calculations across two structures. Code streamlined dramatically ageComp(). Added example using WhitefishLC allows demonstrating two age assignments. capFirst(): Modified. Added functionality, controlled new words= parameter, allow words, rather just first word, capitalized. capHistConvert(): Modified help file commenting example depends RCapture package. needed RForge site time . fitPlot(): Modified Rd. Added two polynomial regression examples. fitPlot.IVR(): Modified. Changed use new typeoflm(), changed interval= argument, removed automatic main title, removed bunch unneeded code. fitPlot.logreg(): Modified. Removed automatic main title. fitPlot.nls(): Modified. Removed automatic main title. fitPlot.ONEWAY(): Modified. Changed use new typeoflm(), removed automatic main title, removed one line unneeded code. fitPlot.SLR(): Modified. Changed use new typeoflm(), changed interval= argument, removed automatic main title. fitPlot.TWOWAY(): Modified. Changed use new typeoflm() removed automatic main title gReshape(): Modified. Added drop= argument user can drop variables reshaping. Also, added new.row.names=1:100000 reshape() call work-around issues duplicate row names (particularly problematic id.vars= missing values.) growthModels(): Modified. Corrected spelling Gallucci Gallucci Quinn model. hist.formula(): Modified. Add col= argument defaults “gray90”. hndlFormula(): Added. internal function handle various assessments related using formulas. lencat(): Modified. Added ability add names vector sent breaks= named. confint.mrClosed(): Modified. Removed extra linespaces printed output. Changed default incl.inputs= FALSE. summary.mrClosed(): Modified. Removed extra linespaces printed output. Changed default incl.inputs= FALSE. predict.nlsBoot(): Modified help file commenting example depends nlsBoot package. needed RForge site time . psdCalc(): Added (pssCalc()). psdDataPrep(): Added (pssDataPrep()) modified. Deleted code function added category names functionality added lencat(). See lencat() . PSDlit: Added (PSSlit) modified. Changed species names words capitalized follow latest AFS guidelines. psdPlot(): Added (pssPlot()). psdVal(): Added (pssVal()). rsdCalc(): Deleted. rsdVal(): Deleted. recodeSpecies(): Modified. Changed capFirst= doCapFirst= minimize confusion capFirst(). Change doCapFirst= character behaves like words= capFirst(), rather logical. SpotVA1: Modified. Removed link source documents caused problem making PDF manual. StripedBass1: Deleted. Moved FSAdata longer needed examples changed use WhitefishLC. Subset(): Modified. Added resetRownames= argument. swvCode(): Modified. Added .dir= argument. swvCounts(): Modified. Added capitalize= argument. typeoflm(): Modifed. Changed use hndlFormula(). Made internal function. vbFuns(): Modified. Corrected spelling Gallucci Gallucci Quinn model. vbStarts(): Modified. Corrected spelling Gallucci Gallucci Quinn model. WhitefishLC: Added (FSAdata). wsLit: Modified. Changed species names words capitalized follow latest AFS guidelines.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-042","dir":"Changelog","previous_headings":"","what":"FSA 0.4.2","title":"FSA 0.4.2","text":"Date: Dec13 Changed compiling R 3.0.2. Removed dependency reshape package (see changes emp(), gReshape(), ssValidate() ) relax, tcltk, TeachingDemos packages (see changes catchCurveSim(), cohortSim(), growthModelSim(), leslieSim(), lwModelSim(), mrClosed1Sim(), simAgeBias(), simAges(), simLenFromAge(), simLenSelect(), srSim() ). .onAttach(): Modified. Added notes use citation(). bcFuns(): Modified. Added “BPH” “SPH” options type= argument (“LBPH” “LSPH”, respectively). Changed catch using cat() using message(). Added specificity help file (needed). catchCurveSim(): Deleted. Moved FSATeach package. changesPos(): Added. cohortSim(): Deleted. Moved FSATeach package. emp(): Modified. Replaced use cast() aggregate(). gReshape(): Modified. Replaced use melt() reshape() base package. Fixed bug name “increments” “inc” (now catches .pre= value used). Fixed bug na.rm= ignored. Modified rownames created NAs moved . Changed default name var.name= “age” “prvAge” reduce highly possible chance might another variable data frame named “age.” growthModelSim(): Deleted. Moved FSATeach package. growthRadPlot(): Modified. Slightly changed xlab= argument default. leslieSim(): Deleted. Moved FSATeach package. lwModelSim(): Deleted. Moved FSATeach package. mrClosed1Sim(): Deleted. Moved FSATeach package. simAgeBias(): Deleted. Moved FSATeach package. simAges(): Deleted. Moved FSATeach package. simLenFromAge(): Deleted. Moved FSATeach package. simLenSelect(): Deleted. Moved FSATeach package. srSim(): Deleted. Moved FSATeach package. summary.ageComp(): Modified. Added zero.print= argument default single dash use printing age-agreement table. Added flip.table= argument allow ease comparison age-agreement table age-bias plot. Changed =\"prec.stats\" summary percentages absolute differences also printed. Modified print several data frames (=\"bias\", \"symmetry\", \"prec.stats\") row names (.e., row numbers) printed. sumTable(): Added. Brought NCStats. vbFuns(): Modified. Changed non-simple growth model functions checks number model parameters definitions sent. Changed Francis parameterization model take two values t= (.e., intermediate value used , thus, required); thus, t2= argument removed. vbGen(): Modified. Fixed bug developed changes gReshap() made. Added warning suppression related “calculations” NAs. vbStarts(): Modified. Changed tFrancis argument use two ages. Changed default meth.EV= “poly”. Removed jittering added transparency plot. Removed box around legend moved legend “bottomright.” Fixed typo plot heading. wsValidate(): Modified. Replaced use cast() aggregate().","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-041","dir":"Changelog","previous_headings":"","what":"FSA 0.4.1","title":"FSA 0.4.1","text":"Date: Oct13 Changed R dependency >3.0.0 (gplots package dependency). Added importFrom cast(), .formula(), melt() reshape package. capHistConvert(): Corrected formatting documentation. capHistSum(): Corrected documentation. Added second example. dietOverlap(): Modified. Changed “Morista” option “Morisita” consistent correct spelling name. Garvey1: Added. Used examples ks2d1(). Garvey4a: Added. Used examples ks2d1(). histStack(): Deleted, moved plotrix package. Arguments changed . ks2d(): Deleted, changed ks2d2(). ks2d1(): Added. ks2d2(): Added, ks2d(). ks2dp(): Deleted, changed ks2d2p(). ks2d2p(): Added, ks2dp(). mrClosed(): Modified. Changed “messages” using cat() using message() can suppressed suppressMessage() message=FALSE knitr. See “One comment messages” http://yihui.name/knitr/demo/output/. pkolgomorov1x(): Added FSAinternals (ks2d()). plotH(): Deleted, moved plotrix package. quad_dens(): Added FSAinternals (ks2d()).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-040","dir":"Changelog","previous_headings":"","what":"FSA 0.4.0","title":"FSA 0.4.0","text":"Date: Jun13 Corrected pointers fishR vignettes (new webpage). Removed importFrom color.scale plotrix changes discharge() wetPerim(). removed importFrom %nin% Hmisc. See multiple changes . .onAttach(): Added, .onLoad(). .onLoad(): Deleted, now .onAttach(). addMargins(): Deleted, moved back NCStats. addSigLetters(): Deleted, moved back NCStats. addZeroCatch(): Modified. Changed looping structure finding sampling event species combinations need zeros. speed things substantially. Also, modified allow idvar= variables. Finally, returned data frame variables (columns) order original data frame (rather order modified). ageComp(): Modified code adjust name changes Summarize(). Modified use formula notation. ageKey(): Modified using formula notation. removed dl=, cl=, ca= arguments. Made minor adjustments help pages (addition changes related argument modifications). bcFuns(): Removed use %nin%. capFirst(): Modified first letter capitalized (previous version de-capitalize first letter second word leave rest letters capitalized). capHistSum(): Modified correct error occurred computing Method B table capture history occurred . chapmanRobson(): Modified adding Hoenig et al. (1983) bias correction formula estimate Z default option. confint.nlsBoot(): Removed use %nin%. discharge(): Deleted, moved NCStats (reduce overhead ). histStack(): Modified adding formula method (histStack.formula()) required adding default method (histStack.default()). htest.nlsBoot(): Removed use %nin%. lencat(): Modified changing using formula notation data= argument. means df= cl= arguments longer used. addition, warning fish larger larger category turned . method handle changed, warning just turned . lencatOLD(): Added internal file temporarily allow change functions affected changes lencat(). functions required emp() wsValidate(). lenFreqExpand(): Modified deal lencat() change. limnoProfilePlot(): Deleted, moved NCStats (reduce overhead ). mrClosed(): Removed use %nin%. plotBinResp(): Modified moving makeColor() internal function FSA-internals can also used tictactoe(). predict.bootCase(): Added. PSSLit: added RSDLit. Added Ogle Winfield (2009) ruffe, Bonvechio et al. (2010) Suwannee bass, Phelps Willis (2013) several “carp” species. PSSLitCheck(): Added internal file. Modified pssVal(), pssCalc(), pssPlot() accordingly. psdVal(): Deprecated, delete, became pssVal(). pssCalc(): Added, rsdCalc(). Modified using formula notation data= argument. pssDataPrep(): Added. pssPlot(): Added, rsdPlot(). Modified using formula notation data= argument, handle default change incl.zero= pssVal(), changed default pss.lty= settings. pssVal(): Added, rsdVal(). Changed incl.zero=TRUE default. recodeSpecies(): Added. rsdCalc(): Deleted, became pssCalc(). rsdLit(): Deleted, became PSSLit(). rsdPlot(): Delted, became pssPlot(). rsdVal(): Deprecated, delete, became pssVal(). sigLetters(): Deleted, cld() multcomp modified deprecate . simLenSelect(): Modified deal lencat() change. Summarize(): Modified calculating percentage zeros quantitative data. Also changed names returned vectors data frames reduce capitalization, spaces, punctuation. Removed use %nin%. tictactoe(): Modified changing way “balance” regions depicted. resulted addition bal.trans= argument. tictactoeAdd(): Modified changing PSD labels PSS. vbStarts(): Removed use %nin%. wetPerim(): Deleted, moved NCStats (reduce overhead ). wrAdd(): Modified. Major modifications account changes WSlit. Added capFirst() check species name. Changed subNA= remove.submin= make consistent wrDataPrep(). wrDataPrep(): Added. wrVal(): Deleted. WSlit: Modified. Completely rebuilt quadratic equation using EmP incorporated database. Also added equations several new species. WSLitCheck(): Added internal file. Modified wsVal(), wrVal(), wrAdd() accordingly. wsVal(): Modified. major modification account major changes WSLit. wsValidate(): Removed use %nin%.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-034","dir":"Changelog","previous_headings":"","what":"FSA 0.3.4","title":"FSA 0.3.4","text":"Date: Jan13 added special “fishR Vignette” sections links several help files. binCI(): Modified result matrix rather sometimes (one set CIs computed) vector. catchCurve(): Modified minorly adjusting confint() produced CIs. Also, disallowed using parm= user asks CIs linear model. allowed using match.arg() check appropriate parm= values. Modified examples help file slightly added example using weighted regression method. plot.catchCurve(): Modified log(catch) values less 0 plotted. chapmanRobson(): Modified minorly adjusting confint() produced CIs. depletion(): Modified minorly adjusting confint() produced CIs added cat()ted output summary() method describing whether Leslie DeLury method used. growthModelSim(): Modified. Streamlined code (removed “junk” unneeded redundancies). Also corrected error fourth parameter vbSchnute Schnute observed connected sliders. Also changed default slider values. Also set minimum age (t.min) 0 -ridden (previously controlled slider). Thus, removed minimum age slider. Also moved maximum age slider bottom sliders. Changed calls Gompertz models use full name (.e., Gompertz1 instead Gomp1). Changed model= type= consistent similar functions. hyperCI(): Modified result matrix rather vector. leslieSim(): Modified adding hscale=1.5 resampling version. mrClosed(): Modified handle changes hyperCI() binCI(). Also modified messages summary() confint() (streamline). predict.nlsBoot(): Added. removal(): Modified minorly adjusting confint() produced CIs removed cat()ted line summary() method. Also, modified “catches” 2- 3-pass specific methods disallow using anything vector either 2 3 samples. srCobWeb(): Added. srSim(): Modified. Streamlined code (lots “junk” code anything unneeded redundancies) removed. Modified default values axis labels produce generally interesting simulations. Modified graphic show peak recruitment level , Ricker model, stock size peak recruitment occurs. Changed long series -else different parametrizations switch(). Changed model= type= consistent srXXX functions. vbFuns(): Modified slightly messages msg=TRUE. Added message Wang2 model corrected error Somers2 model. view(): Modified remove ability print window (use method built RStudio instead). Also generalized use matrix data.frame (eliminates warning messages).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-033","dir":"Changelog","previous_headings":"","what":"FSA 0.3.3","title":"FSA 0.3.3","text":"Date: 21Dec12 Added ImportFrom slider() gslider() relax package. Deleted ImportFrom slider() TeachingDemos package. functions deprecated TeachingDemos. General: added call.=FALSE several stop()s warning()s. General: replaced paste() inside several cat()s. ageKey(): Modified use match.arg() type=. binCI(): Modified use ciLabel() (see ). catchCurveSim(): Modified variety ways. First, moved ability control recruitment age steadiness Z N* changes function arguments rather slider controls. Second, streamlined internal functions. Third, converted usinggslider()instead ofslider()`. Fourth, made minor cosmetic changes plot. Fifth, edited help file somewhat. checkStartcatW(): Added internal function. ciLabel(): Added internal function. cohortSim(): Modified variety ways. First, streamlined internal functions plot can created individually. Second, converted using gslider() instead slider(). confint.bootCase(): Modified use ciLabel(). confint.catchCurve(): Modified use ciLabel(). confint.chapmanRobson(): Modified use ciLabel(). confint.depletion(): Modified use ciLabel(). confint.mrClosed(): Modified use ciLabel(). confint.nlsBoot(): Modified use ciLabel(). confint.removal(): Modified use ciLabel(). dietOverlap(): Added. fsa.news(), FSA.news(): Deleted, renamed fsaNews() FSANews(). fsaNews(), FSANews(): Renamed versions fsa.news() FSA.news(). FSAsims(): Deleted. Rarely used supported non-windows RStudio. growthModelSim(): Modified variety ways. First, streamlined internal functions plot can created individually. Second, converted using gslider() instead slider(). hyperCI(): Modified use ciLabel(). lencat(): Modified using new checkStartcatW() internal function. lenFreqExpand(): Modified adding show.summary= argument using new checkStartcatW() internal function. leslieSim(): Modified variety ways. First, combined code leslieSim2() function. required deleting use.rand= argument adding type= argument. addition, leslieRandRun() internal function moved R document (FSA-internals). Second, functions streamlined new internal functions. Third, converted using gslider() instead slider(). Fourth, made minor cosmetic changes plot (including adding small legend old leslieSim2()). leslieSim2(): Deleted. See leslieSim(). lwModelSim(): Modified variety ways. First, streamlined internal functions plot can created individually (ultimately allow use manipulate package). Second, converted using gslider() instead slider(). mrClosed(): Modified removing numdigs= argument. mrClosed1Sim(): Modified variety ways. First, streamlined internal functions plot can created individually. Second, converted using gslider() instead slider(). poiCI(): Modified use ciLabel(). rlp(): Modified replacing decimals= argument digits= argument. srSim(): Modified variety ways. First, streamlined internal functions plot can created individually. Second, converted using gslider() instead slider(). Third, removed S3methods. Summarize(): Modified removing numdigs argument. TroutDietSL: Added use dietOverlap(). vbStarts(): Modified including catch negative starting values K starting values Linf 50% smaller larger observed maximum length data set.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-032","dir":"Changelog","previous_headings":"","what":"FSA 0.3.2","title":"FSA 0.3.2","text":"Date: 1Dec12 Changed R dependency >2.14.0. Added ImportsFrom knitr (purl() swvCode() added ). Moved gdata ImportsFrom Suggests. Needed nobs() ci.fp1() used fitPlot.ONEWAY drop.levels() used example RuffeWs. Deleted dependency FSAdata. Added following data files FSAdata: BluegillJL, BluegillLM, BrookTroutTH, CodNorwegian, CutthroatAL, Ecoli, KS2D_NR, LMBassWs, Mirex, PikeNY, PikeNYPartial1, RSDlit, RuffeWs, SMBassLS, SMBassWB, SpotVA1, StripedBass1, VBGMlit, WalleyeGerowLW, WR79, WSlit. allowed removing depending FSAdata. .onLoad(): modified slightly suggestion Simon Urbanek eliminate warning RCMD Check (showed rforge.net, locally). addMargins(): added NCStats. addSigLetters(): added NCStats. Modified allow use result sigLetters() lets=. `bootCase methods: added NCStats. Needed import bootCase car. hist.formula(): added NCStats. lencat(): made warning messages concise. lsmean(): deleted. Functionality replaced lsmeans() lsmeans package. psdVal(), rsdCalc(), rsdVal(), rsdPlot(): added code eliminate “global bindings” note performing RCMD Check. Solutions came Adrian Alexa’s response question: https://groups.google.com/forum/?fromgroups=#!topic/cambridge-r-user-group/c7vf8o3QwDo sigLetters(): added. Hopefully eventually replaced changed cld() multcomp package. Summarize(): made warning messages concise. swvCounts(), swvPvalue(), swvANOVA(), swvGLHT(), swvREG(), swvHtest(), swvCode(), swvFinish(): added miscOgle. view(): added NCStats. wsVal(), wrAdd(): added code eliminate “global bindings” note performing RCMD Check. Solutions came Adrian Alexa’s response question: https://groups.google.com/forum/?fromgroups=#!topic/cambridge-r-user-group/c7vf8o3QwDo","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-031","dir":"Changelog","previous_headings":"","what":"FSA 0.3.1","title":"FSA 0.3.1","text":"Date: 25Nov12 Switched using Project mode RStudio. Switched using semantic versioning version number (means hyphen last number replaced period). Switched using roxygen construct help files. Set values =NULL eliminate “global bindings” warning performing RCMD check – emp(), pos2adj(), psdVal(), simAgeBias(), srStarts(), vbStarts(), wsValidate(). work WSlit RSDlit problems rsdCalc(), rsdPlot(), rsdVal() wsVal(). Added importFrom lineplot.CI()) se() sciplot (used fitPlot()). Added importFrom outlierTest() car use residPlot(). Deleted importFrom alias() stats (used wlgm()). Deleted importFrom boxcox() MASS (used wlgm()). Deleted depends NCStats (moved many functions (see ) made NCStats depend FSA). Deleted suggests exactRankTests (apparently longer needed). Moved nlstools depends suggests (needed example confint.nlsboot run time required). Moved plotrix depends importsFrom color.scale(), plotCI(), thigmophobe(). Moved quantreg depends importsFrom rq() (used emp()). Attempted move reshape importsFrom problems missing .formula() plyr. ageComp(): modified class name “ageComp” “AgeComp”. capFirst(): added. catchCurve(): modified class name “catchCurve” “CC”. chapmanRobson(): modified class name “chapmanRobson” “CR”. coefPlot(): deleted (Weisberg’s LGM now -dated). depletion(): modifed class name “depletion” “Depletion”. discharge(): modified class name “discharge” “StrmDschrg”. emp(): modified class names “empXX” “EMPxx”. fitPlot(): added NCStats. FroeseWs(): modified class name “FroeseWs” “FROESE”. histStack(): added. hoCoef(): added NCStats. ks2d(): modified class name “ks2d” “ks2d”. ks2dp(): modified class name “ks2dp” “ks2dp”. legendHelp(): added (internal) NCStats. mrClosed(): modified moving two internal functions – mrc1() mrc2() – inside mrClosed, moving two internal functions – ci.mrc1() ci.mrc2() – inside confint.mrClosed(), removed “MRC1” “MRC2” classes, changed “MRC” class name “mrClosed”, added catch plot.mrClosed() stop user tries plot single-census data. mrOpen(): modified class name “mrOpen” “MRO”. plotBinResp(): added NCStats. plotH(): minor modifications Rd file. pos2adj(): modified labels positions including full names directions, eliminating single letters four main directions, also leaving four “” directions abbreviations. psdVal(), rsdVal(), rsdCalc(), rsdPlot(): modified use capFirst user need focus capitalization species name. removal(): modified class name “removal” “Removal”. residPlot(): added NCStats. rlp(): modified class name “rlp” “RLP”. Summarize(): added NCStats. typeoflm(): added NCStats. wetPerim(): modified class name “wetPerim” “WetPerim”. wlgm(): deleted (Weisberg’s LGM now -dated). wsValidate(): modified classnames “willis” “WILLIS” “empq” “EMPQ”. Also made minor modification class name change FroeseWs() ycPlot(): deleted (Weisberg’s LGM now -dated).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-03-0","dir":"Changelog","previous_headings":"","what":"FSA 0.3-0","title":"FSA 0.3-0","text":"Date: 8-Nov-12 Moved several functions NCStats used quite often fisheries analyses. Ultimately, want remove dependency NCStats. Deleted importFrom gtools, created internal odd() instead. Added importFrom gplots, get rich.colors() chooseColors(). Added importFrom removed import NCStats. ageComp(): modified use internal odd(), rather odd() imported gtools. binCI(): moved NCStats. chooseColors(): copied NCStats (.e., function still NCStats). confint.nlsBoot(): moved NCStats. fact2num(): moved NCStats. htest(): copied NCStats (.e., function still NCStats). htest.nlsBOot(): moved NCStats. hyperCI(): moved NCStats. ks2d(): moved NCStats. ks2dp(): moved NCStats. ksTest(): moved NCStats. lagratio(): moved NCStats. `lsmean(), related internals: moved NCStats. mrClosed(): modified depend ci.t() NCStats. plotH(): moved NCStats. poiCI(): moved NCStats. popSizesPlot(): moved NCStats. pos2adj(): moved NCStats. rcumsum(): moved NCStats. rsdPlot(): modified handle situations substock fish present data. Thanks Max Wolter pointing issue. Subset(): copied NCStats (.e., function still NCStats).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-02-8","dir":"Changelog","previous_headings":"","what":"FSA 0.2-8","title":"FSA 0.2-8","text":"Date: 21Jun12 Switched compiling R version 2.14.1 (64-bit). Changed license specification “GPL version 2 newer” “GPL (>= 2)” avoid warning check. Added suggestion gdata fix warning capHistConver.rd (see ). `capHistConvert.rd: Modified examples use “gdata::combine” adding “require(gdata)” examples suggesting gdata description file. fishR(): Added. simAgeBias(): changed width widths layout() avoid warning check. simLenSelectM(): changed width widths layout() avoid warning check.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-02-7","dir":"Changelog","previous_headings":"","what":"FSA 0.2-7","title":"FSA 0.2-7","text":"Date: 2Mar12 .onLoad(): Modified. Moved startup message packageStartupMessage() hopes eliminating warning checking package. catchCurveSim(): Modified. Changed max.age= 15 (10). Slightly changed labels related ‘Z Steady’ ‘N* `Steady’. chapmanRobson(): Modified. Corrected bug ages2use= argument contains ages found data. Thanks Eric Berglund finding bug. psdVal(): Modified. described rsdVal(). rsdCalc(): Added. rsdPlot(): Modified. Modified reflect changes rsdVal(). rsdVal(): Modified. Removed metric= mm= arguments favor new argument, units=, user chooses units string. streamlines, example, selection mm. modifications also resulted mm default. Also, removed appended units names names attribute – .e., “stock” rather “stock.mm” “stock.”. wrAdd(): Added. wrVal(): Modified. described wsVal(). wsVal(): Modified. Removed justcoef= argument. Added ab= comment= arguments. Also, removed appended units names names attribute – .e., “int” rather “int.E” “int.mm”.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-02-6","dir":"Changelog","previous_headings":"","what":"FSA 0.2-6","title":"FSA 0.2-6","text":"Date: 1Oct11 Switched compiling R version 2.13.1 (32-bit). Removed importFroms required updateFSA(). Removed splines package imports list (needed). capHistConvert(): Modified. Modifications handle changes capHistSum(). capHistSum(): Modified. Changed returned list structure. First, caphist.sum now caphist. Second, two samples given, caphist sum, sum data frame required summaries Petersen method, returned. two samples given, caphist, sum, methodB.top, methodB.bot returned. Note n* `longer item labeled schnabel.sum returned. mrClosed(): Modified. Modifications handle changes capHistSum(). Also modified two samples summarized CapHist object object supplied first argument mrClosed() Petersen method find data needs CapHist object. rsdPlot(): Modified. Modified calls min() max() include na.rm=TRUE. fixes bug related vectors missing values. updateFSA(): Removed. vbFuns(): Modified. Added ‘Somers2’ option type= argument. vbStarts(): Modified. Added ‘Somers2’ option type= argument.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-02-5","dir":"Changelog","previous_headings":"","what":"FSA 0.2-5","title":"FSA 0.2-5","text":"Date: 19Aug11 Modified description file show e-mail address. Added cnvrt.coords() ImportFrom TeachingDemos. Needed simAgeBias() simLenSelectM(). ageKey(): Modified. Length categories length sample, none provided len.breaks=, constructed length categories present age-length key rather guessing starting value width creating evenly spaced categories. fix bug occurred age-length key originally created even length categories key sparse length categories actual data uneven. Also, changed error catching routine stopped length length sample smaller smallest length category age length key elicit warning largest length greater largest length category age-length key. chapmanRobson(): Modified. Changed .default .formula method. chapmanRobson.default(): Added. chapmanRobson.formula(): Added. FSAsims(): Modified. Corrected calls growthModelSim() von Bertalanffy models. growthModelSim(): Modified. Changed modeling “size” modeling “length” (“weight” just “vbTypicalW” “vbOriginalW”). Changes required adding two new model options – “vbTypicalW” “vbOriginalW” – modeling weights leaving original model options models length. Added max.wt= argument use modeling weights. Removed “vbBevertonHolt” model option covered “vbTypical” actually implemented. Changed order models “vbTypical” rather “vbOriginal” default model used. Made slight cosmetic changes slider bar options (e.g., “” became “t_0”). Made changes corrections .Rd file. rsdPlot(): Added. Still needs thorough proofing. simAgeBias(): Added. simAges(): Added. simApplyAgeBias(): Added. simLenFromAge(): Added. simLenSelectM(): Added. simLenSelectP(): Added. vbComp(): Modified. Streamlined code. Changed t= argument ages= remove possible confusion t(). Removed option model ages provided (previous) t= argument. Instead ages= argument can used represent maximum age model . ages= argument can vector simulation can different set ages model evaluated. allows realistinc modeling.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-02-4","dir":"Changelog","previous_headings":"","what":"FSA 0.2-4","title":"FSA 0.2-4","text":"Date: 15Jun11 Switched compiling R version 2.13.0. vbFuns(): Modified. Modified Wang’s formulas length increments. Added length increments version Faben’s method (“Fabens2”).","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-02-3","dir":"Changelog","previous_headings":"","what":"FSA 0.2-3","title":"FSA 0.2-3","text":"Date: 18Apr11 Updated citation file. Added importFrom tools utils packages. ageKey(): Modified. Added len.breaks= argument age-length key variable widths length categories can used. Added example Rd file illustrate use. confint.MRC(): Modified. Replaced numdigs= argument digits= argument. Retained numdigs= backwards compatability. `lwPredsComp.Rd: Modified. Replaced use lgrep() grepl() change NCStats. removal(): Modified. Changed order items printed returned list. addition, type one Zippin, CarleStrub, Seber3 set intermediate values (k, T, X) also included returned list. first change cosmetic, second change made help troubleshooting. Added argument allow choosing method contructing SE CarleStrub method. Created internal function computing Zippin SE method allow easier use methods. help file changed make note non-estimable SE =T CarleStrub method certain circumstances. changes result different SE reported CarleStrub method used CS.se=“Zippin” (default) used. “old” results can obtained using CS.se=“Alternative”. yet find solid references SE. summary.MRC(): Modified. Replaced numdigs= argument digits= argument. Retained numdigs= backwards compatability. tictactoeAdd(): Modified. Added capability labeling points. updateFSA(): Added. add importFrom tools package. vbFuns(): Modified. Added Wang Wang2 functions.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-02-2","dir":"Changelog","previous_headings":"","what":"FSA 0.2-2","title":"FSA 0.2-2","text":"Date: 3Mar11 moved compling 2.12.1 (32-bit) changed dependency >2.11.1 ageComp(): modified dramatically. Primarily added ability test bias comparing mean y-structure value x-structure t-tests adjusted multiple comparisons. Modified code allow happen efficiently output results plot() summary() methods. Also modified plot() method default just show confidence intervals rather showing CIs range data (use show.rng=TRUE see old plot). Also changed CI colors significant differences shown red (default) non-significant differences shown blue (default) (set col.err= col.err.sig= color get old plot). lencat(): modified vname=NULL default. default using “LCat” variable name (previous version). However, modified way vname appended new data frame vname already exists data frame new name used (vname plus number). removal(): added just.ests= argument changed ests part returned value vector rather matrix. changes allowed better use lapply() computing removal estimates one group. Changed error warning situations method compute population estimates (.e., population depleted). addition, NAs returned situations population estimates can made. example computing removal estimate one group added .rd file. Thanks Jon Bolland asking question motivated changes.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-02-1","dir":"Changelog","previous_headings":"","what":"FSA 0.2-1","title":"FSA 0.2-1","text":"Date: 31-Jan-11 catchCurve(): Modified adding formula method. required moving original code default method changing age= argument x=. lenFreqExpand(): Modified adding additional= argument (required modifying total= argument adding error check situation total fish assign lengths greater number fish measured subsample). .onLoad(): modified. Changed include version number loaded version. vbFuns(): Modified adding simple= argument. Added ‘Somers’ seasonal growth oscillations model ‘Fabens’ model tag-recapture data. Also added, check, ‘Laslett’ ‘double von Bertalanffy’ model. vbStarts(): Modified setting catch return single root st0 sL0 polynomial root found double root. Thanks Giacom* `Tavecchia identifying error. Added ‘Somers’ seasonal growth oscillations model.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-02-0","dir":"Changelog","previous_headings":"","what":"FSA 0.2-0","title":"FSA 0.2-0","text":"Date: 23-Sep-10 bcFuns(): Added. Still needs thoroughly proofed. FSAsims(): Modified reflect srSim() change described . listSpecies(): Moved internal function within RSDval() WSval() added argument data frame containing species names. hope correct “n* `visible binding” warnings performing RCMD check . srModels(): Renamed stockRecruitModels() consistent rest stock-recruitment functions. srSim(): Renamed stockRecruitSim() consistent rest stock-recruitment functions. vbDataGen(): Modified use minAge argument – now always back-calculate age-1 minAge denotes minimum age--capture modeled. Deleted use cfAge variable code. vbModels(): Added.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-01-6","dir":"Changelog","previous_headings":"","what":"FSA 0.1-6","title":"FSA 0.1-6","text":"Date: 23-Aug-10 completed changing naming convention “camel” type – e.g., stockRecruitModels() rather stock.recruit.models(). ageComp(): renamed age.comp(). ageKey(): renamed age.key(). capHistConvert(): renamed caphist.convert(). capHistSum(): renames caphist.sum(). catchCurve(): renamed catch.curve(). catchCurveSim(): renamed cc.sim(). chapmanRobson(): renamed chapman.robson(). coefPlot(): renamed coefplot(). cohortSim(): renamed cohort.sim(). emp(): modified name changes NCStats. FroeseWs(): modified name changes NCStats. FSASims(): modified updating new names simulation functions. gConvert(): renamed g.convert(). gReshape(): renamed g.reshape(). growthRadPlot(): renamed growrad.plot(). lenFreqExpand(): renamed len.freq.expand(). leslieRandRun(): renamed leslie.rand.run(). internal function. leslieSim(): renamed leslie.sim(). leslieSim2(): renamed leslie.sim2(). limnoProfilePlot(): renamed limnoprofile.plot(). lwModelSim(): renamed lwmodel.sim(). lwPredsComp(): renamed comp.lwpreds(). mrClosed(): renamed mr.closed(). Modified name changes NCStats. mrClosed1Sim(): renamed mr.closed1.sim(). mrOpen(): renamed mr.open(). psdVal(): renamed PSDval(). rcumsum(): deleted. Moved NCStats package. rpl(): modified name changes NCStats. rsdVal(): renamed RSDval(). tictactoeAdd(): renamed tictactoe.add(). Modified name changes NCStats. vbComp(): renamed vb.comp(). wetPerim(): renamed wetperim(). wlgm(): modified name changes NCStats. wrVal(): renamed WRval(). wsVal(): renamed WSval(). wsValidate(): renamed validateWs(). Also modified name changes NCStats. ycPlot(): renamed ycplot().","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-01-5","dir":"Changelog","previous_headings":"","what":"FSA 0.1-5","title":"FSA 0.1-5","text":"Date: 20Aug10 moved compiling 2.11.1. started changing naming convention “camel” type – e.g., stockRecruitModels() rather stock.recruit.models(). version, changing functions working . change rest next version. added importFrom nlme groupedData() needed vbDataGen(). age.key(): Modified way length categories age-length key determined. Previously just used rownames found key, allows lengths row NA zeros considered length found age length key. Now row sums found sums NaN 0 removed. addition, added warning message row sums d* `sum 1. caphist.convert(): Modified “RMark” type can output. 0 chapmanPlot()`: Added. growmodel.sim(): Deleted. Changed growthModelSim(). See . 0 growthModelSim()`: Added. Initially renaming growmodel.sim(). However, model names changed consistent functions method Mooij et al. paramaterization added. growthModels(): Added. srFuns(): Added. srStarts(): Added. stock.recruit(): Deleted, along related generics. stock.recruit.sim(): Deleted. Changed stockRecruitSim(). See . stockRecruitModels(): Added. stockRecruitSim(): Initially renaming stock.recruit.sim. However, added “formula” method required adding generic default methods. Changed order S R arguments. Re-ordered, modified, added models accordance vignette. Updated Rd file reflect changes made slight modification examples added example illustrate use formula. Found decent default values simulations. stockRecruitSim.default(): Added. See . stockRecruitSim.formula(): Added. See . vbDataGen(): Added. vbFuns(): Added. vbStarts(): Added. walfordPlot(): Added.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-01-4","dir":"Changelog","previous_headings":"","what":"FSA 0.1-4","title":"FSA 0.1-4","text":"Date: 6Jun10 growmodel.sim(): added option fit “original” von Bertalanffy function. Also added “mis-spelling” options model names.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-01-2","dir":"Changelog","previous_headings":"","what":"FSA 0.1-2","title":"FSA 0.1-2","text":"Date: 17Dec09 moved compiling 2.10.1. `added dependency tcltk simulators work properly upon load FSA. age.comp(): added xlim= ylim= arguments user can control x- y-axis limits desired. Changed code better choices axis limits selected automatically xlim ylim NULL. Changed code “extra” vertical space added show.n=TRUE ylim NLL 10 percent y-axis range rather just extra one unit. Allowed function work better xaxt=“n” yaxt=“n” case user wants create axes. Removed par() setting within plotting function. Thanks David . Hewitt pointing deficiences axis labeling. age.key(): corrected age column labeled column already exist data frame. also indirectly modified lencat() modification. Also modified stop warn user length sample fish whose lengths present length-age key (previously warning, ultimately error). catch.curve(): added use.weights= argument allow using weights catch curve regression proposed Maceina Bettoli (1998). chapman.robson(): changed S result proportion percentage (.e., * `100). comp.lwpreds(): added center.value= argument allow centering regressions. Added example .rd file. fsa.news(): added show user NEWS file. FSA-package(): updated. growmodel.sim(): added ability use formula data= argument. Made model argument default value. Corrected error x y NULL. Corrected errors Rd file. Thanks Jacek Szlakowski pointing problems. lencat(): modified “extra” last length category (fish ) included .fact=TRUE drop.levels=FALSE used. correct “problem” extra -NA row age-length keys. tictactoe.add(): added namespace export list. Changed order items listed ci.type= argument match bin.ci() NCStats.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-01-1","dir":"Changelog","previous_headings":"","what":"FSA 0.1-1","title":"FSA 0.1-1","text":"Date: 15Apr09 added namespace removed dependencies changed imports … left plotrix quantreg dependencies (namespaces). left reshape dependency ’s dependency plyr. .FirstLib(): removed (changed .onLoad() namespace). age.comp(): modified removing reference “valid.n” (longer used changes Summarize() NCStats). Modified attempt compute SE n>1 st. dev > 0. comp.lwpreds(): added. Exported namespace. g.convert(): fixed major error function converted increments radii. growrad.plot(): added. Exported namespace. mr.closed(): modified changing library(Rcapture) require(Rcapture) help page. plot.EMPQ(): modified changing objectprobtoxprob. `emp.rd: fixed incorrect use Summary() (changed summary()). validateWs(): converted sign.slope variable Willis method factor deal situations results positive negative. `wlgm.rd: fixed summarization example (cast() work Summarize().","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-00-14","dir":"Changelog","previous_headings":"","what":"FSA 0.0-14","title":"FSA 0.0-14","text":"Date: 20Dec08 age.comp(): streamlined code (put bias difference plots function, used grconvertY show.n, used plotCI range intervals, caught corrected CI problems n=1 SD=0). N* `functionality difference, just improved code. growmodel.sim(): modified determining slider values data x= y= arguments null. makes graph useful determining starting values nls() modeling.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-00-13","dir":"Changelog","previous_headings":"","what":"FSA 0.0-13","title":"FSA 0.0-13","text":"Date: 6Dec08 added dependency quantreg (rq() emp()). added CITATION file. age.comp(): modified plot() function adding ‘difference’ method = argument. allows creation “age-difference” plot used Muir et al. (2008). caphist.convert(): modified adding event.ord= argument allow user identify order event names converting capture--event type. particulary useful event names things like ‘first’, ‘second’, ‘third’, ‘fourth’ R orders alphabetically adversely effects correctness capture histories. compute.Ws(): moved internal function validateWs() stand-alone internal function. allows usage animation routines. discharge(), summary.StrmDschrg(), plot.StrmDschrg(): added. emp(): added probs= argument result return list. Corrected ylab plotting methods. Added predict method. Added method= argument allows choice using linear regression quantile regression find Ws equation. Modified objects return list (added rawdata component) added back-transformed Wq value regdata (comparison Gerow’s Excel tool). Changed code finding summarized dataframes inside function using cast() reshape package – resulted 3x reduction system.time(). mr.closed(): modified correcting error multiple census methods M, n, m (R) supplied. Also corrected error examples. rlp(): added probs= argument result return list. Corrected ylab plotting methods. Added predict method. PSDval(),RSDval(): added check missing species name user can just type PSDval() get list possible species names. Also added check see RSDlit already loaded. validateWs(): added probs= argument result return list. Corrected ylab plotting methods. Added predict method. Modified EmpQ() internal function use predict() methods emp rlp objects. Streamlined code including compute.Ws() internal function using update() function. Changed code finding summarized dataframes inside function using cast() reshape package – resulted 1.5x reduction system.time(). wetperim(),summary.WetPerim(),plot.WetPerim(): added. wlgm(): major changes included moving internal functions outside wlgm(), adding ability use data= argument, adding ability fit weighted regressions summary statistics. minor changes also made. Updated .Rd file. WSval(),WRval(): added check missing species name user can just type WSval() get list possible species names. Also added check see WSlit already loaded.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-00-12","dir":"Changelog","previous_headings":"","what":"FSA 0.0-12","title":"FSA 0.0-12","text":"Date: 15Jul08 .First.lib: Added add.zerocatch(): added function add zeros catch records species fish caught. limnoprofile.plot(): added function simplify constructing plots depth versus limnological measure depth decreasing top bottom. rlp(): changed default qtype= 8 (7). Added probs= argument allow 75th percentile calculations. emp(): updated help page. Added logical p.n.low exist using cutoff.tail. Renamed items output list. Added table number individuals per length category output list. Added probs= argument allow 75th percentile calculations. Added generics – rather relying rlp() generics. FroeseWs(): added function, generics, perform standard weight equation calculation proposed Froese (2006). validateWs(): added function, generics, perform Willis EmpQ methods assessing length bias standard weight equations. Added probs= argument allow 75th percentile calculations. Added mean= argument allow use means rather quantiles. Modified accept object class FROESE.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-00-11","dir":"Changelog","previous_headings":"","what":"FSA 0.0-11","title":"FSA 0.0-11","text":"Date: 15May08 Moved RForge.net. changed R2.7.0. added dependency Rcapture (example caphist.convert()). anova.RLP(): added function produce anova table standard weight equation. caphist.convert(): added function convert various capture history formats (FSA,event,MARK,Rcapture). emp(): added function, generics, perform Gerow’s EmP method obtaining standard weight equation. fit.plot.RLP(): added function. plot.RLP(): modified color palette gradient rather solid color can used populations. addition, added order.pop= argument order populations smallest largest predicted first length interval. used color gradients make easier see populations cross populations. rlp(): modified function user can choose use -mm length intervals rather 10-mm hardwired. Modified output list somewhat closely match output emp().","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-00-10","dir":"Changelog","previous_headings":"","what":"FSA 0.0-10","title":"FSA 0.0-10","text":"Date: 1May08 lencat(): Modified adding .fact= argument allows user decide resulting variable returned factor variable . default set return factor variable. allows tables new variable include zeros levels new variable contain individuals. makes RSD/PSD (likely age-length key) calculations simpler. Also added drop.levels= argument allow user drop unused levels desired. mr.closed(): function combination old mr.closed1() mr.closed2(). also allows user compute single census estimates multiple sub-groups data (.e., length- age-classes). function also allows user compute overall population esitmate multiple sub-groups present overall SE incl.SE=TRUE used. also corrects SE computations implemented version 0.0-9. change caused construction internal functions – mrc1, mrc2, ci.mrc1, ci.mrc2. mr.closed1(): removed function. Use mr.closed() instead. mr.closed2(): removed function. Use mr.closed() instead. PSDval(): Added mm= argument metric result can returned mm. Also added incl.zero= argument include zer* `value first position vector; useful creating PSD/RSD values. rcumsum(): Added function (NCStats). RSDval(): See PSDval description.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-00-9","dir":"Changelog","previous_headings":"","what":"FSA 0.0-9","title":"FSA 0.0-9","text":"Date: unknown age.comp(): Corrected SE calculation used construct CIs. Changed CI plotting routine use plotCI plotrix package – puts lines rather points ends CIs. Added check computing SDs CIs n=1 measurements . reduces (eliminates?) number warnings given. catch.curve(): added na.rm=TRUE arguments min() max() plot.CC(). Changed type= argument “params” default rather “lm”. makes consistent simulation programs. cc.sim(): Put catch situations CV Z equal zero. Originally, program attempted computed random number normal distribution standard deviation zero. corrected problem n* `lines appearing unless CVs greater zero. ch.convert(): STARTED FUNCTION CONVERT B/W CAPTURE HISTORY FORMATS. N* `RD FILE YET. depletion(): Moved type= argument third position. easily allow type=“Leslie” default (.e., can just enter catch effort vector. FSAsims(): Added “mark-recap” menu section. Added chapman 1-sample M-R item menu. leslie.sim(): corrected conditionals p.surv r.prop asks first value less 1. corrects problem R returning large number warnings. leslie.sim2(): corrected call depletion() type model (“Leslie”) third rather first argument. caused change usage depletion previous version changes. mr.closed1(): Modified output list include estimate variance described Ricker(1975). summary.MRC1(): Modified output (1) given information little easier read, (2) population estimate returned matrix, (3) SE Ricker(1975) can included outputm, (4) label can placed row matrix output. purpose changes allow SE computed allow future functions flexibly use output.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-00-8","dir":"Changelog","previous_headings":"","what":"FSA 0.0-8","title":"FSA 0.0-8","text":"Date: unknown changed RD files. Changed hard-wired quotes RD files. Changed text-based equations latex-based equations markups. fixed Latex compilation problems using RCMD check. age.comp(): Removed single-letter values = argument. rely partial matching. age.key(): Changed default name new column ages “Age” “age”. Added example. coefplot.WLGM(): Changed use plotCI() plotrix package. removed loop programmed. also added sfrac= gap= arguments. Updated RD. depletion(): Removed single-letter lower-case values type= argument. rely partial matching. lencat(): Changed d argument df. lenfreq.expand(): Changed d argument df. mr.open(): Added match.arg functionality ci.type phi.type arguments. plot.RLP(): Added “object <- x” allow x used inside curve() function without confusion. removal(): Removed abbreviated values type= argument. rely partial matching. rlp(): Added examples Murphy et al. (1990) stock.recruit(): Removed abbreviated values type= argument – rely partial matching. Changed sumtype argument . stock.recruit.sim(): Changed model argument type added param argument (make compatible stock.recruit). Moved R S arguments beginning argument string (compatible stock.recruit). STILL NEED ADD SECOND RICKER MODEL. vb.comp(): Changed d argument df. wlgm.RD(): Added example code. Added details.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-00-7","dir":"Changelog","previous_headings":"","what":"FSA 0.0-7","title":"FSA 0.0-7","text":"Date: unknown changed compiling R 2.6.1. added FSA.R file loads required librarys. now depends MASS package creation boxcox.WLGM() function plotrix package elements ycplot(). add.radcap(): Created function add radius--capture one-fish-per-line data frame increments. age.comp(): Added match.arg() call argument. age.key(): Corrected =T =F =TRUE =FALSE. cc.sim(): Corrected use z.param correct use Z.param. coefplot(): new generic function plotting coefficients Weisberg Linear Growth Model analysis. g.convert(): Changed arguments data measure.var df .var. Included match.arg() type argument. Moved type argument now default. Added .pre argument allows user identify input variables common prefix rather list .var. Added .pre argument allows user control prefix newly created variables output data frame. Updated help file. g.reshape(): Changed arguments data prefix df .pre. Deleted measure.var argument. Moved new .pre argument forward na.rm argument backward argument list. Used .pre identify measure.var variables send melt function. id.var left blank (.pre ) id.var remaining variables identified .pre. val.name argument set equal .pre default. leslie.sim(): Corrected call old leslie() function correct call depletion() function type=\"Leslie\". leslie.sim2(): Corrected two calls old leslie() function correct calls depletion() function type=\"Leslie\". leslie.rand.run(): Moved R Documentation alias FSA-internal.RD. mr.closed2(): Forced function use lowess() function stats rather gplots package (loaded NCStats). Also changed loess.f argument f added iter argument sending lowess(). confint.MRO(): Put logical catch printing confidence intervals ci.type=\"Manly\" CIs B computed. summary.MRO(): Put logical catch printing estimates ci.type=\"Manly\" SEs computed. plot.RLP(): Corrected =T =F =TRUE =FALSE. wlgm(): Created method number generics (alias, anova, boxcox, coef, coefplot, confint, ycplot) performing Weisberg Linear Growth Model. ycplot(): new generic function creating year-class plot Weisberg Linear Growth Model analysis.","code":""},{"path":"https://fishr-core-team.github.io/FSA/news/index.html","id":"fsa-00-6","dir":"Changelog","previous_headings":"","what":"FSA 0.0-6","title":"FSA 0.0-6","text":"Date: unknown agebias.plot(): deleted replaced agecomp plot.AgeComp functions. agesunflower.plot(): deleted replaced agecomp plot.AgeComp functions. agecomp(): new function , along extractor functions, combines functionality old age.tests(), age.symmetry(), agebias.plot(), agesunflower.plot(). Allows seamless comparison ageing reads. plot.AgeComp(): extractor function objects saved agecomp() function. replaces old agebias.plot() agesunflower.plot() functions. summary.Agecomp(): extractor function objects saved agecomp() function. replaces old age.tests() age.symmetry() functions. age.symmetry(): deleted replaced agecomp() summary.AgeComp() functions. age.tests(): deleted replaced agecomp() summary.AgeComp() functions. cc.sim(): modified graphic (1) include assumption violation labels top graph (2) label y-axis “log(Catch)” rather “ln(Catch)”. delury(): deleted replaced depletion() function. See notes depletion() function. depletion(): created new function performs Leslie Delury method determined user-defined argument type. function replaces old leslie() delury() functions. extractor functions class “LeslieDelury” now changed class “Depletion”. plot.Depletion(): correct xlab defaults “Cumulative Effort” Delury method. leslie(): deleted replaced depletion function. See notes depletion function. leslie.sim(): modified graphic include assumption violation labels top graph. mr.open(): modified est.N() internal function N set equal n N<n. words, sample size time larger estimated population size time estimated population size set equal observed sample size. corrects problem N.se calculation attempting take square root negative number causing mr.open() function shut . pass.removal(): changed name removal. removal(): new name old pass.removal function. rlp(): new name old (upper-case) RLP. RLP(): changed name (lower-case) rlp.","code":""}]
